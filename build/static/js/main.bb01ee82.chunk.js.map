{"version":3,"sources":["layouts/Footer.jsx","components/Menu.js","components/Navigation.jsx","layouts/Header.jsx","components/Avatar.jsx","components/Logout.jsx","components/Button.jsx","pages/LandingPage.jsx","contexts/DatasContext.jsx","layouts/Main.jsx","layouts/Layout.jsx","utilities/serialize.js","api/Decks.jsx","components/Flash.jsx","components/Plus.jsx","components/List.jsx","components/Deck.jsx","components/Pagination.jsx","components/Filters.jsx","components/Popup.jsx","pages/DecksPage.jsx","img/cards/merrlyn.jpg","components/CheckBox.jsx","components/Card.jsx","pages/CardsPage.jsx","api/Profile.jsx","components/Loader.jsx","modules/regex.js","pages/ProfilePage.jsx","components/UserDefault.jsx","components/User.jsx","components/InputText.jsx","components/SearchBar.jsx","pages/GamersPage.jsx","pages/ErrorPage.jsx","components/SocialButton.jsx","pages/LoginPage.jsx","pages/SettingsDeckPage.jsx","components/BackButton.jsx","components/NavButton.jsx","utilities/checkRegex.js","pages/AddingDeckPage.jsx","pages/ChoicePage.jsx","pages/SubscribePage.jsx","components/StarterDeck.jsx","pages/StarterPage.jsx","img/cards/framus.jpg","contexts/CardsContext.jsx","pages/IndividualPage.jsx","pages/DeckBuildOptions.jsx","api/Eden.jsx","api/HolyBook.jsx","api/Register.jsx","pages/DeckCreate.jsx","pages/DeckImport.jsx","components/Return.jsx","pages/EmptyDecksList.jsx","pages/ModifyDeckPage.jsx","components/PopupContainer.jsx","pages/SubDeckPage.jsx","utilities/VhInPixels.jsx","App.jsx","index.js"],"names":["Footer","props","classes","className","children","Menu","initialState","item__1","item__2","item__3","item__4","useState","isClicked","setIsClicked","handleClick","e","persist","field","currentTarget","id","prevstate","useEffect","onClick","to","Navigation","pages","map","page","index","exact","strict","path","component","Header","Avatar","url","alt","src","Logout","containerClasses","Button","bgcolor","color","size","text","padding","type","style","backgroundColor","width","LandingPage","history","useHistory","uri","preventDefault","push","handleConnexion","DatasContext","createContext","DatasProvider","1","2","3","4","5","6","7","kingdoms","setKingdoms","Provider","value","Main","layout","Array","elmt","serialize","arr","TypeError","toString","getUserDecks","options","a","settings","method","credentials","URL","params","sens","order_by","Object","keys","forEach","key","searchParams","append","fetch","response","json","datas","getDecksByKingdoms","form","FormData","body","mode","getOne","createUserDeck","updateOne","deleteUserDeck","Flash","message","errorClass","flash","successClass","timing","handleFlash","classesState","setClasses","afterClasses","setTimeout","replace","Plus","List","Deck","title","total_ec","description","num_cards","listStateSetter","listState","deleteStateSetter","reqOptState","removeData","deleteResponse","getResponse","code","state","Pagination","setPage","setSize","containerTextBlockClasses","leftClasses","rightClasses","textClasses","listSize","nextPage","canNext","setCanNext","newObj","res","length","Number","Filters","isVisible","Popup","buttonResetText","actionClose","actionReset","actionSelect","setCheckBoxes","checkboxesState","handleClickCheckBoxes","checkboxes","from","document","getElementsByClassName","querySelectorAll","checkBoxesState","checked","enctype","htmlFor","name","onChange","selected","values","displayed","field_name","DecksPage","decksList","setDecksList","flashState","setFlashState","setDeleteResponse","filterClicked","setFilter","reqOpt","setReqOpt","useContext","popupDatas","prevState","newObject","newKingdomsArray","target","includes","indexOf","splice","newFlashState","handleDelete","newState","handlePage","newPage","Layout","console","log","deck_name","deleteState","marginTop","marginBottom","eventsToListen","newSize","setOptions","CheckBox","Card","CardsPage","cards","Image","getProfile","updateProfile","Loader","condition","setLoaded","LoaderIcon","loaderIcon","regexModule","regex_order","regex_id","regex_username","regex_name","regex_start_with","ProfileForm","useParams","firstname","lastname","gender","username","is_visible","allow_collections","userInfos","setUserInfos","isLoaded","setIsLoaded","firstnameInput","useRef","lastnameInput","usernameInput","emailInput","test","current","classList","contains","remove","add","regex_email","email","error","trim","ref","placeholder","RiLoader3Line","UserDefault","User","content","img","location","deck_num","InputText","search","onBlur","SearchBar","inputClasses","iconClasses","GamersPage","searchValue","setSearchValue","ErrorPage","SocialButton","href","dotenv","config","Login","SettingsDeckPage","deckName","BackButton","NavButton","result","checkRegex","regex","AddingDeckPage","visibility","fieldValues","setFieldValues","inputState","setInputState","createState","setCreateState","setFlash","flashMessage","setFlashMessage","handleCreate","regex_deck_name","reducer","action","choice","ChoicePage","useReducer","dispatch","SubscribePage","formValues","setValue","handleChange","handleBlur","data","StarterDeck","infos","EC","StarterPage","cards_num","goBack","CardsContext","IndividualPage","isSelected","setIsSelected","pathname","split","pop","some","DeckBuildOptions","getEden","getEdenCards","createEden","deleteEden","getHolyBook","getHolyBookCards","createHolyBook","deleteHolyBook","getRegister","getRegisterCards","createRegister","deleteRegister","DeckCreate","eden","register","holybook","subdecks","setSubDecks","loaded","handleClickNav","handleDeleteEden","handleDeleteRegister","handleDeleteHolyBook","undefined","qty","DeckImport","Return","EmptyDecksList","ModifyDeckPage","deckInfos","setDeckInfos","setResponse","kingdom","updateRes","newArr","newSet","Set","sort","PopupContainer","forwardRef","SubDeckPage","endUrl","setCardsList","isEmpty","setIsEmpty","setTest","popupRef","textAlign","VhInPixels","vh","window","innerHeight","addEventListener","documentElement","setProperty","App","LoginPage","ProfilePage","basename","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bb01ee82.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Footer = (props) => {\r\n    const {classes} = props; \r\n    return (\r\n        <footer className={classes}>\r\n            {props.children}\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Link } from 'react-router-dom';\r\nimport {useState, useEffect} from 'react';\r\nimport {RiSettings3Fill,RiFileList2Fill} from 'react-icons/ri';\r\nimport {GrStackOverflow} from 'react-icons/gr';\r\nimport {HiOutlineUsers} from 'react-icons/hi';\r\nimport './Menu.css';\r\n\r\n\r\n\r\nfunction Menu (props) {\r\n    const {classes} = props;\r\n    const initialState = {\r\n        item__1: false,\r\n        item__2: false,\r\n        item__3: false,\r\n        item__4: false\r\n    }\r\n\r\n    const [isClicked, setIsClicked] = useState(initialState);\r\n\r\n    const handleClick = (e) => {\r\n           e.persist()\r\n           const field = e.currentTarget.id\r\n           setIsClicked(initialState)\r\n           setIsClicked(prevstate => ({...prevstate,\r\n               [field]: true\r\n           }))            \r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsClicked({item__2:true})\r\n    },[])\r\n\r\n    return (\r\n        <nav className={classes}>\r\n            \r\n            <ul className=\"menu\" >\r\n                <div className=\"menu__bubble\"></div>\r\n                <li id=\"item__1\" className={isClicked.item__1 ? \"menu__item move-up\" : \"menu__item\"} onClick={handleClick}>\r\n                    <Link className=\"menu__link\" to=\"/profile\">\r\n                        <RiSettings3Fill className=\"menu__icon\"/>\r\n                    </Link>\r\n                </li>\r\n                <li id=\"item__2\" className={isClicked.item__2 ? \"menu__item move-up\" : \"menu__item\"} onClick={handleClick}>\r\n                    <Link   id=\"item__2\" className=\"menu__link\" to=\"/decks\">\r\n                        <RiFileList2Fill className=\"menu__icon\"/>\r\n                    </Link>\r\n                </li>\r\n                <li id=\"item__3\"  className={isClicked.item__3 ? \"menu__item move-up\" : \"menu__item\"} onClick={handleClick}>\r\n                    <Link className=\"menu__link\" to=\"/cards\">\r\n                        <GrStackOverflow className=\"menu__icon\"/>\r\n                    </Link>\r\n                </li>\r\n                <li id=\"item__4\" className={isClicked.item__4 ? \"menu__item move-up\" : \"menu__item\"} onClick={handleClick}>\r\n                    <Link className=\"menu__link\" to=\"/gamers\">\r\n                        <HiOutlineUsers className=\"menu__icon\"/>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Menu;","import {Switch,Route} from 'react-router-dom'\r\n\r\n\r\nfunction Navigation({pages}) {\r\n    return(\r\n        \r\n        <Switch > \r\n            {pages.map((page, index) => (    \r\n                    <Route \r\n                        key={index} exact={page.exact ?? page.exact} \r\n                        strict={page.strict ?? page.strict} path={page.path ?? page.path}\r\n                        component={page.props ? () => <page.component {...page.props} /> : page.component}\r\n                    />\r\n                ))}\r\n        </Switch>       \r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react'\r\n\r\nconst Header = (props) => {\r\n    const {classes} = props;\r\n    return (\r\n       <header className={classes ?? \"header\"}>\r\n           {props.children}\r\n       </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport {AiOutlineUser} from 'react-icons/ai'\r\n\r\nfunction Avatar(props){\r\n    const {classes, url, alt} = props;\r\n\r\n    return (\r\n        <>\r\n            {url ? \r\n                <img className={classes ?? \"avatar\"} src={url} alt={alt}/> \r\n                    : \r\n                <div className={classes ?? \"avatar\"}><AiOutlineUser /></div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport {AiOutlineLogout} from 'react-icons/ai';\r\n\r\nfunction Logout(props){\r\n    const {containerClasses} = props;\r\n\r\n    return (\r\n        <div className={containerClasses ?? 'logout'}>\r\n            <AiOutlineLogout className=\"menu__icon menu__icon-logout\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logout;","import React from 'react'\r\nconst Button = (props) => {\r\n    const {id, classes,bgcolor,color, size,onClick, text, padding} = props\r\n    \r\n    return (\r\n\r\n        <button \r\n            id={id ? id : null}\r\n            type=\"button\"\r\n            className = {classes ? classes : \"btn\"}\r\n            style={{\r\n                padding: padding ?? padding,\r\n                backgroundColor:bgcolor ?? bgcolor,\r\n                color:color ?? color,\r\n                width: size ?? size\r\n            }}\r\n            onClick={onClick ?? onClick}\r\n        >\r\n        {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react';\r\nimport Button from '../components/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LandingPage = (props) => {\r\n    \r\n    let history = useHistory();\r\n\r\n    const handleConnexion = (e,uri) => {\r\n        e.preventDefault();\r\n        history.push(uri)\r\n    }\r\n \r\n    return (\r\n            <>\r\n                <Button classes=\"btn\" text=\"Connexion\" onClick={e => handleConnexion(e,'/login')}/>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default LandingPage;\r\n","import { useState, createContext } from 'react';\r\n\r\nconst DatasContext = createContext();\r\n\r\nfunction DatasProvider(props){\r\n    \r\n    const [kingdoms, setKingdoms] = useState({\r\n        1:'Poseidia',\r\n        2:'Eondra',\r\n        3:'Endless night',\r\n        4:'MetaScience',\r\n        5:'The light\\'s temple',\r\n        6:'Celestial purity',\r\n        7:'The saber\\'s way'\r\n    });\r\n\r\n    return (\r\n        <DatasContext.Provider value={{kingdoms, setKingdoms}}>\r\n            {props.children}\r\n        </DatasContext.Provider>\r\n    )\r\n}\r\n\r\nexport { DatasProvider };","import React from 'react'\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <main id=\"main\" className={props.classes}>\r\n            {props.children}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Main from './Main'\r\n\r\nconst layout = ({children}) => {\r\n        return (\r\n        <>\r\n           <Main classes=\"page\">\r\n               {children instanceof Array ? children.map((elmt, index) => {\r\n                   return elmt;\r\n                }) : ''}\r\n           </Main> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default layout\r\n","export function serialize(arr){\r\n    if(!arr instanceof Array){\r\n        throw TypeError(\"The serialize function argument should be an Array\");\r\n    }\r\n\r\n    return arr.toString();\r\n}","import {serialize} from '../utilities/serialize.js';\r\n\r\nasync function getAllDecks(){\r\n\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    };\r\n\r\n    let response = await fetch('https://test-seven.site/api/decks/shared', settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getUserDecks(options){\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    };\r\n    let url = new URL('https://test-seven.site/api/decks');\r\n\r\n    let params = {\r\n        page: options.page ? options.page : 1, \r\n        size: options.size ? options.size : 10,\r\n        sens: options.sens ? options.sens : 'asc',\r\n        order_by: options.order_by ? options.order_by : 'id'\r\n    };\r\n\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\r\n    let response = await fetch(url, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n    \r\n}\r\n\r\nasync function getDecksByKingdoms(options){\r\n    let form = new FormData();\r\n    let kingdoms = await serialize(options.kingdoms);\r\n    form.append('kingdoms', kingdoms);\r\n    let settings = {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: form\r\n    };\r\n\r\n    let url = new URL('https://test-seven.site/api/decks/kingdoms');\r\n\r\n    let params = {\r\n        mode: options.mode ? options.mode : \"\",\r\n        page: options.page ? options.page : 1, \r\n        size: options.size ? options.size : 10,\r\n        sens: options.sens ? options.sens : 'asc',\r\n        order_by: options.order_by ? options.order_by : 'id'\r\n    };\r\n\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\r\n    let response = await fetch(url, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getOne(id){\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n    };\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function createUserDeck(form){\r\n\r\n    let settings = {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: form\r\n    };\r\n\r\n    let response = await fetch('https://test-seven.site/api/decks/add', settings);\r\n    let datas = response.json();\r\n    return datas;\r\n}\r\n\r\nasync function updateOne(form, id){\r\n\r\n    let settings = {\r\n        method: 'PATCH',\r\n        credentials: 'include',\r\n        body: form\r\n    };\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/update/${id}`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n\r\n}\r\n\r\nasync function deleteUserDeck(id){\r\n    let settings = {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n    };\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/delete/${id}`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n\r\n}\r\n\r\nexport { getAllDecks, getDecksByKingdoms, getUserDecks, getOne, updateOne, deleteUserDeck, createUserDeck };","import React, {useState, useEffect} from 'react'\r\n\r\nfunction Flash(props){\r\n\r\n    const {message, classes, errorClass,flash ,successClass, timing, handleFlash} = props;\r\n    const [classesState, setClasses] = useState(classes);\r\n    let afterClasses = '';\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(flash === false){\r\n            setClasses(classes + ' ' + errorClass)\r\n            setTimeout(() => {\r\n                afterClasses = classes.replace(errorClass, '');\r\n                setClasses(afterClasses);\r\n            }, timing ? timing : 1000);\r\n\r\n        }\r\n\r\n        if(flash === true){\r\n            setClasses(classes + ' ' + successClass);\r\n            setTimeout(() => {\r\n                afterClasses = classes.replace(successClass, '');\r\n                setClasses(afterClasses);\r\n            }, timing ? timing : 1000);\r\n        }\r\n\r\n        handleFlash(null);\r\n\r\n    },[flash])\r\n\r\n    return(\r\n        <>\r\n            <p className={classesState}>{message}</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Flash;","import React from 'react'\r\nimport {GrAddCircle} from 'react-icons/gr'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Plus = (props) => {\r\n    return (\r\n        <Link className=\"add__button mb-4\" to={props.to}><GrAddCircle/></Link>\r\n    )\r\n}\r\n\r\nexport default Plus\r\n","import React from 'react'\r\n\r\nconst List = (props) => {\r\n    const {classes} = props\r\n    return (\r\n        <ul className={classes}>\r\n            {props.children}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport {deleteUserDeck, getUserDecks} from '../api/Decks';\r\nimport {AiFillCloseCircle} from 'react-icons/ai';\r\nimport {BsPencil} from 'react-icons/bs';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Deck = (props) => {\r\n    const {\r\n            id, \r\n            title,\r\n            total_ec, \r\n            description, \r\n            num_cards, \r\n            listState, \r\n            listStateSetter, \r\n            handleFlash, \r\n            deleteStateSetter, \r\n            reqOptState\r\n        } = props;\r\n    \r\n    const removeData = async () => {\r\n        let deleteResponse = await deleteUserDeck(id);\r\n        let getResponse = await getUserDecks(reqOptState);\r\n        \r\n        if(deleteResponse.code === 200){\r\n            handleFlash(true);\r\n        }else if(deleteResponse.code !== 200){\r\n            handleFlash(false);\r\n        }else{\r\n            handleFlash(null);\r\n        }\r\n        \r\n        listStateSetter(getResponse);\r\n        deleteStateSetter(deleteResponse);\r\n    }\r\n\r\n    const handleClick = (e, state, id) => {\r\n        e.preventDefault();\r\n        removeData();\r\n    }\r\n    \r\n    return (\r\n        <li key={id} className=\"deck__block\">\r\n            <div className=\"deck__inner--left\">\r\n                <h3 className=\"deck__title\">{title}</h3>\r\n                <p className=\"deck__infos\">{description}</p>\r\n                <div className=\"deck__total\">Total : {num_cards}</div>\r\n            </div>\r\n            <div className=\"deck__inner--right\">\r\n                <div className=\"inner__right--text\">\r\n                    <h3 className=\"deck__ec--title\">Ec :</h3>\r\n                    <span className=\"deck__ec--value\">{total_ec}</span>\r\n                </div>\r\n                <div className=\"inner__right--actions\">\r\n                    <div className=\"action\" onClick={(e) => handleClick(e, listState, id)}><AiFillCloseCircle/></div>\r\n                    <Link className=\"action\" to={`/decks/${id}/modify`}><BsPencil/></Link>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Deck;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {BsChevronLeft,BsChevronRight} from 'react-icons/bs'\r\n\r\n\r\nfunction Pagination(props){\r\n    const {\r\n        options, \r\n        setPage, \r\n        setSize , \r\n        containerClasses,\r\n        containerTextBlockClasses, \r\n        leftClasses, \r\n        rightClasses, \r\n        textClasses, \r\n        listSize = [],\r\n        nextPage\r\n    } = props;\r\n\r\n    const [canNext, setCanNext] = useState(true);\r\n\r\n    useEffect(async () => {\r\n\r\n        let newObj = {...options};\r\n        newObj.page = options.page + 1;\r\n        let res = await nextPage(newObj);\r\n\r\n        if(res.code === 200 && res.message.length === 0){\r\n            setCanNext(false);\r\n        }else{\r\n            setCanNext(true);\r\n        }\r\n\r\n    },[options]);\r\n\r\n    return (\r\n        <div className={containerClasses ?? \"pagination__block\"} >\r\n            <div className={leftClasses ?? \"pagination__arrow\"} \r\n                 onClick={(e) => setPage(e, Number(options.page) - 1, options)}\r\n            >\r\n                <BsChevronLeft/>\r\n            </div>\r\n                <div className={containerTextBlockClasses ?? \"pagination__text--block\"}>\r\n                {\r\n                    listSize.map((elmt, index) => {\r\n                        return <p key={index} className={textClasses ?? \"pagination__text\"} onClick={(e) => setSize(e, elmt)}>{elmt}</p>\r\n                    })\r\n                }\r\n                </div>\r\n            <div className={rightClasses ?? \"pagination__arrow\"} \r\n                 onClick={canNext === true ? (e) => setPage(e, Number(options.page) + 1, options) : (e) => setPage(e, 1, options)}\r\n            >\r\n                <BsChevronRight/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport {BsFilterRight} from 'react-icons/bs';\r\n\r\nfunction Filters(props){\r\n    const {containerClasses, onClick, isVisible} = props;\r\n\r\n    return (\r\n        <div className={containerClasses ?? \"filter__container\"} onClick={(e) => onClick(e, isVisible)}>\r\n            <BsFilterRight />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters;","import React,{ useEffect, useRef} from 'react';\r\nimport {AiFillCloseCircle} from 'react-icons/ai'\r\n\r\nfunction Popup(props) {\r\n\r\n    const {\r\n            datas, \r\n            buttonResetText, \r\n            actionClose, \r\n            actionReset, \r\n            actionSelect,\r\n            setCheckBoxes,\r\n            checkboxesState,\r\n            mode,\r\n        } = props;\r\n\r\n    const handleClickCheckBoxes = (e) => {\r\n        let checkboxes = null;\r\n\r\n        if(mode === 'unique'){\r\n            checkboxes = Array.from(document.getElementsByClassName('option__kingdom'));\r\n        }else{\r\n            checkboxes = Array.from(document.querySelectorAll('input[type=\"checkbox\"]')) \r\n        }\r\n\r\n        let checkBoxesState = [];\r\n        checkboxes.map(elmt => {\r\n            return checkBoxesState.push(elmt.checked);\r\n        });\r\n        setCheckBoxes(checkBoxesState);\r\n    }\r\n\r\n    return (\r\n        <div className=\"popup__container\">\r\n            <div className=\"popup__inner--container\">\r\n            <div className=\"popup__box\">\r\n                <form className=\"popup__form\" enctype=\"multipart/form-data\">\r\n                    <div className=\"popup__heading\">\r\n                        <div  className=\"popup__close\" onClick={e => actionClose(e)}>\r\n                            <AiFillCloseCircle />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"popup__form--section\" >\r\n                        <h4 className=\"popup__option--name\">Options for kingdoms</h4>\r\n                        <div className=\"popup__option--container\">\r\n                            <label className=\"popup__option--label\" htmlFor=\"options-select\">Set options :</label>\r\n                            <select id=\"popup__options--select\" name=\"kingdom-options-set\" onChange={actionSelect}>\r\n                                {mode === '' ?\r\n                                    <option value=\"\" selected>Default</option>\r\n                                    :\r\n                                    <option value=\"\">Default</option>\r\n                                }\r\n                                {mode === 'unique' ? \r\n                                    <option value=\"unique\" selected>Unique</option> \r\n                                    : \r\n                                    <option value=\"unique\" >Unique</option>\r\n                                }\r\n                                {mode === 'combination' ? \r\n                                    <option value=\"combination\" selected>Combination</option>\r\n                                    :\r\n                                    <option value=\"combination\">Combination</option>\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    {Object.keys(datas).map(title => {\r\n                        if(datas[title].type === \"checkbox\"){                            \r\n                            return (\r\n                                <div className=\"popup__form--section \" onClick={handleClickCheckBoxes} onChange={datas[title].onChange} >\r\n                                        <h4 className=\"popup__option--name\" >{title}</h4>\r\n                                        {datas[title].values.map((elmt, index) => {\r\n                                                    return (\r\n                                                        <div className=\"popup__option--container\">\r\n                                                            <label className=\"popup__option--label\" htmlFor={elmt}>{datas[title].displayed[index]}</label>\r\n                                                            <input id={elmt} \r\n                                                                   className={mode === 'unique' ? 'popup__option--input option__kingdom': \"popup__option--input\"} \r\n                                                                   type={mode === \"unique\" ? \"radio\" : \"checkbox\"} \r\n                                                                   name={datas[title].field_name} \r\n                                                                   checked={checkboxesState[index]} \r\n                                                                   value={elmt}\r\n                                                            />\r\n                                                        </div>\r\n                                                    )\r\n                                                \r\n                                            })}\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                        if(datas[title].type === \"radio\"){           \r\n                            return (\r\n                                <div className=\"popup__form--section\">\r\n                                    <h4 className=\"popup__option--name\">{title}</h4>\r\n                                        {datas[title].values.map((elmt,index)=> {\r\n                                                return (\r\n                                                    <div className=\"popup__option--container\">\r\n                                                        <label className=\"popup__option--label\" htmlFor={elmt}>{datas[title].displayed[index]}</label>                \r\n                                                        <input className=\"popup__option--input\" type=\"radio\" id={elmt} name={datas[title].field_name} onChange={datas[title].onChange} value={datas[title].values[index]}/>\r\n                                                    </div>\r\n                                                )\r\n                                        })}\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    })}\r\n                    <button type=\"reset\" className=\"btn popup__button\" onClick={actionReset}>{buttonResetText}</button>\r\n                </form>\r\n            </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Popup;\r\n","import React,{useEffect, useState, useContext} from 'react';\r\n\r\n/* context */\r\nimport { DatasProvider } from '../contexts/DatasContext';\r\n\r\n/* layout */\r\nimport Layout from '../layouts/Layout';\r\n\r\n/* api */\r\nimport { getUserDecks, getDecksByKingdoms} from '../api/Decks';\r\n\r\n/* components */\r\nimport Flash from '../components/Flash'\r\nimport Plus from '../components/Plus';\r\nimport List from '../components/List';\r\nimport Deck from '../components/Deck';\r\nimport Pagination from '../components/Pagination';\r\nimport Filters from '../components/Filters';\r\nimport Popup from '../components/Popup';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst DecksPage = (props) => {\r\n\r\n    const [decksList, setDecksList] = useState({\r\n        code: 200,\r\n        message: []\r\n    });\r\n    const [flashState, setFlashState] = useState(null);\r\n    const [deleteResponse, setDeleteResponse] = useState({});\r\n    const [filterClicked, setFilter] = useState(true);\r\n    const [reqOpt, setReqOpt] = useState({\r\n        kingdoms: [],\r\n        mode: '',\r\n        page: 1,\r\n        size: 10,\r\n        order_by: 'id',\r\n        sens: 'asc'\r\n    });\r\n\r\n    const [checkboxes, setCheckBoxes] = useState([false, false, false, false,false,false,false]);\r\n    const datas = useContext(DatasProvider);\r\n    /* datas for popup form */\r\n    const popupDatas = {\r\n        \"List by kingdoms\": {\r\n            displayed: ['Poseidia', 'Eondra', 'Endless night', 'MetaScience', 'The light\\'s temple', 'Celestial purity', 'The saber\\'s way'],\r\n            values: [1, 2, 3, 4, 5, 6, 7],\r\n            field_name: 'kingdoms',\r\n            type: \"checkbox\",\r\n            onChange: (e) => {\r\n                setReqOpt(prevState => {\r\n                    let newObject = {...prevState};\r\n                    let newKingdomsArray = null;\r\n\r\n                    if(prevState.kingdoms instanceof Array){\r\n                        newKingdomsArray = [...prevState.kingdoms];\r\n                    }\r\n\r\n                    if(e.target.checked === true && !newKingdomsArray.includes(e.target.value)){\r\n\r\n                        if(prevState.mode === 'combination' || prevState.mode === ''){\r\n                            newKingdomsArray.push(e.target.value)\r\n                        }\r\n                        \r\n                        if(prevState.mode === 'unique'){\r\n                            newKingdomsArray = [e.target.value]\r\n                        }\r\n\r\n                    };\r\n\r\n                    if(e.target.checked === false) {\r\n                        let index = newKingdomsArray.indexOf(e.target.value);\r\n                        if(index > -1){\r\n                            newKingdomsArray.splice(index, 1);\r\n                        }\r\n                    }\r\n\r\n                    newObject.kingdoms = newKingdomsArray;\r\n                    newObject.order_by = 'kingdom'\r\n                    return newObject;\r\n                });\r\n            }\r\n        },\r\n        \"Order by\": {\r\n            displayed: ['Deck name' ,'Kingdom' ,'Total ec' , 'Num cards'],           \r\n            values: ['deck_name' ,'kingdom' ,'total_ec' , 'num_cards'],\r\n            type: \"radio\",\r\n            field_name: \"order_by\",\r\n            onChange: (e) => {\r\n                setReqOpt({...reqOpt, order_by: e.target.value});\r\n            }\r\n        },\r\n        \"Sens\": {\r\n            displayed: [\"Descendant\"],\r\n            values: [\"desc\"],\r\n            type: \"radio\",\r\n            field_name: \"sens\",\r\n            onChange: (e) => {\r\n                setReqOpt({...reqOpt, sens: e.target.value});\r\n            }\r\n        }\r\n    }\r\n\r\n    /* handle flash messages */\r\n    const handleFlash = (newFlashState) => {\r\n        setFlashState(newFlashState);\r\n    };\r\n\r\n    const handleDelete = (newState) => {\r\n        setDeleteResponse(newState)\r\n    }\r\n\r\n    /* handling fucntion for filter */\r\n    const handleClickFilter = (e, isVisible) => {\r\n        e.preventDefault();\r\n        setFilter(!isVisible);\r\n    } \r\n\r\n    /* handling functions for pagination */\r\n    const handlePage = async (e, newPage, options) => {\r\n        e.preventDefault();\r\n        if(newPage <= 0){\r\n            return;\r\n        }else{\r\n            setReqOpt({...options, page: newPage});  \r\n        }             \r\n    }\r\n\r\n    const handleSize = (e, newSize) => {\r\n        e.preventDefault();\r\n        setReqOpt({...reqOpt, size: newSize});\r\n    }\r\n\r\n    /* handling functions for popup */\r\n    const handleSelectPopup = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(e.target.value === 'unique'){\r\n            setReqOpt({...reqOpt, mode: 'unique'});\r\n        }\r\n\r\n        if(e.target.value === 'combination'){\r\n            setReqOpt({...reqOpt, mode:'combination'});\r\n        }\r\n\r\n        if(e.target.value === ''){\r\n            setReqOpt({...reqOpt, mode:''});\r\n        }\r\n    }\r\n\r\n    const handleClosePopup = (e) => {\r\n        e.preventDefault();\r\n        setFilter(true);\r\n    }\r\n\r\n    const handleResetPopup = (e) => {\r\n        setReqOpt({\r\n            kingdoms:[],\r\n            mode:'',\r\n            page: 1,\r\n            size: 10,\r\n            order_by: 'id',\r\n            sens: 'asc'\r\n        });\r\n        setFilter(true);\r\n    }\r\n\r\n    useEffect(async () => {\r\n        let response = null;\r\n        \r\n        if(reqOpt.kingdoms.length > 0){\r\n            response = await getDecksByKingdoms(reqOpt);\r\n        }else{\r\n            response = await getUserDecks(reqOpt);\r\n        }\r\n\r\n        if(response.code === 200){\r\n            setDecksList(response);\r\n        }else if(response.code !== 200 && decksList.message instanceof Array){\r\n            setDecksList([]);\r\n            setDeleteResponse(response);\r\n            setFlashState(true);\r\n        }else{\r\n            setFlashState(null);\r\n        }\r\n    },[reqOpt]);\r\n\r\n    useEffect(async () => {\r\n        let response = await getUserDecks(reqOpt);\r\n        setDecksList(response);\r\n    },[]);\r\n\r\n    if(decksList.message && decksList.message instanceof Array){\r\n        return (\r\n            <Layout>\r\n                <Filters containerClasses=\"filter__container row justify-end mt-3 mb-2 px-2\" isVisible={filterClicked} onClick={handleClickFilter}/>\r\n                {console.log(datas)}\r\n                <List classes=\"list__content layout layout__1\">\r\n                      { \r\n                        decksList.message.length > 0 ?\r\n                          decksList.message.map(elmt => {\r\n                                  return(\r\n                                      <Deck id={elmt.id} \r\n                                            title={elmt.deck_name} \r\n                                            description={elmt.description} \r\n                                            num_cards={elmt.num_cards} \r\n                                            total_ec={elmt.total_ec}\r\n                                            listState = {decksList}\r\n                                            listStateSetter = {setDecksList}\r\n                                            deleteState = {deleteResponse}\r\n                                            deleteStateSetter = {handleDelete}\r\n                                            handleFlash = {handleFlash}\r\n                                            reqOptState = {reqOpt}\r\n                                      />)\r\n                              }\r\n                          ) : \r\n                        <p style ={{color: \"black\",marginTop:\"auto\",marginBottom:\"auto\"}}>\r\n                            Empty \r\n                        </p>\r\n\r\n                        }r\n                </List>\r\n                <Flash \r\n                    classes=\"message__flash\" \r\n                    errorClass=\"message__flash-error\" \r\n                    successClass=\"message__flash-done\" \r\n                    message={deleteResponse.message ? deleteResponse.message : \"flash message\"}\r\n                    timing={750}\r\n                    flash={flashState}\r\n                    handleFlash= {handleFlash}\r\n                />\r\n                <Pagination \r\n                    options = {reqOpt}\r\n                    eventsToListen = {filterClicked}\r\n                    containerClasses = \"pagination__block my-3 row justify-between\"\r\n                    containerTextBlockClasses = {\"pagination__text--block row justify-between\"} \r\n                    setPage={handlePage} \r\n                    setSize={handleSize} \r\n                    listSize={[10,20,40]}\r\n                    nextPage={reqOpt.kingdoms.length > 0 ? getDecksByKingdoms : getUserDecks}\r\n                />\r\n                <Plus to={'/decks/create'}/>\r\n                {\r\n                    filterClicked || \r\n                        <Popup\r\n                            mode = {reqOpt.mode}\r\n                            setOptions = {setReqOpt}\r\n                            datas={popupDatas}  \r\n                            buttonResetText=\"Reset\"\r\n                            checkboxesState = {checkboxes}\r\n                            setCheckBoxes = {setCheckBoxes}\r\n                            actionSelect = {handleSelectPopup}\r\n                            actionClose={handleClosePopup}\r\n                            actionReset={handleResetPopup}\r\n                        />\r\n                }\r\n              </Layout>\r\n      )\r\n    }else{\r\n        return (<Redirect to=\"/decks/not-found\"/>);\r\n    }\r\n}\r\n\r\n\r\nexport default DecksPage;\r\n","export default __webpack_public_path__ + \"static/media/merrlyn.a1bb939c.jpg\";","import React from 'react'\r\n\r\nconst CheckBox = (props) => {\r\n    \r\n    const {classes, name, id,text, checked, onChange} = props\r\n\r\n    return (\r\n        <div className=\"row\">\r\n          <input id={name} className={classes} type=\"checkbox\" name={name} onChange={onChange} checked={checked}/>\r\n          <label className=\"form__label\" htmlFor={id}>{text}</label>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckBox\r\n","import React from 'react'\r\nimport './Card.css'\r\nimport CheckBox from './CheckBox'\r\n\r\n\r\nconst Card = (props) => {\r\n    const {id,url,alt,mode,onChange} = props\r\n\r\n    return (\r\n        <li className=\"card__container\" onChange={onChange}>\r\n            <img className=\"card__image\" src={url} alt={alt}/>\r\n            {mode === 'edit' ? <CheckBox id={id} classes=\"card__checkbox\"/> : ''} \r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport Filters from '../components/Filters';\r\nimport Plus from '../components/Plus';\r\nimport Image from '../../src/img/cards/merrlyn.jpg';\r\nimport Main from \"../layouts/Main\";\r\nimport List from '../components/List';\r\nimport Card from '../components/Card';\r\nimport Pagination from \"../components/Pagination\";\r\n\r\nconst CardsPage = (props) => {\r\n    const cards = [\r\n        {\r\n            id: 0,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 1,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 2,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 3,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 4,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 5,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 6,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 7,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 8,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 9,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 10,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 11,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 12,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 13,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 14,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 15,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 16,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 17,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 18,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 19,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n    ]\r\n\r\n    const handlePage = () => {\r\n        return null;\r\n    }\r\n\r\n    const handleSize = () => {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n            <Main classes=\"page\">\r\n                <Filters containerClasses=\"filter__container row justify-end my-3\" />\r\n                <List classes=\"list__content layout layout__3\">\r\n                    {cards.map(elmt => <Card key={elmt.id} url={elmt.url} alt={elmt.alt}/>)}\r\n                </List>\r\n                <Pagination \r\n                    containerClasses = \"pagination__block my-3 row justify-between\"\r\n                    containerTextBlockClasses = {\"pagination__text--block row justify-between\"} \r\n                    setPage={handlePage} \r\n                    setSize={handleSize}\r\n                    listSize={[10,20,40]}\r\n                /> \r\n                <Plus to=\"/cards/from\"/>\r\n            </Main>\r\n    )\r\n}\r\n\r\nexport default CardsPage\r\n","async function getProfile(){\r\n    let settings = {\r\n        method : 'GET',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api/profile`, settings);\r\n    let datas = response.json();\r\n    return datas;\r\n}\r\n\r\nasync function updateProfile(form){\r\n    let settings = {\r\n        method: 'PATCH',\r\n        credentials: 'include',\r\n        body: form\r\n    }\r\n\r\n    let response = await fetch('https://test-seven.site/api/user/update', settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nexport {getProfile, updateProfile}","import React from 'react';\r\n\r\nfunction Loader(props) {\r\n    let { condition, setLoaded } = props;\r\n    let LoaderIcon = props.loaderIcon;\r\n    return (\r\n        <div className=\"loader__block row justify-center align-center\">\r\n            {             \r\n                condition\r\n                ? \r\n                setLoaded(true) \r\n                : \r\n                null\r\n            }\r\n            <LoaderIcon className=\"loader\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;\r\n","const regexModule = {\r\n    regex_order: /^[A-Za-z_]+$/,\r\n    regex_id: /^[1-9]{1}[0-9]{0,9}$/,\r\n    regex_username: /^[a-zA-Z_\\-#]{1}[a-zA-Z0-9_\\-\\s]{4,31}$/,\r\n    regex_name:/^[a-zA-Z]{0,32}$/,\r\n    regex_start_with: /^[a-zA-Z_\\-#]{1}[a-zA-Z0-9_\\-#]{0,31}$/,\r\n    regex_name: /^[A-Za-z]{0,32}$/,\r\n    regex_gender: /(M|F|Other)/,\r\n    regex_email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n    regex_cards: /([1-9]{1}[0-9]{0,4}:[1-9]{1}[0-9]{0,4},{0,1})+/,\r\n    regex_qty: /^[1-9]{1}[0-9]{0,1}$/,\r\n    regex_kingdoms: /^([1-7]{1,1},{0,1}){1,7}[^,]$/,\r\n    regex_page: /^[1-9]{1}[0-9]{0,5}$/,\r\n    regex_page_size: /^[1-9]{1}[0-9]{0,5}$/,\r\n    regex_img: /^([A-Za-z]{3,16}(-[1-9]{1,8}){0,1}(\\.jpg|\\.svg){1,1}){1,1}$/,\r\n    regex_deck_name: /^[A-Za-z0-9_\\-#]{4}[A-Za-z0-9_\\-#\\s]{0,26}$/\r\n}\r\n\r\nexport default regexModule;","import React,{useState, useEffect, useRef} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n/* api */\r\nimport {getProfile, updateProfile} from '../api/Profile';\r\n\r\n/* components */\r\nimport {HiUserCircle} from 'react-icons/hi';\r\nimport { RiLoader3Line } from 'react-icons/ri'\r\nimport Button from '../components/Button';\r\nimport Main from '../layouts/Main';\r\nimport Loader from '../components/Loader';\r\n\r\n/* module */\r\nimport regexModule  from '../modules/regex';\r\n\r\n\r\n\r\nconst ProfileForm = () => {\r\n\r\n    const { id } = useParams();\r\n    const [userInfos,setUserInfos] = useState({\r\n        code: null,\r\n        message: {\r\n            id: '',\r\n            firstname:'',\r\n            lastname:'',\r\n            gender: 'other',\r\n            username: '',\r\n            is_visible: true,\r\n            allow_collections: true\r\n        }\r\n    });\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    /* ref */\r\n    const firstnameInput = useRef(null);\r\n    const lastnameInput = useRef(null);\r\n    const usernameInput = useRef(null);\r\n    const emailInput = useRef(null);\r\n\r\n    useEffect(async () => {\r\n        let response = await getProfile(id);\r\n        setUserInfos(response);\r\n    },[]);\r\n\r\n    const handleChange = (e) => {\r\n        switch(e.target.id){\r\n\r\n            case 'firstname':\r\n                if(regexModule.regex_name.test(e.target.value) === true){\r\n                    if(firstnameInput.current.classList.contains('bad__input')){\r\n                        firstnameInput.current.classList.remove('bad__input');\r\n                    }\r\n                    firstnameInput.current.classList.add('good__input');\r\n                }else{\r\n                    if(firstnameInput.current.classList.contains('good__input')){\r\n                        firstnameInput.current.classList.remove('good__input');\r\n                    }\r\n                    firstnameInput.current.classList.add('bad__input');\r\n                }\r\n\r\n                if(firstnameInput.current.value.length === 0){\r\n                    firstnameInput.current.classList.remove('good__input');\r\n                }\r\n\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.firstname = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n\r\n            case 'lastname':\r\n                if(regexModule.regex_name.test(e.target.value) === true){\r\n                    if(lastnameInput.current.classList.contains('bad__input')){\r\n                        lastnameInput.current.classList.remove('bad__input');\r\n                    }\r\n                    lastnameInput.current.classList.add('good__input');\r\n                }else{\r\n                    if(lastnameInput.current.classList.contains('good__input')){\r\n                        lastnameInput.current.classList.remove('good__input');\r\n                    }\r\n                    lastnameInput.current.classList.add('bad__input');\r\n                }\r\n\r\n                if(lastnameInput.current.value.length === 0){\r\n                    lastnameInput.current.classList.remove('good__input');\r\n                }\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.lastname = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'username':\r\n                if(regexModule.regex_username.test(e.target.value) === true){\r\n                    if(usernameInput.current.classList.contains('bad__input')){\r\n                        usernameInput.current.classList.remove('bad__input');\r\n                    }\r\n                    usernameInput.current.classList.add('good__input');\r\n                }else{\r\n                    if(usernameInput.current.classList.contains('good__input')){\r\n                        usernameInput.current.classList.remove('good__input');\r\n                    }\r\n                    usernameInput.current.classList.add('bad__input');\r\n                }\r\n\r\n                if(usernameInput.current.value.length === 0){\r\n                    usernameInput.current.classList.remove('good__input');\r\n                }\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.username = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'email':\r\n                if(regexModule.regex_email.test(e.target.value) === true){\r\n                    if(emailInput.current.classList.contains('bad__input')){\r\n                        emailInput.current.classList.remove('bad__input');\r\n                    }\r\n                    emailInput.current.classList.add('good__input');\r\n                }else{\r\n                    if(emailInput.current.classList.contains('good__input')){\r\n                        emailInput.current.classList.remove('good__input');\r\n                    }\r\n                    emailInput.current.classList.add('bad__input');\r\n                }\r\n\r\n                if(emailInput.current.value.length === 0){\r\n                    emailInput.current.classList.remove('good__input');\r\n                }\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.email = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'female' :\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.gender = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'male' :\r\n                e.target.checked = true;\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.gender = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'other' :\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.gender = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'visible' :\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.is_visible = e.target.checked;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'collection' :\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.allow_collections = e.target.checked;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            default:\r\n                console.error(`Something wrong with ${e.target.id}`);\r\n        }\r\n    }\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        let form = new FormData();\r\n        Object.keys(userInfos.message).map(elmt => {\r\n            form.append(elmt, userInfos.message[elmt]);\r\n        });\r\n\r\n        let response = await updateProfile(form);\r\n        if(response.code === 200){\r\n            setUserInfos(response)\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    return isLoaded === true ? (\r\n        <Main classes=\"profile__page\">\r\n                <form className=\"form\" onChange={handleChange}>\r\n                        <div className=\"profile__heading\">\r\n                            <HiUserCircle className=\"profile__avatar\"/>\r\n                            <h4 className=\"profile__username\"></h4>\r\n                            <p className=\"profile__userid\"></p>\r\n                        </div>\r\n                        <div className=\"form__section w-80 mb-2\">\r\n                            <h4 className=\"form__section--title\">Profile options</h4>\r\n                        <div className=\"row justify-between w-100\">\r\n                            <label className=\"form__label mr-2\" htmlFor=\"visible\">Public</label>\r\n                            <input id=\"visible\" className=\"form__checkbox mb-1\" type=\"checkbox\" name=\"visible\" checked={userInfos.message.is_visible}/>\r\n                        </div>\r\n                        <div className=\"row justify-between w-100\">\r\n                            <label className=\"form__label mr-2\" htmlFor=\"collection\">Collections</label>\r\n                            <input id=\"collection\" className=\"form__checkbox\" type=\"checkbox\" name=\"collection\" checked={userInfos.message.allow_collections} />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form--section\" >\r\n                            <h4 className=\"form__section--title\">Contact</h4>\r\n                            <div className=\"form__radio--group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"form__radio--button\">\r\n                                        <label className=\"form__radio--label\" htmlFor=\"female\">F</label>\r\n                                        <input \r\n                                            id=\"female\" \r\n                                            className=\"form--radio\" \r\n                                            type=\"radio\" \r\n                                            name=\"gender\" \r\n                                            value=\"F\" \r\n                                            checked={userInfos.message.gender.trim() === 'F' ? true : false}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form__radio--button\">\r\n                                        <label className=\"form__radio--label\" htmlFor=\"male\">M</label> \r\n                                        <input id=\"male\" \r\n                                               className=\"form--radio\"\r\n                                               type=\"radio\" \r\n                                               name=\"gender\" \r\n                                               value=\"M\" \r\n                                               checked={userInfos.message.gender.trim() === 'M' ? true : false}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form__radio--button\">\r\n                                        <label className=\"form__radio--label\" htmlFor=\"other\">Autre</label> \r\n                                        <input id=\"other\" \r\n                                               className=\"form--radio\"\r\n                                               type=\"radio\" \r\n                                               name=\"gender\" \r\n                                               value=\"other\" \r\n                                               checked={userInfos.message.gender === 'other' ? true : false}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <input id=\"firstname\"\r\n                                   ref={firstnameInput} \r\n                                   className=\"form--input\" \r\n                                   type=\"text\"\r\n                                   placeholder=\"firstname\" \r\n                                   value={userInfos.message.firstname}\r\n                            />\r\n                            <input id=\"lastname\"\r\n                                   ref={lastnameInput} \r\n                                   type=\"text\" \r\n                                   className=\"form--input\" \r\n                                   placeholder=\"lastname\" \r\n                                   value={userInfos.message.lastname}\r\n                            />\r\n                            <input id=\"username\"\r\n                                   ref={usernameInput} \r\n                                   type=\"text\" \r\n                                   className=\"form--input\" \r\n                                   placeholder=\"username\" \r\n                                   value={userInfos.message.username}\r\n                            />\r\n                            <input id=\"email\"\r\n                                   ref={emailInput} \r\n                                   type=\"email\" \r\n                                   className=\"form--input\" \r\n                                   placeholder=\"email\" \r\n                                   value={userInfos.message.email}\r\n                            />\r\n                        </div>                        \r\n                        <Button classes=\"btn\" text=\"update\" onClick={handleClick}/>\r\n                </form>\r\n            </Main>\r\n    )\r\n    :\r\n    (\r\n        <Loader condition={userInfos.code === 200} \r\n                loaderIcon={RiLoader3Line} \r\n                setLoaded={setIsLoaded} \r\n        />\r\n    )\r\n}\r\n\r\nexport default ProfileForm\r\n","import React from 'react'\r\nimport {HiUserCircle} from 'react-icons/hi'\r\n\r\nconst UserDefault = (props) => {\r\n    return (\r\n        <HiUserCircle className={props.classes}/>\r\n    )\r\n}\r\n\r\nexport default UserDefault\r\n","import React from 'react'\r\nimport './User.css'\r\nimport UserDefault from './UserDefault'\r\n\r\nconst User = (props) => {\r\n    const {content} = props;\r\n    return (\r\n        <li key={content.id} className=\"user__block\">\r\n            <div className=\"user__heading\">\r\n                {content.img ? <img src={content.img} alt=\"user avatar\"/> : <UserDefault classes=\"user__default--icon\"/>}\r\n                {content.title ? <h4>{content.title}</h4> : ''}\r\n            </div>\r\n            <div className=\"user__body\">\r\n                {content.id ? <p>ID : {content.id}</p> : ''}\r\n                {content.location ? <p>{content.location}</p> : ''}\r\n                {content.deck_num ? <p>Decks : {content.deck_num}</p> : ''}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\r\n\r\nconst InputText = (props) => {\r\n    const search = text;\r\n\r\n    if(!props.onChange) props.onChange = () => {return};\r\n    if(!props.onBlur) props.onBlur = () => {return};\r\n\r\n    const {classes,placeholder,onChange,text,onBlur} = props;\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        onChange(e);\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        e.preventDefault();\r\n        onBlur(e);\r\n    } \r\n    return (\r\n        <input className={classes} type=\"text\" placeholder={placeholder} onBlur={handleBlur} onChange={handleChange} value={search} />\r\n    )\r\n}\r\n\r\nexport default InputText\r\n","import React from 'react'\r\nimport InputText from './InputText'\r\nimport {AiOutlineSearch} from 'react-icons/ai'\r\n\r\nconst SearchBar = ({classes,inputClasses,iconClasses,onChange,onClick, placeholder,text}) => {\r\n    return (\r\n        <div className={classes} onClick={onClick}>\r\n            <InputText classes={inputClasses} placeholder={placeholder} onChange={onChange} value={text}/>\r\n            <AiOutlineSearch className={iconClasses}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import React,  {useState} from 'react';\r\nimport List from '../components/List';\r\nimport User from '../components/User';\r\nimport SearchBar from '../components/SearchBar';\r\nimport Main from '../layouts/Main';\r\nimport Pagination from '../components/Pagination';\r\n\r\nconst GamersPage = () => {\r\n\r\n    const users = [\r\n        {\r\n            id: \"0\",\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 1,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 4,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 5,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 6,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 7,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 8,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 9,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 10,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 11,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 12,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 13,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 14,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 15,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        }\r\n    ]\r\n    \r\n    const [searchValue, setSearchValue] = useState(null)\r\n    const handleSearch = (e) => {\r\n        setSearchValue(e.target.value)\r\n    }\r\n\r\n    const handlePage = () => {\r\n        return null;\r\n    }\r\n\r\n    const handleSize = () => {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n            <Main classes=\"page\">\r\n                <SearchBar \r\n                    classes=\"search__bar\" inputClasses=\"search__bar--input mb-2\" \r\n                    iconClasses=\"search__bar--icon\" \r\n                    onChange={handleSearch} text={searchValue}\r\n                    placeholder={\"Search ...\"}\r\n                />\r\n                <List classes=\"list__content layout layout__3\">\r\n                    {\r\n                        users.map(elmt => {\r\n                            return (\r\n                                <User key={elmt.id} content={elmt}/>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n                <Pagination \r\n                    containerClasses = \"pagination__block my-3 row justify-between\"\r\n                    containerTextBlockClasses = {\"pagination__text--block row justify-between\"} \r\n                    setPage={handlePage} \r\n                    setSize={handleSize} \r\n                    listSize={[10,20,40]} \r\n                /> \r\n            </Main>\r\n    )\r\n}\r\n\r\nexport default GamersPage\r\n","import React from 'react'\r\n\r\nfunction ErrorPage() {\r\n    return (\r\n        \r\n            <h1 className=\"title\">404 - Not found</h1>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React from 'react'\r\nimport './SocialButton.css'\r\nconst SocialButton = (props) => {\r\n    const {onClick} = props;\r\n    return (\r\n        <a style={{backgroundColor:props.bgcolor}} href={props.url} className=\"btn btn__social\">\r\n            {props.children}\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default SocialButton;\r\n","import './LoginPage.css';\r\nimport React from 'react';\r\nimport SocialButton from '../components/SocialButton';\r\nimport {FcGoogle} from 'react-icons/fc'\r\nimport {FaFacebookF} from 'react-icons/fa'\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\n\r\nfunction Login(props) {\r\n\r\n    return (\r\n                <ul className=\"social__icons--list\">\r\n                    <li className=\"mb-3\">\r\n                        <SocialButton bgcolor=\"#395693\" url=\"https://test-seven.site/api/auth/facebook\">\r\n                            <FaFacebookF className=\"icons facebook__icon\"/>\r\n                            <span className=\"btn__social--text\">Login facebook</span> \r\n                        </SocialButton>\r\n                    </li>\r\n                    <li>\r\n                        <SocialButton bgcolor=\"#F7F7F7\" url=\"https://test-seven.site/api/auth/google\">\r\n                            <FcGoogle className=\"icons google__icon\" />\r\n                            <span className=\"btn__social--text\">Login Google</span>\r\n                        </SocialButton>\r\n                    </li>\r\n                </ul>\r\n            )\r\n\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport './SettingsDeckPage.css'\r\nconst SettingsDeckPage = () => {\r\n    const deckName = useParams();\r\n    console.log(deckName)\r\n    return (\r\n        <div>\r\n            <h1 className=\"deck__setting--title\">{deckName.name} settings page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingsDeckPage\r\n","import React from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst BackButton = (props) => {\r\n    const {text, url, classes} = props;\r\n    const history = useHistory();\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        history.push(url);\r\n    }\r\n\r\n    return (\r\n        <button className={classes ? classes : 'btn'} onClick={handleClick}>\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default BackButton;","import React from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst NavButton = (props) => {\r\n\r\n    if(!props.onClick) props.onClick = () => {return};\r\n    const {text, url, classes, onClick, timing} = props;\r\n    const history = useHistory();\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        let result = await onClick(e);\r\n        setTimeout(() => {\r\n            if(result === true){\r\n                history.push(url);\r\n            }\r\n        },timing ? timing : 1000);\r\n    }\r\n\r\n    return (\r\n        <button className={classes ? classes : 'btn'} onClick={handleClick}>\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default NavButton;\r\n","function checkRegex(regex, value){\r\n    return regex.test(value);\r\n}\r\nexport default checkRegex;","import React, {useState} from 'react';\r\n\r\n/*api call*/\r\nimport {createUserDeck} from '../api/Decks';\r\n\r\n/*layout*/\r\nimport Layout from '../layouts/Layout';\r\n\r\n/*components*/\r\nimport InputText from '../components/InputText';\r\nimport CheckBox from '../components/CheckBox';\r\nimport BackButton from '../components/BackButton'\r\nimport NavButton from '../components/NavButton';\r\nimport Flash from '../components/Flash';\r\nimport {Link} from 'react-router-dom';\r\n\r\n/* Utilities */\r\nimport checkRegex from '../utilities/checkRegex';\r\n\r\n/*modules*/\r\nimport regexModule from '../modules/regex';\r\n\r\n\r\nconst AddingDeckPage = (props) => {\r\n\r\n    const [fieldValues, setFieldValues] = useState({\r\n        deck_name: '',\r\n        visibility: true\r\n    });\r\n\r\n    const [inputState, setInputState] = useState(true);\r\n    const [createState, setCreateState] = useState({});\r\n    const [flash, setFlash] = useState(null);\r\n    const [flashMessage, setFlashMessage] = useState(null);\r\n\r\n    const handleBlur = (e) => {\r\n        setFieldValues({...fieldValues, deck_name: e.target.value});\r\n        if(e.target.value.length > 0){\r\n            setInputState(false)\r\n        }else{\r\n            setInputState(true);\r\n        };\r\n    }\r\n\r\n    const handleCheck = (e) => {\r\n        setFieldValues({...fieldValues, visibility: e.target.checked});\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        setFieldValues({...fieldValues, deck_name: e.target.value});\r\n        setInputState(!checkRegex(regexModule.regex_deck_name, e.target.value))\r\n    }\r\n\r\n    const handleCreate = async (e) => {\r\n        e.preventDefault();\r\n        const form = new FormData();\r\n        form.append('deck_name', fieldValues.deck_name);\r\n        form.append('visibility', fieldValues.visibility);\r\n        let response = await createUserDeck(form);\r\n\r\n        if(response.code === 200){\r\n            setFlash(true);\r\n            setCreateState(response);\r\n            setFlashMessage(response.message[0].deck_name + \" created succesfully.\");\r\n            return true;\r\n        }else if(response.code !== 200){\r\n            setFlash(false);\r\n            setFlashMessage(response.message);\r\n            return false;\r\n        }else{\r\n            setFlash(null);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    const handleFlash = (newState) => {\r\n        setFlash(newState)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <form className=\"form\">\r\n                    <div className=\"form--section\">\r\n                        <h4 className=\"form__section--title\">Informations</h4>\r\n                        <InputText \r\n                            classes={inputState === true ? \"form--input bad__input\" : 'form--input good__input'} \r\n                            placeholder=\"Deck name\" onChange={handleInputChange} \r\n                            onBlur={handleBlur} \r\n                            value={fieldValues.deck_name}\r\n                        />\r\n                        <CheckBox \r\n                            id=\"visible\" \r\n                            name=\"visibility\" \r\n                            classes=\"form__checkbox\" \r\n                            text=\"public\" \r\n                            onChange={handleCheck} \r\n                            checked={fieldValues.visibility}\r\n                        />\r\n                        <Flash \r\n                            classes=\"message__flash\" \r\n                            errorClass=\"message__flash-error\" \r\n                            successClass=\"message__flash-done\" \r\n                            message={ flashMessage ? flashMessage : 'flash message'}\r\n                            flash={flash}\r\n                            timing={750}\r\n                            handleFlash = {handleFlash}\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <div className=\"buttons__block\">\r\n                    {createState.message ? \r\n                        <Link className=\"btn\" to={`/decks/${createState.message[0].id}/subdecks`}>Next</Link>\r\n                        :\r\n                        <NavButton text=\"Create\" \r\n                        url={`/decks/create`} \r\n                        onClick={handleCreate} \r\n                        timing={1000}\r\n                        />\r\n                    }\r\n                    <NavButton text=\"Import\" url={`/decks/new-deck/import`} onClick={handleCreate} timing={1000}/>\r\n                    <BackButton text=\"Back\" url=\"/decks\"/>\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddingDeckPage\r\n","import React,{useEffect, useReducer} from 'react'\r\nimport Button from '../components/Button'\r\nimport Main from '../layouts/Main'\r\nimport Header from '../layouts/Header'\r\n\r\n\r\n\r\nfunction reducer(state,action){\r\n    switch(action.type){\r\n        case 'STARTER_DECK':\r\n            return { choice:\"/cards/from/starter\"};\r\n        case 'INDIVIDUAL':\r\n            return { choice:\"/cards/from/individual\"};\r\n        case 'BACK':\r\n            return { choice:\"/cards\"};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst ChoicePage = (props) => {\r\n    const init = {choice: \"/cards/from\"}\r\n    const [isClicked, dispatch] = useReducer(reducer,init);\r\n    \r\n    const handleClick = (e,action) => {\r\n        e.preventDefault();\r\n        dispatch({type:action})\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.history.push(isClicked.choice);\r\n    }, [isClicked]) \r\n\r\n    return (        \r\n            <>\r\n                <Header>\r\n                    <h1>Choice :</h1>\r\n                </Header>\r\n                <Main>\r\n                    <div className=\"block\">\r\n                        <Button classes=\"btn\" text=\"Starter Deck\" onClick={(e) => handleClick(e,\"STARTER_DECK\")}/>\r\n                        <Button classes=\"btn\" text=\"Individual Card\" onClick={(e) => handleClick(e,\"INDIVIDUAL\")}/> \r\n                    </div>\r\n                    <Button classes=\"btn\" text=\"cancel\" onClick={(e) => handleClick(e,\"BACK\")}/>\r\n                </Main> \r\n            </>\r\n    )\r\n}\r\n\r\nexport default ChoicePage\r\n","import {useState} from 'react'\r\nimport './SubscribePage.css'\r\n\r\n\r\nfunction SubscribePage() {\r\n    const [formValues, setValue] = useState({\r\n        email:'',\r\n        username: ''\r\n    });\r\n    \r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        setValue({...formValues, [e.target.name]:e.target.value});\r\n    };\r\n\r\n    const handleBlur = (e) => {\r\n        e.preventDefault();\r\n        setValue({...formValues,[e.target.name]:e.target.value})     \r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        const data = new FormData();\r\n        Object.keys(formValues).map((key, index) => {\r\n            return data.append(key,formValues[key]);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\">\r\n            <h2 className=\"form--title\">Inscription :</h2>\r\n            <input \r\n                id=\"email\" \r\n                className=\"subscribe__form--input\"  \r\n                name=\"email\" \r\n                type=\"email\" \r\n                placeholder=\"Taper votre email ...\" \r\n                onBlur={e => handleBlur(e)} \r\n                onChange={e => handleChange(e)} \r\n                value={formValues.email} \r\n            />\r\n            <input \r\n                id=\"username\" \r\n                className=\"subscribe__form--input\" \r\n                name=\"username\" type=\"username\" \r\n                placeholder=\"Tapez votre username \" \r\n                onBlur={e => handleBlur(e)} \r\n                onChange={e => handleChange(e)} \r\n                value={formValues.username}\r\n            />\r\n            <button \r\n                className=\"btn btn-success\" \r\n                type=\"submit\"  \r\n                onClick={e => handleClick(e)}>\r\n                    Valider\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SubscribePage;","import React from 'react'\r\nimport {AiOutlineEye,AiOutlinePlusCircle} from 'react-icons/ai'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst StarterDeck = (props) => {\r\n    const {title, infos, EC, mode} = props;\r\n    return (\r\n        <li className=\"deck__block\">\r\n            <div className=\"deck__inner--left\">\r\n                <h3 className=\"deck__title\">{title}</h3>\r\n                <p className=\"deck__infos\">{infos}</p>\r\n            </div>\r\n            <div className=\"deck__inner--right\">\r\n                <div className=\"inner__right--text\">\r\n                    <h3 className=\"deck__ec--title\">EC :</h3>\r\n                    <span className=\"deck__ec--value\">{EC}</span>\r\n                </div>\r\n                <div className=\"inner__right--actions\">\r\n                    <div className=\"action\" ><AiOutlineEye/></div>\r\n                    <Link className=\"action\" to=\"/cards\"><AiOutlinePlusCircle/></Link>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default StarterDeck\r\n","import React from 'react'\r\nimport List from '../components/List'\r\nimport StarterDeck from '../components/StarterDeck'\r\nimport Button from '../components/Button'\r\nimport Header from '../layouts/Header'\r\nimport Main from '../layouts/Main'\r\n\r\nconst StarterPage = (props) => {\r\n    const datas = [\r\n        {\r\n            id: 0,\r\n            title: \"Dummy\",\r\n            infos: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut architecto laborum cupiditate velit fuga.\",\r\n            EC: 250,\r\n            cards_num: 64\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"Beginner\",\r\n            infos: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut architecto laborum cupiditate velit fuga.\",\r\n            EC: 250,\r\n            cards_num: 64\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"Low Mid\",\r\n            infos: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut architecto laborum cupiditate velit fuga.\",\r\n            EC: 250,\r\n            cards_num: 64\r\n        },\r\n        {\r\n            id: 4,\r\n            title: \"Hig Mid\",\r\n            infos: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut architecto laborum cupiditate velit fuga.\",\r\n            EC: 250,\r\n            cards_num: 64\r\n        },\r\n        {\r\n            id: 5,\r\n            title: \"The cream of the crop\",\r\n            infos: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut architecto laborum cupiditate velit fuga.\",\r\n            EC: 250,\r\n            cards_num: 64\r\n        },\r\n\r\n    ]\r\n    return (\r\n        <>\r\n            <Header>\r\n                <h1>Starter Decks</h1>\r\n            </Header>\r\n            <Main classes=\"page\">\r\n                <List classes=\"layout layout__1 mb-4\">\r\n                    {\r\n                        datas.map((elmt, index )=> (<StarterDeck key={index} title={elmt.title} infos={elmt.infos} EC={elmt.EC} />))\r\n                    }\r\n                </List>\r\n                <Button classes='btn' text=\"cancel\" onClick={props.history.goBack}/>\r\n            </Main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StarterPage\r\n","export default __webpack_public_path__ + \"static/media/framus.28ad3f9b.jpg\";","import {createContext} from 'react'\r\n\r\nconst CardsContext = createContext()\r\n\r\nexport default CardsContext;","import React, {useState} from 'react'\r\nimport List from '../components/List'\r\nimport Card from '../components/Card'\r\nimport Image from '../img/cards/framus.jpg'\r\nimport Button from '../components/Button'\r\nimport CardsContext from '../contexts/CardsContext'\r\nimport Header from '../layouts/Header'\r\nimport Main from '../layouts/Main'\r\n\r\n\r\nconst IndividualPage = (props) => {\r\n    const cards = [\r\n        {\r\n            id: 0,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 1,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 2,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 3,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 4,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 5,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 6,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 7,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 8,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 9,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false\r\n        },\r\n        {\r\n            id: 10,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        }\r\n    ]\r\n    const [isSelected, setIsSelected] = useState(cards)\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        props.history.goBack();\r\n    }\r\n\r\n    const handleChange = (e, id) => {\r\n        setIsSelected(isSelected => {\r\n            const test = [...isSelected]\r\n            test[id].selected = e.target.checked\r\n            console.log(test)\r\n            return [...test];\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <CardsContext.Provider value={[isSelected,setIsSelected]}>\r\n        <Header classes=\"header\">\r\n            <h1>{props.location.pathname.split('/').pop()}</h1>\r\n        </Header>\r\n        <Main classes=\"page\">\r\n            <List classes={`layout layout__3 ${!isSelected.some(elmt => elmt.selected) ? \"mb-4\" : \"mb-1\"}`}>\r\n                {isSelected.map(elmt => <Card key={elmt.id} id={elmt.id} url={elmt.url} alt={elmt.alt} mode=\"edit\" onChange={(e) => handleChange(e,elmt.id)}/>)}\r\n            </List>\r\n            {isSelected.some(elmt => elmt.selected) ? <Button classes=\"btn\" text=\"add\"/> : ''}\r\n            <Button classes=\"btn\" text=\"cancel\" onClick={handleClick}/>\r\n        </Main>\r\n        </CardsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default IndividualPage\r\n","import React from 'react'\r\nimport Layout from '../layouts/Layout'\r\nimport NavButton from '../components/NavButton'\r\n\r\nconst DeckBuildOptions = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <h1>Options :</h1>\r\n                <div className=\"block\">\r\n                    <NavButton text=\"create\" url=\"/decks/new-deck/create\"/>\r\n                    <NavButton text=\"import\" url=\"/decks/new-deck/import\"/>\r\n                </div>\r\n                <NavButton text=\"back\" url=\"/decks\"/>\r\n            </Layout>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeckBuildOptions\r\n","async function getEden(id){\r\n\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    }\r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/eden`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getEdenCards(id){\r\n    let settings = {\r\n        method : 'GET',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/eden/cards`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function createEden(id){\r\n\r\n    let settings = {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/eden/create`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function deleteEden(id){\r\n    let settings = {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/eden/delete`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\n\r\nexport { getEden, getEdenCards, createEden, deleteEden };","async function getHolyBook(id){\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    }\r\n    \r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/holybook`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getHolyBookCards(id){\r\n    let settings = {\r\n        method : 'GET',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/holybook/cards`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function createHolyBook(id){\r\n\r\n    let settings = {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/holybook/create`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function deleteHolyBook(id){\r\n    let settings = {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/holybook/delete`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nexport { getHolyBook, getHolyBookCards, createHolyBook, deleteHolyBook };","async function getRegister(id){\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    }\r\n    \r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/register`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getRegisterCards(id){\r\n    let settings = {\r\n        method : 'GET',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/register/cards`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function createRegister(id){\r\n\r\n    let settings = {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/register/create`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function deleteRegister(id){\r\n    let settings = {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/register/delete`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nexport { getRegister, getRegisterCards, createRegister, deleteRegister };","import React,{useEffect, useState} from 'react';\r\nimport {useParams, Link} from 'react-router-dom';\r\nimport { GiStack } from 'react-icons/gi';\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport { RiLoader3Line } from 'react-icons/ri';\r\n\r\n/* api */\r\nimport {getEden, createEden, deleteEden} from '../api/Eden.jsx';\r\nimport {getHolyBook, createHolyBook, deleteHolyBook} from '../api/HolyBook.jsx';\r\nimport {getRegister, createRegister, deleteRegister} from '../api/Register.jsx';\r\n\r\n/* layouts */\r\nimport Layout from '../layouts/Layout';\r\n\r\n/* components */\r\nimport Button from '../components/Button';\r\nimport Loader from '../components/Loader';\r\n\r\nconst DeckCreate = (props) => {\r\n    const { id } = useParams();\r\n    const [subdecks, setSubDecks] = useState({\r\n        eden: {\r\n            code: null,\r\n            message: null\r\n        },\r\n        register: {\r\n            code: null,\r\n            message: null\r\n        },\r\n        holybook: {\r\n            code: null,\r\n            message: null\r\n        }\r\n    });\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    const handleClickNav = async (e) => {\r\n        e.preventDefault();\r\n        let response = null;\r\n\r\n        if(e.target.id === 'eden'){\r\n            response = await createEden(id);\r\n            setSubDecks({...subdecks, eden: response});\r\n        }\r\n\r\n        if(e.target.id === 'register'){\r\n            response = await createRegister(id);\r\n            setSubDecks({...subdecks, register: response});\r\n        }\r\n\r\n        if(e.target.id === 'holybook'){\r\n            response = await createHolyBook(id);\r\n            setSubDecks({...subdecks, holybook: response});\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleDeleteEden = async (e) => {\r\n        e.preventDefault();\r\n        let response = await deleteEden(id);\r\n        if(response.code === 200){\r\n            setSubDecks({...subdecks, eden: {\r\n                code:null,\r\n                message: null\r\n            }});\r\n        }else{\r\n            setSubDecks({...subdecks, eden: response});           \r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleDeleteRegister = async (e) => {\r\n        e.preventDefault();\r\n        let response = await deleteRegister(id);\r\n        if(response.code === 200){\r\n            setSubDecks({...subdecks, register: {\r\n                code:null,\r\n                message: null\r\n            }});\r\n        }else{\r\n            setSubDecks({...subdecks, register: response});           \r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleDeleteHolyBook = async (e) => {\r\n        e.preventDefault();\r\n        let response = await deleteHolyBook(id);\r\n        if(response.code === 200){\r\n            setSubDecks({...subdecks, holybook: {\r\n                code:null,\r\n                message: null\r\n            }});\r\n        }else{\r\n            setSubDecks({...subdecks, holybook: response});           \r\n        }\r\n        return true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(subdecks);\r\n    },[subdecks]);\r\n\r\n    useEffect(async () => {\r\n        let eden = await getEden(id);\r\n        let register = await getRegister(id);\r\n        let holybook = await getHolyBook(id);\r\n        let response = {};\r\n\r\n        if(eden.message){\r\n            response = {...response, eden: eden}\r\n        }\r\n\r\n        if(register.message){\r\n            response = {...response, register: register}\r\n        }\r\n\r\n        if(holybook.message){\r\n            response = {...response, holybook: holybook}\r\n        }\r\n\r\n        setSubDecks(response);\r\n    },[]);\r\n\r\n    return loaded === true ? (\r\n        <Layout>\r\n            {subdecks.eden.code === 200 ?\r\n                <div className=\"subdeck__box mb-5\">\r\n                    <div className=\"subdeck__heading py-2\">\r\n                        <h4 className=\"subdeck__type\">eden</h4>\r\n                    </div>\r\n                    <div className=\"subdeck__body row justify-between p-2\">\r\n                        <p className=\"subdeck__infos row align-center\">\r\n                            Num cards : {subdecks.eden.message.qty === undefined ? 0 : subdecks.eden.message.qty}\r\n                        </p>\r\n                        <div className=\"subdeck__icon--list row justify-between\">\r\n                            <Link to={`/decks/${id}/eden`}>\r\n                                <GiStack className=\"subdeck__icon\" />\r\n                            </Link>\r\n                            <AiFillDelete className=\"subdeck__icon\" onClick={handleDeleteEden}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Button id=\"eden\" classes=\"btn mb-3\" text=\"create eden\" onClick={handleClickNav} />\r\n            }\r\n            {subdecks.register.code === 200 ?\r\n                <div className=\"subdeck__box mb-5\">\r\n                    <div className=\"subdeck__heading py-2\">\r\n                        <h4 className=\"subdeck__type\">register</h4>\r\n                    </div>\r\n                    <div className=\"subdeck__body row justify-between p-2\">\r\n                        <p className=\"subdeck__infos  row align-center\">\r\n                            Num cards : {subdecks.register.message.qty === undefined ? 0 : subdecks.register.message.qty}\r\n                        </p>\r\n                        <div className=\"subdeck__icon--list row justify-between\">\r\n                            <Link to={`/decks/${id}/register`}>\r\n                                <GiStack className=\"subdeck__icon\" />\r\n                            </Link>\r\n                            <AiFillDelete className=\"subdeck__icon\" onClick={handleDeleteRegister}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Button id=\"register\" classes=\"btn mb-3\" text=\"create register\" onClick={handleClickNav}/>\r\n            }\r\n            {subdecks.holybook.code === 200 ?\r\n                <div className=\"subdeck__box\">\r\n                    <div className=\"subdeck__heading py-2\">\r\n                        <h4 className=\"subdeck__type\">holybook</h4>\r\n                    </div>\r\n                    <div className=\"subdeck__body row justify-between p-2\">\r\n                        <p className=\"subdeck__infos  row align-center\">\r\n                            Num cards : {subdecks.holybook.message.qty === undefined ? 0 : subdecks.holybook.message.qty }\r\n                        </p>\r\n                        <div className=\"subdeck__icon--list row justify-between\">\r\n                            <Link to={`/decks/${id}/holybook`}>\r\n                                <GiStack className=\"subdeck__icon\" />\r\n                            </Link>\r\n                            <AiFillDelete className=\"subdeck__icon\" onClick={handleDeleteHolyBook}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Button id=\"holybook\" classes=\"btn\" text=\"create holybook\" onClick={handleClickNav}/>\r\n            }\r\n        </Layout>\r\n    )\r\n    :\r\n    (\r\n        <Loader condition = { \r\n                    subdecks.eden.code !== null || \r\n                    subdecks.register.code !== null ||\r\n                    subdecks.holybook.code !== null \r\n                }\r\n                setLoaded = {setLoaded}\r\n                loaderIcon = {RiLoader3Line}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DeckCreate;\r\n","const DeckImport = () => {\r\n    return null;\r\n}\r\n\r\nexport default DeckImport;","import {useHistory} from 'react-router-dom';\r\nimport {GiReturnArrow} from 'react-icons/gi';\r\n\r\nfunction Return(props){\r\n    let history = useHistory();\r\n\r\n    const handleClick = function(e){\r\n        e.preventDefault();\r\n        history.push('/decks');\r\n    }\r\n\r\n    return (\r\n            <div className = \"return__block\" onClick={handleClick}>\r\n                <GiReturnArrow className=\"return__icon\" />\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Return;","import Layout from '../layouts/Layout';\r\nimport Return from '../components/Return'\r\n\r\n\r\nconst EmptyDecksList = (props) => {\r\n\r\n    return (\r\n            <Layout>\r\n                <div className=\"deck__list\">\r\n                    <p className=\"deck__list--empty\">{props.text}</p>\r\n                </div>\r\n                <Return />\r\n            </Layout>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default EmptyDecksList;\r\n","\r\nimport {useEffect,useState, useRef} from 'react';\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\n/* layout parts */\r\nimport Main from '../layouts/Main';\r\n\r\n/* components */\r\nimport {AiOutlineArrowRight} from 'react-icons/ai';\r\nimport Button from '../components/Button';\r\nimport Flash from '../components/Flash';\r\n\r\n/* modules */\r\nimport regexModule from '../modules/regex';\r\n\r\n/* api*/\r\nimport { updateOne,getOne } from'../api/Decks.jsx';\r\n\r\n/* utilities */\r\nimport checkRegex from '../utilities/checkRegex';\r\nimport { serialize } from '../utilities/serialize';\r\n\r\nfunction ModifyDeckPage(props){\r\n    const options = [\r\n        [1, 'Poseidia'],\r\n        [2, 'Eondra'],\r\n        [3, 'Endless night'],\r\n        [4, 'MetaScience'],\r\n        [5, 'The light\\'s temple'],\r\n        [6, 'Celestial purity'],\r\n        [7, 'The saber\\'s way'],\r\n    ]\r\n    const optionsTitle = 'Kingdoms';\r\n    const [deckInfos, setDeckInfos] = useState({});\r\n    const [flashState, setFlashState] = useState(null);\r\n    const [response, setResponse] = useState('');\r\n    const deckName = useRef(null);\r\n    let { id } = useParams();\r\n\r\n    /* handling functions */\r\n    const handleFlash = (newFlashState) => {\r\n        setFlashState(newFlashState);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'kingdoms'){\r\n            if(e.target.checked === true){\r\n                setDeckInfos(prevState => {\r\n                    let newArr = prevState.kingdom === null ? [Number(e.target.id)] : [...prevState.kingdom, Number(e.target.id)];\r\n                    const newSet = new Set(newArr);\r\n                    newArr = Array.from(newSet);\r\n                    return {\r\n                        ...prevState,\r\n                        kingdom: newArr.sort()\r\n                    };\r\n                });\r\n            }\r\n            \r\n            if(e.target.checked === false){\r\n                setDeckInfos(prevState => {\r\n                    let newArr = [...prevState.kingdom];\r\n                    const index = newArr.indexOf(Number(e.target.value));\r\n                    if(index > -1){\r\n                        newArr.splice(index, 1);\r\n                    }\r\n\r\n                    return {\r\n                        ...prevState,\r\n                        kingdom: newArr.sort()\r\n                    }\r\n\r\n                })\r\n            }\r\n        }\r\n        \r\n        if(e.target.id === 'deck_name'){\r\n            setDeckInfos({...deckInfos, deck_name: e.target.value})\r\n        }\r\n\r\n        if(e.target.id === 'description'){\r\n            setDeckInfos({...deckInfos, description: e.target.value});\r\n        }\r\n\r\n        if(e.target.id === 'isVisible'){\r\n            setDeckInfos({...deckInfos, is_visible: e.target.checked});\r\n        }\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        if(e.target.id === 'deck_name'){\r\n            setDeckInfos({...deckInfos, deck_name: e.target.value});\r\n        }\r\n    }   \r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        let form = new FormData();\r\n        Object.keys(deckInfos).map(elmt => {\r\n            if(elmt === 'kingdom'){\r\n                form.append(elmt, serialize(deckInfos.kingdom));\r\n            }else{\r\n                form.append(elmt, deckInfos[elmt]);\r\n            }\r\n            return true;\r\n        });\r\n\r\n        let updateRes = await updateOne(form, id);\r\n            setResponse(updateRes);\r\n        if(updateRes.code === 200){\r\n            setFlashState(true);\r\n        }else if(updateRes.code !== 200){\r\n            setFlashState(false);\r\n        }else{\r\n            setFlashState(null)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        if(checkRegex(regexModule.regex_deck_name, deckName.current.value) === true){\r\n            deckName.current.classList.add('good__input');\r\n        }\r\n\r\n        if(checkRegex(regexModule.regex_deck_name, deckName.current.value) === false){\r\n            deckName.current.classList.add('bad__input');\r\n        }\r\n\r\n        return () => {\r\n            if(deckName.current.classList.contains('good__input')){\r\n                deckName.current.classList.remove('good__input');\r\n            };\r\n\r\n            if(deckName.current.classList.contains('bad__input')){\r\n                deckName.current.classList.remove('bad__input');\r\n            };\r\n        }\r\n    }, [deckInfos.deck_name]);\r\n\r\n    useEffect(async () => {\r\n        let res = await getOne(id);\r\n        if(res.code === 200){\r\n            setDeckInfos(res.message);\r\n        }else{\r\n            setFlashState(false);\r\n            setResponse(res);\r\n        }\r\n    },[]);\r\n\r\n    return (\r\n        <Main classes=\"page page__deck\">\r\n            <div className=\"row justify-end w-80\">\r\n                <Link className=\"row justify-between align-center\" to={`/decks/${id}/subdecks`}>Subdeck <AiOutlineArrowRight className=\"arrow ml-2\"/></Link>\r\n            </div>\r\n            <form className=\"form\" onChange={handleChange} onBlur={handleBlur}>\r\n                <div className=\"form--section column\">\r\n                    <input id=\"deck_name\" className=\"form--input mb-2\" ref={deckName} type=\"text\" placeholder=\"deck name\" value={deckInfos.deck_name}/>\r\n                    <div className=\"form__option--block row\">\r\n                        <label className=\"form__label mr-2\" htmlFor=\"isVisible\">Public</label>\r\n                        <input id=\"isVisible\" className=\"form__checkbox\" type=\"checkbox\" checked={deckInfos.is_visible}/>\r\n                    </div>\r\n                    <p className=\"row justify-start mb-1\" >Cards number : {deckInfos.num_cards}</p>\r\n                    <p className=\"row jsutify-start mb-2\">Total Celestian energy : {deckInfos.total_ec}</p>\r\n                    {options && options instanceof Array ?\r\n                        <fieldset className=\"pb-2 mb-3\">\r\n                            <legend className=\"px-2\">{optionsTitle}</legend>\r\n                            <ul id=\"kingdoms__list\" className=\"column\">\r\n                                {\r\n                                    options.map(elmt => ( \r\n                                            <li key={elmt[0]} className=\"row justify-between\">\r\n                                                <label className=\"form__label\" htmlFor={elmt[0]}>{elmt[1]}</label>\r\n                                                <input \r\n                                                       id={elmt[0]} \r\n                                                       className=\"form__checkbox\" \r\n                                                       type=\"checkbox\" \r\n                                                       name=\"kingdoms\"\r\n                                                       checked ={ deckInfos.kingdom && deckInfos.kingdom.includes(elmt[0])}\r\n                                                       value={elmt[0]}\r\n                                                />\r\n                                            </li> \r\n                                        )\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </fieldset>\r\n                        :\r\n                        null\r\n                    }\r\n                    <textarea id=\"description\" className=\"form__textarea\" placeholder=\"description\" value={deckInfos.description}/>\r\n                </div>\r\n                <Button onClick={handleClick} text=\"update\" />\r\n            </form>\r\n            <Flash \r\n                classes=\"message__flash\" \r\n                errorClass=\"message__flash-error\" \r\n                successClass=\"message__flash-done\" \r\n                message={response.message ? response.message : \"flash message\"}\r\n                timing={750}\r\n                flash={flashState}\r\n                handleFlash={handleFlash}\r\n            />\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default ModifyDeckPage;","import React,{forwardRef} from 'react';\r\n\r\nconst PopupContainer = forwardRef((props, ref) => {\r\n    const {classes} = props;\r\n    return (\r\n        <div ref={ref} className={classes ? classes : \"popup__container\"}>\r\n                {props.children}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default PopupContainer;\r\n","import {useEffect, useState, useRef} from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\n/* api */\r\nimport { getEdenCards } from '../api/Eden';\r\nimport { getRegisterCards } from '../api/Register';\r\nimport { getHolyBookCards } from '../api/HolyBook';\r\nimport { getSubdeckCards } from '../api/CardsWareHouse';\r\n\r\n/* components */\r\nimport Loader  from '../components/Loader';\r\nimport { RiLoader3Line } from 'react-icons/ri';\r\nimport { AiFillCloseCircle } from 'react-icons/ai';\r\nimport {AiOutlineArrowLeft} from 'react-icons/ai';\r\nimport Button from '../components/Button';\r\nimport PopupContainer from '../components/PopupContainer';\r\nimport List from '../components/List';\r\n\r\n/* layouts */\r\nimport Main from '../layouts/Main';\r\n\r\nfunction SubDeckPage(props){\r\n\r\n    let endUrl = props.location.pathname.split('/');\r\n    endUrl = endUrl[endUrl.length - 1];\r\n\r\n    let {id} = useParams();\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [cardsList, setCardsList] = useState({\r\n        code: null,\r\n        message: null\r\n    });\r\n    const [isEmpty, setIsEmpty] = useState(true);\r\n    const [test, setTest] = useState(false);\r\n\r\n    const popupRef = useRef(null);\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if(popupRef.current.classList.contains('d-none')){\r\n            popupRef.current.classList.remove('d-none');\r\n        }else{\r\n            popupRef.current.classList.add('d-none');      \r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleValid = (e) => {\r\n        e.preventDefault();\r\n        popupRef.current.classList.add('d-none');\r\n        return true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n           setTest(true); \r\n        }, 500);\r\n    })\r\n\r\n    useEffect(async () => {\r\n        let response = null;\r\n\r\n        if(endUrl === 'eden'){\r\n            response = await getEdenCards(id);\r\n        }\r\n        \r\n        if(endUrl === 'register'){\r\n            response = await getRegisterCards(id);\r\n        }\r\n\r\n        if(endUrl === 'holybook'){\r\n            response = await getHolyBookCards(id);\r\n        }\r\n\r\n        if(response.message.cards.length === 0){\r\n            setIsEmpty(true);\r\n        }else{\r\n            setIsEmpty(false);\r\n        }\r\n\r\n        setCardsList(response);\r\n    },[]);\r\n\r\n\r\n    return loaded === true ? (\r\n        <Main classes=\"page\">\r\n                {\r\n                    isEmpty === true ?\r\n                    (\r\n                        <>  \r\n                            <div className=\"row justify-start w-80\">\r\n                                <Link \r\n                                    className=\"row justify-between align-center\" \r\n                                    to={`/decks/${id}/subdecks`}\r\n                                >\r\n                                    <AiOutlineArrowLeft className=\"arrow mr-2\"/>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"empty__container column justify-center\">\r\n                                <Button \r\n                                    text={`add cards to ${endUrl}`} \r\n                                    onClick={handleClick}\r\n                                />\r\n                            </div>\r\n                            <PopupContainer \r\n                                classes=\"subdeck column align-center popup__container py-5 d-none\" \r\n                                ref={popupRef}\r\n                            >\r\n                                <div className=\"popup__heading\">\r\n                                    <div className=\"popup__close\" onClick={handleClick}>\r\n                                        <AiFillCloseCircle />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"popup__body my-5\">\r\n                                    <List classes=\"layout layout__3 p-0\">\r\n\r\n                                    </List>\r\n                                </div>\r\n                                <div className=\"popup__footer\">\r\n                                    <Button \r\n                                        text=\"Valid\" \r\n                                        bgcolor=\"#3be73b\" \r\n                                        color=\"#101010\" \r\n                                        padding=\"3vw 0\" \r\n                                        onClick={handleValid}\r\n                                    />\r\n                                </div>\r\n                            </PopupContainer>\r\n                        </>\r\n                    )\r\n                    :\r\n                    (\r\n                        <p style ={{color: \"black\",marginTop:\"auto\",marginBottom:\"auto\", textAlign: \"center\"}}>\r\n                            I'm full\r\n                        </p>\r\n                    )\r\n                }\r\n        </Main>\r\n    )\r\n    :\r\n    (\r\n        <Loader condition={test === true} loaderIcon={RiLoader3Line} setLoaded={setLoaded} />\r\n    )\r\n}\r\n\r\nexport default SubDeckPage;","import React from 'react'\r\n\r\nconst VhInPixels = () => {\r\n    let vh = window.innerHeight * 0.01;\r\n    return (\r\n        <>\r\n        {\r\n            window.addEventListener(\"load\",(e) => {\r\n                document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n            })\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VhInPixels\r\n","import { useEffect } from 'react'\n\n//Layout element import\nimport Footer from'./layouts/Footer';\nimport Menu from './components/Menu';\n\n//Settings import\nimport {useState} from 'react'\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n//Components imports\nimport Navigation from './components/Navigation';\nimport Header from './layouts/Header';\nimport Avatar from './components/Avatar';\nimport Logout from './components/Logout';\n\n// Pages import\nimport LandingPage from './pages/LandingPage';\nimport DecksPage from './pages/DecksPage';\nimport CardsPage from './pages/CardsPage';\nimport ProfilePage from './pages/ProfilePage';\nimport GamersPage from './pages/GamersPage';\nimport ErrorPage from './pages/ErrorPage';\nimport LoginPage from './pages/LoginPage';\nimport SettingsDeckPage from './pages/SettingsDeckPage';\nimport AddingDeckPage from './pages/AddingDeckPage';\nimport ChoicePage from './pages/ChoicePage';\nimport SubscribePage from './pages/SubscribePage';\nimport StarterPage from './pages/StarterPage';\nimport IndividualPage from './pages/IndividualPage';\nimport DeckBuildOptions from './pages/DeckBuildOptions';\nimport DeckCreate from './pages/DeckCreate';\nimport DeckImport from './pages/DeckImport';\nimport EmptyDecksList from './pages/EmptyDecksList';\nimport ModifyDeckPage from './pages/ModifyDeckPage';\nimport SubDeckPage from './pages/SubDeckPage';\n\n//Utilities import\nimport VhInPixels from './utilities/VhInPixels';\n\nfunction App() {\n\n  const pages = [\n    {\n        exact: true,\n        path:'/',\n        component: LandingPage,\n    },\n    {\n        strict: true,\n        path:'/login',\n        component: LoginPage,\n    },\n    {\n        strict: true,\n        path:'/subscribe',\n        component: SubscribePage,\n    },\n    {\n        strict: true,\n        path:'/profile',\n        component: ProfilePage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks',\n        component: DecksPage\n    \n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/create',\n        component: AddingDeckPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/empty',\n        component: EmptyDecksList,\n        props: {text: \"No Decks \"} \n    },\n    {\n        exact: true,\n        strict: true,\n        path: '/decks/:id/modify',\n        component: ModifyDeckPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/:id/subdecks',\n        component: DeckCreate\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/:id/eden',\n        component: SubDeckPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/:id/register',\n        component: SubDeckPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/:id/holybook',\n        component: SubDeckPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/new-deck/build',\n        component: DeckBuildOptions\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/new-deck/import',\n        component: DeckImport\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/cards',\n        component: CardsPage,\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/cards/from',\n        component: ChoicePage,\n    },\n    {\n        strict:true,\n        path:'/cards/from/starter',\n        component: StarterPage,\n    },\n    {\n        strict:true,\n        path:'/cards/from/individual',\n        component: IndividualPage,\n    },\n    {\n\n        strict: true,\n        path:'/deck/:name',\n        component: SettingsDeckPage\n    },\n    {\n\n        strict: true,\n        path:'/gamers',\n        component: GamersPage\n    },\n    {\n        component: ErrorPage\n    },\n  ]\n\n  useEffect(async () => {\n\n  }, []);\n\n  return (\n        <>\n          <VhInPixels/>\n          <Router basename=\"/\">\n            <Header classes=\"header row justify-end\">\n                <div className='header__inner--right row justify-between'>\n                    <Avatar />\n                    <Logout />\n                </div>\n            </Header>\n              <Navigation pages={pages} />\n            <Footer classes=\"footer\">\n              <Menu classes=\"navbar\" />\n            </Footer>\n          </Router>\n        </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//Context import\nimport {DatasProvider} from './contexts/DatasContext';\n\n\nReactDOM.render(\n    <DatasProvider>\n        <App />\n    </DatasProvider> \n    ,document.getElementById('root'));"],"sourceRoot":""}