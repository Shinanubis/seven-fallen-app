{"version":3,"sources":["layouts/Footer.jsx","components/Menu.js","components/Navigation.jsx","layouts/Header.jsx","components/Logout.jsx","components/Button.jsx","pages/LandingPage.jsx","layouts/Main.jsx","layouts/Layout.jsx","utilities/serialize.js","api/Decks.jsx","components/Flash.jsx","components/Plus.jsx","components/List.jsx","components/Deck.jsx","components/Pagination.jsx","components/Filters.jsx","components/Popup.jsx","pages/DecksPage.jsx","img/cards/merrlyn.jpg","components/CheckBox.jsx","components/Card.jsx","pages/CardsPage.jsx","api/Profile.jsx","components/Loader.jsx","modules/regex.js","pages/ProfilePage.jsx","components/UserDefault.jsx","components/User.jsx","components/InputText.jsx","components/SearchBar.jsx","pages/GamersPage.jsx","pages/ErrorPage.jsx","components/SocialButton.jsx","pages/LoginPage.jsx","pages/SettingsDeckPage.jsx","components/BackButton.jsx","components/NavButton.jsx","utilities/checkRegex.js","pages/AddingDeckPage.jsx","pages/ChoicePage.jsx","pages/SubscribePage.jsx","components/StarterDeck.jsx","pages/StarterPage.jsx","img/cards/framus.jpg","contexts/CardsContext.jsx","pages/IndividualPage.jsx","pages/DeckBuildOptions.jsx","api/Eden.jsx","api/HolyBook.jsx","api/Register.jsx","pages/DeckCreate.jsx","pages/DeckImport.jsx","components/Return.jsx","pages/EmptyDecksList.jsx","api/holyBook.jsx","components/AddCard.jsx","pages/ModifyDeckPage.jsx","pages/SubDeckPage.jsx","utilities/VhInPixels.jsx","api/CardsWareHouse.jsx","img/22-2.gif","components/InfiniteListTwo.jsx","components/InfiniteListThree.jsx","pages/AddingSubDecksPage.jsx","App.jsx","index.js"],"names":["Footer","props","classes","className","children","Menu","initialState","item__1","item__2","item__3","item__4","useState","isClicked","setIsClicked","handleClick","e","persist","field","currentTarget","id","prevstate","useEffect","onClick","to","Navigation","pages","map","page","index","exact","strict","path","component","Header","Logout","Button","forwardRef","bgcolor","color","size","text","padding","type","style","backgroundColor","width","LandingPage","history","useHistory","uri","preventDefault","push","handleConnexion","Main","layout","Array","elmt","serialize","arr","TypeError","toString","getUserDecks","options","a","settings","method","credentials","url","URL","params","sens","order_by","Object","keys","forEach","key","searchParams","append","fetch","response","json","datas","getDecksByKingdoms","form","FormData","kingdoms","body","mode","getOne","createUserDeck","updateOne","deleteUserDeck","Flash","message","errorClass","flash","successClass","timing","handleFlash","classesState","setClasses","afterClasses","setTimeout","replace","Plus","List","Deck","title","total_ec","description","num_cards","listStateSetter","listState","deleteStateSetter","reqOptState","removeData","deleteResponse","getResponse","code","state","Pagination","setPage","setSize","containerClasses","containerTextBlockClasses","leftClasses","rightClasses","textClasses","listSize","nextPage","canNext","setCanNext","newObj","res","length","Number","Filters","isVisible","Popup","buttonResetText","actionClose","actionReset","actionSelect","setCheckBoxes","checkboxesState","handleClickCheckBoxes","checkboxes","from","document","getElementsByClassName","querySelectorAll","checkBoxesState","checked","enctype","htmlFor","name","onChange","value","selected","values","displayed","field_name","DecksPage","decksList","setDecksList","flashState","setFlashState","setDeleteResponse","filterClicked","setFilter","reqOpt","setReqOpt","popupDatas","JSON","parse","localStorage","getItem","prevState","newObject","newKingdomsArray","target","includes","indexOf","splice","newFlashState","handleDelete","newState","handlePage","newPage","Layout","deck_name","deleteState","marginTop","marginBottom","eventsToListen","newSize","setOptions","CheckBox","Card","alt","src","CardsPage","cards","Image","getProfile","updateProfile","deleteProfile","getAvatar","addAvatar","Loader","condition","setLoaded","LoaderIcon","loaderIcon","regexModule","regex_order","regex_id","regex_username","regex_name","regex_start_with","ProfileForm","firstname","lastname","gender","username","is_visible","allow_collections","userInfos","setUserInfos","isLoaded","setIsLoaded","avatar","setAvatar","avatarForm","setAvatarForm","flashMessage","setFlashMessage","firstnameInput","useRef","lastnameInput","usernameInput","emailInput","avatarInput","handleUpdateClick","handleDeleteClick","window","confirm","alert","responseUser","responseAvatar","test","current","classList","contains","remove","add","regex_email","email","files","console","error","click","ref","accept","trim","placeholder","RiLoader3Line","UserDefault","User","content","img","location","deck_num","InputText","search","onBlur","SearchBar","inputClasses","iconClasses","GamersPage","searchValue","setSearchValue","ErrorPage","SocialButton","href","dotenv","config","Login","SettingsDeckPage","deckName","useParams","log","BackButton","NavButton","result","checkRegex","regex","AddingDeckPage","visibility","fieldValues","setFieldValues","inputState","setInputState","createState","setCreateState","setFlash","handleCreate","regex_deck_name","reducer","action","choice","ChoicePage","useReducer","dispatch","SubscribePage","StarterDeck","infos","EC","StarterPage","cards_num","goBack","CardsContext","createContext","IndividualPage","isSelected","setIsSelected","Provider","pathname","split","pop","some","handleChange","DeckBuildOptions","getEdenCards","getHolyBookCards","getRegisterCards","DeckImport","Return","EmptyDecksList","AddCard","ModifyDeckPage","sessionStorage","deckInfos","setDeckInfos","setResponse","formOpen","setFormOpen","edenCards","setEdenCards","registerCards","setRegisterCards","holybookCards","setHolyBookCards","formRef","kingdom","updateRes","eden","register","holybook","scrollIntoView","behavior","block","newArr","newSet","Set","sort","SubDeckPage","VhInPixels","vh","innerHeight","addEventListener","documentElement","setProperty","getTypesList","lang","headers","process","getRaritiesList","getKingdomsList","getExtensionsList","count","toUpperCase","status","LoaderList","InfiniteListThree","numberPerPage","triggerAt","loaderListClasses","loaderList","listRef","Math","ceil","elmtRef","isMounted","triggerIndex","AddingSubDecksCardsPage","loaded","cardsResponse","completeList","setCompleteList","setImageLoaded","endUrl","userSubdeckResponse","newCompleteList","getUserEdenCards","getUserRegisterCards","getUserHolyBookCards","qty","elmt1","elmt2","newImages","LoaderGif","App","LoginPage","ProfilePage","types","setItem","stringify","rarities","extensions","basename","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ed98c1e5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Footer = (props) => {\r\n    const {classes} = props; \r\n    return (\r\n        <footer className={classes}>\r\n            {props.children}\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Link } from 'react-router-dom';\r\nimport {useState, useEffect} from 'react';\r\nimport {RiSettings3Fill,RiFileList2Fill} from 'react-icons/ri';\r\nimport {GrStackOverflow} from 'react-icons/gr';\r\nimport {HiOutlineUsers} from 'react-icons/hi';\r\nimport './Menu.css';\r\n\r\n\r\n\r\nfunction Menu (props) {\r\n    const {classes} = props;\r\n    const initialState = {\r\n        item__1: false,\r\n        item__2: false,\r\n        item__3: false,\r\n        item__4: false\r\n    }\r\n\r\n    const [isClicked, setIsClicked] = useState(initialState);\r\n\r\n    const handleClick = (e) => {\r\n           e.persist()\r\n           const field = e.currentTarget.id\r\n           setIsClicked(initialState)\r\n           setIsClicked(prevstate => ({...prevstate,\r\n               [field]: true\r\n           }))            \r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsClicked({item__2:true})\r\n    },[])\r\n\r\n    return (\r\n        <nav className={classes}>\r\n            \r\n            <ul className=\"menu\" >\r\n                <div className=\"menu__bubble\"></div>\r\n                <li id=\"item__1\" className={isClicked.item__1 ? \"menu__item move-up\" : \"menu__item\"} onClick={handleClick}>\r\n                    <Link className=\"menu__link\" to=\"/profile\">\r\n                        <RiSettings3Fill className=\"menu__icon\"/>\r\n                    </Link>\r\n                </li>\r\n                <li id=\"item__2\" className={isClicked.item__2 ? \"menu__item move-up\" : \"menu__item\"} onClick={handleClick}>\r\n                    <Link   id=\"item__2\" className=\"menu__link\" to=\"/decks\">\r\n                        <RiFileList2Fill className=\"menu__icon\"/>\r\n                    </Link>\r\n                </li>\r\n                <li id=\"item__3\"  className={isClicked.item__3 ? \"menu__item move-up\" : \"menu__item\"} onClick={handleClick}>\r\n                    <Link className=\"menu__link\" to=\"/cards\">\r\n                        <GrStackOverflow className=\"menu__icon\"/>\r\n                    </Link>\r\n                </li>\r\n                <li id=\"item__4\" className={isClicked.item__4 ? \"menu__item move-up\" : \"menu__item\"} onClick={handleClick}>\r\n                    <Link className=\"menu__link\" to=\"/gamers\">\r\n                        <HiOutlineUsers className=\"menu__icon\"/>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Menu;","import {Switch,Route} from 'react-router-dom'\r\n\r\n\r\nfunction Navigation({pages}) {\r\n    return(\r\n        \r\n        <Switch > \r\n            {pages.map((page, index) => (    \r\n                    <Route \r\n                        key={index} exact={page.exact ?? page.exact} \r\n                        strict={page.strict ?? page.strict} path={page.path ?? page.path}\r\n                        component={page.props ? () => <page.component {...page.props} /> : page.component}\r\n                    />\r\n                ))}\r\n        </Switch>       \r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react'\r\n\r\nconst Header = (props) => {\r\n    const {classes} = props;\r\n    return (\r\n       <header className={classes ?? \"header\"}>\r\n           {props.children}\r\n       </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport {AiOutlineLogout} from 'react-icons/ai';\r\n\r\nfunction Logout(props){\r\n    const {containerClasses} = props;\r\n\r\n    return (\r\n        <div className={containerClasses ?? 'logout'}>\r\n            <AiOutlineLogout className=\"menu__icon menu__icon-logout\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logout;","import React,{forwardRef} from 'react'\r\nconst Button = forwardRef((props) => {\r\n    const {id, classes,bgcolor,color, size,onClick, text, padding} = props\r\n    \r\n    return (\r\n\r\n        <button \r\n            id={id ? id : null}\r\n            type=\"button\"\r\n            className = {classes ? classes : \"btn\"}\r\n            style={{\r\n                padding: padding ?? padding,\r\n                backgroundColor:bgcolor ?? bgcolor,\r\n                color:color ?? color,\r\n                width: size ?? size\r\n            }}\r\n            onClick={onClick ?? onClick}\r\n        >\r\n        {text}\r\n        </button>\r\n    )\r\n})\r\n\r\nexport default Button\r\n","import React from 'react';\r\nimport Button from '../components/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LandingPage = (props) => {\r\n    \r\n    let history = useHistory();\r\n\r\n    const handleConnexion = (e,uri) => {\r\n        e.preventDefault();\r\n        history.push(uri)\r\n    }\r\n \r\n    return (\r\n            <>\r\n                <Button classes=\"btn\" text=\"Connexion\" onClick={e => handleConnexion(e,'/login')}/>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from 'react'\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <main id=\"main\" className={props.classes}>\r\n            {props.children}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Main from './Main'\r\n\r\nconst layout = (props) => {\r\n        const {classes} = props; \r\n        return (\r\n        <>\r\n           <Main classes={classes ? classes : \"page\"}>\r\n               {props.children instanceof Array ? props.children.map((elmt, index) => {\r\n                   return elmt;\r\n                }) : ''}\r\n           </Main> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default layout\r\n","export function serialize(arr){\r\n    if(!arr instanceof Array){\r\n        throw TypeError(\"The serialize function argument should be an Array\");\r\n    }\r\n\r\n    return arr.toString();\r\n}","import {serialize} from '../utilities/serialize.js';\r\n\r\nasync function getAllDecks(){\r\n\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    };\r\n\r\n    let response = await fetch('https://test-seven.site/api/decks/shared', settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getUserDecks(options){\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    };\r\n    let url = new URL('https://test-seven.site/api/decks');\r\n\r\n    let params = {\r\n        page: options.page ? options.page : 1, \r\n        size: options.size ? options.size : 10,\r\n        sens: options.sens ? options.sens : 'asc',\r\n        order_by: options.order_by ? options.order_by : 'id'\r\n    };\r\n\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\r\n    let response = await fetch(url, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n    \r\n}\r\n\r\nasync function getDecksByKingdoms(options){\r\n    let form = new FormData();\r\n    let kingdoms = await serialize(options.kingdoms);\r\n    form.append('kingdoms', kingdoms);\r\n    let settings = {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: form\r\n    };\r\n\r\n    let url = new URL('https://test-seven.site/api/decks/kingdoms');\r\n\r\n    let params = {\r\n        mode: options.mode ? options.mode : \"\",\r\n        page: options.page ? options.page : 1, \r\n        size: options.size ? options.size : 10,\r\n        sens: options.sens ? options.sens : 'asc',\r\n        order_by: options.order_by ? options.order_by : 'id'\r\n    };\r\n\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\r\n    let response = await fetch(url, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getOne(id){\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n    };\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function createUserDeck(form){\r\n\r\n    let settings = {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: form\r\n    };\r\n\r\n    let response = await fetch('https://test-seven.site/api/decks/add', settings);\r\n    let datas = response.json();\r\n    return datas;\r\n}\r\n\r\nasync function updateOne(form, id){\r\n\r\n    let settings = {\r\n        method: 'PATCH',\r\n        credentials: 'include',\r\n        body: form\r\n    };\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/update/${id}`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n\r\n}\r\n\r\nasync function deleteUserDeck(id){\r\n    let settings = {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n    };\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/delete/${id}`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n\r\n}\r\n\r\nexport { getAllDecks, getDecksByKingdoms, getUserDecks, getOne, updateOne, deleteUserDeck, createUserDeck };","import React, {useState, useEffect} from 'react'\r\n\r\nfunction Flash(props){\r\n\r\n    const {message, classes, errorClass,flash ,successClass, timing, handleFlash} = props;\r\n    const [classesState, setClasses] = useState(classes);\r\n    let afterClasses = '';\r\n    \r\n    useEffect(() => {\r\n\r\n        if(flash === false){\r\n            setClasses(classes + ' ' + errorClass)\r\n            setTimeout(() => {\r\n                afterClasses = classes.replace(errorClass, '');\r\n                setClasses(afterClasses);\r\n            }, timing ? timing : 1000);\r\n\r\n        }\r\n\r\n        if(flash === true){\r\n            setClasses(classes + ' ' + successClass);\r\n            setTimeout(() => {\r\n                afterClasses = classes.replace(successClass, '');\r\n                setClasses(afterClasses);\r\n            }, timing ? timing : 1000);\r\n        }\r\n\r\n        handleFlash(null);\r\n\r\n    },[flash])\r\n\r\n    return(\r\n        <>\r\n            <p className={classesState}>{message}</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Flash;","import React from 'react'\r\nimport {GrAddCircle} from 'react-icons/gr'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Plus = (props) => {\r\n    return (\r\n        <Link className=\"add__button mb-4\" to={props.to}><GrAddCircle/></Link>\r\n    )\r\n}\r\n\r\nexport default Plus\r\n","import React from 'react'\r\n\r\nconst List = (props) => {\r\n    const {classes} = props\r\n    return (\r\n        <ul id=\"list\" className={classes}>\r\n            {props.children}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport {deleteUserDeck, getUserDecks} from '../api/Decks';\r\nimport {AiFillCloseCircle} from 'react-icons/ai';\r\nimport {BsPencil} from 'react-icons/bs';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Deck = (props) => {\r\n    const {\r\n            id, \r\n            title,\r\n            total_ec, \r\n            description, \r\n            num_cards, \r\n            listState, \r\n            listStateSetter, \r\n            handleFlash, \r\n            deleteStateSetter, \r\n            reqOptState\r\n        } = props;\r\n    \r\n    const removeData = async () => {\r\n        let deleteResponse = await deleteUserDeck(id);\r\n        let getResponse = await getUserDecks(reqOptState);\r\n        \r\n        if(deleteResponse.code === 200){\r\n            handleFlash(true);\r\n        }else if(deleteResponse.code !== 200){\r\n            handleFlash(false);\r\n        }else{\r\n            handleFlash(null);\r\n        }\r\n        \r\n        listStateSetter(getResponse);\r\n        deleteStateSetter(deleteResponse);\r\n    }\r\n\r\n    const handleClick = (e, state, id) => {\r\n        e.preventDefault();\r\n        removeData();\r\n    }\r\n    \r\n    return (\r\n        <li key={id} className=\"deck__block\">\r\n            <div className=\"deck__inner--left\">\r\n                <h3 className=\"deck__title\">{title}</h3>\r\n                <p className=\"deck__infos\">{description}</p>\r\n                <div className=\"deck__total\">Total : {num_cards}</div>\r\n            </div>\r\n            <div className=\"deck__inner--right\">\r\n                <div className=\"inner__right--text\">\r\n                    <h3 className=\"deck__ec--title\">Ec :</h3>\r\n                    <span className=\"deck__ec--value\">{total_ec}</span>\r\n                </div>\r\n                <div className=\"inner__right--actions\">\r\n                    <div className=\"action\" onClick={(e) => handleClick(e, listState, id)}><AiFillCloseCircle/></div>\r\n                    <Link className=\"action\" to={`/decks/${id}`}><BsPencil/></Link>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Deck;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {BsChevronLeft,BsChevronRight} from 'react-icons/bs'\r\n\r\n\r\nfunction Pagination(props){\r\n    const {\r\n        options, \r\n        setPage, \r\n        setSize , \r\n        containerClasses,\r\n        containerTextBlockClasses, \r\n        leftClasses, \r\n        rightClasses, \r\n        textClasses, \r\n        listSize = [],\r\n        nextPage\r\n    } = props;\r\n\r\n    const [canNext, setCanNext] = useState(true);\r\n\r\n    useEffect(async () => {\r\n\r\n        let newObj = {...options};\r\n        newObj.page = options.page + 1;\r\n        let res = await nextPage(newObj);\r\n\r\n        if(res.code === 200 && res.message.length === 0){\r\n            setCanNext(false);\r\n        }else{\r\n            setCanNext(true);\r\n        }\r\n\r\n    },[options]);\r\n\r\n    return (\r\n        <div className={containerClasses ?? \"pagination__block\"} >\r\n            <div className={leftClasses ?? \"pagination__arrow\"} \r\n                 onClick={(e) => setPage(e, Number(options.page) - 1, options)}\r\n            >\r\n                <BsChevronLeft/>\r\n            </div>\r\n                <div className={containerTextBlockClasses ?? \"pagination__text--block\"}>\r\n                {\r\n                    listSize.map((elmt, index) => {\r\n                        return <p key={index} className={textClasses ?? \"pagination__text\"} onClick={(e) => setSize(e, elmt)}>{elmt}</p>\r\n                    })\r\n                }\r\n                </div>\r\n            <div className={rightClasses ?? \"pagination__arrow\"} \r\n                 onClick={canNext === true ? (e) => setPage(e, Number(options.page) + 1, options) : (e) => setPage(e, 1, options)}\r\n            >\r\n                <BsChevronRight/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport {BsFilterRight} from 'react-icons/bs';\r\n\r\nfunction Filters(props){\r\n    const {containerClasses, onClick, isVisible} = props;\r\n\r\n    return (\r\n        <div className={containerClasses ?? \"filter__container\"} onClick={(e) => onClick(e, isVisible)}>\r\n            <BsFilterRight />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters;","import React,{ useEffect, useRef} from 'react';\r\nimport {AiFillCloseCircle} from 'react-icons/ai'\r\n\r\nfunction Popup(props) {\r\n\r\n    const {\r\n            datas, \r\n            buttonResetText, \r\n            actionClose, \r\n            actionReset, \r\n            actionSelect,\r\n            setCheckBoxes,\r\n            checkboxesState,\r\n            mode,\r\n        } = props;\r\n\r\n    const handleClickCheckBoxes = (e) => {\r\n        let checkboxes = null;\r\n\r\n        if(mode === 'unique'){\r\n            checkboxes = Array.from(document.getElementsByClassName('option__kingdom'));\r\n        }else{\r\n            checkboxes = Array.from(document.querySelectorAll('input[type=\"checkbox\"]')) \r\n        }\r\n\r\n        let checkBoxesState = [];\r\n        checkboxes.map(elmt => {\r\n            return checkBoxesState.push(elmt.checked);\r\n        });\r\n        setCheckBoxes(checkBoxesState);\r\n    }\r\n\r\n    return (\r\n        <div className=\"popup__container\">\r\n            <div className=\"popup__inner--container\">\r\n            <div className=\"popup__box\">\r\n                <form className=\"popup__form\" enctype=\"multipart/form-data\">\r\n                    <div className=\"popup__heading\">\r\n                        <div  className=\"popup__close\" onClick={e => actionClose(e)}>\r\n                            <AiFillCloseCircle />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"popup__form--section\" >\r\n                        <h4 className=\"popup__option--name\">Options for kingdoms</h4>\r\n                        <div className=\"popup__option--container\">\r\n                            <label className=\"popup__option--label\" htmlFor=\"options-select\">Set options :</label>\r\n                            <select id=\"popup__options--select\" name=\"kingdom-options-set\" onChange={actionSelect}>\r\n                                {mode === '' ?\r\n                                    <option value=\"\" selected>Default</option>\r\n                                    :\r\n                                    <option value=\"\">Default</option>\r\n                                }\r\n                                {mode === 'unique' ? \r\n                                    <option value=\"unique\" selected>Unique</option> \r\n                                    : \r\n                                    <option value=\"unique\" >Unique</option>\r\n                                }\r\n                                {mode === 'combination' ? \r\n                                    <option value=\"combination\" selected>Combination</option>\r\n                                    :\r\n                                    <option value=\"combination\">Combination</option>\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    {Object.keys(datas).map(title => {\r\n                        if(datas[title].type === \"checkbox\"){                            \r\n                            return (\r\n                                <div className=\"popup__form--section \" onClick={handleClickCheckBoxes} onChange={datas[title].onChange} >\r\n                                        <h4 className=\"popup__option--name\" >{title}</h4>\r\n                                        {datas[title].values.map((elmt, index) => {\r\n                                                    return (\r\n                                                        <div className=\"popup__option--container\">\r\n                                                            <label className=\"popup__option--label\" htmlFor={elmt}>{datas[title].displayed[index]}</label>\r\n                                                            <input id={elmt} \r\n                                                                   className={mode === 'unique' ? 'popup__option--input option__kingdom': \"popup__option--input\"} \r\n                                                                   type={mode === \"unique\" ? \"radio\" : \"checkbox\"} \r\n                                                                   name={datas[title].field_name} \r\n                                                                   checked={checkboxesState[index]} \r\n                                                                   value={elmt}\r\n                                                            />\r\n                                                        </div>\r\n                                                    )\r\n                                                \r\n                                            })}\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                        if(datas[title].type === \"radio\"){           \r\n                            return (\r\n                                <div className=\"popup__form--section\">\r\n                                    <h4 className=\"popup__option--name\">{title}</h4>\r\n                                        {datas[title].values.map((elmt,index)=> {\r\n                                                return (\r\n                                                    <div className=\"popup__option--container\">\r\n                                                        <label className=\"popup__option--label\" htmlFor={elmt}>{datas[title].displayed[index]}</label>                \r\n                                                        <input className=\"popup__option--input\" type=\"radio\" id={elmt} name={datas[title].field_name} onChange={datas[title].onChange} value={datas[title].values[index]}/>\r\n                                                    </div>\r\n                                                )\r\n                                        })}\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    })}\r\n                    <button type=\"reset\" className=\"btn popup__button\" onClick={actionReset}>{buttonResetText}</button>\r\n                </form>\r\n            </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Popup;\r\n","import React,{useEffect, useState } from 'react';\r\n\r\n/* layout */\r\nimport Layout from '../layouts/Layout';\r\n\r\n/* api */\r\nimport { getUserDecks, getDecksByKingdoms} from '../api/Decks';\r\n\r\n/* components */\r\nimport Flash from '../components/Flash'\r\nimport Plus from '../components/Plus';\r\nimport List from '../components/List';\r\nimport Deck from '../components/Deck';\r\nimport Pagination from '../components/Pagination';\r\nimport Filters from '../components/Filters';\r\nimport Popup from '../components/Popup';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst DecksPage = (props) => {\r\n\r\n    const [decksList, setDecksList] = useState({\r\n        code: 200,\r\n        message: []\r\n    });\r\n    const [flashState, setFlashState] = useState(null);\r\n    const [deleteResponse, setDeleteResponse] = useState({});\r\n    const [filterClicked, setFilter] = useState(true);\r\n    const [reqOpt, setReqOpt] = useState({\r\n        kingdoms: [],\r\n        mode: '',\r\n        page: 1,\r\n        size: 10,\r\n        order_by: 'id',\r\n        sens: 'asc'\r\n    });\r\n\r\n    const [checkboxes, setCheckBoxes] = useState([false, false, false, false,false,false,false]);\r\n    const kingdomsList = JSON.parse(localStorage.getItem('kingdoms'));\r\n    /* datas for popup form */\r\n    const popupDatas = {\r\n        \"List by kingdoms\": {\r\n            displayed: ['Poseidia', 'Eondra', 'Endless night', 'MetaScience', 'The light\\'s temple', 'Celestial purity', 'The saber\\'s way'],\r\n            values: [1, 2, 3, 4, 5, 6, 7],\r\n            field_name: 'kingdoms',\r\n            type: \"checkbox\",\r\n            onChange: (e) => {\r\n                setReqOpt(prevState => {\r\n                    let newObject = {...prevState};\r\n                    let newKingdomsArray = null;\r\n\r\n                    if(prevState.kingdoms instanceof Array){\r\n                        newKingdomsArray = [...prevState.kingdoms];\r\n                    }\r\n\r\n                    if(e.target.checked === true && !newKingdomsArray.includes(e.target.value)){\r\n\r\n                        if(prevState.mode === 'combination' || prevState.mode === ''){\r\n                            newKingdomsArray.push(e.target.value)\r\n                        }\r\n                        \r\n                        if(prevState.mode === 'unique'){\r\n                            newKingdomsArray = [e.target.value]\r\n                        }\r\n\r\n                    };\r\n\r\n                    if(e.target.checked === false) {\r\n                        let index = newKingdomsArray.indexOf(e.target.value);\r\n                        if(index > -1){\r\n                            newKingdomsArray.splice(index, 1);\r\n                        }\r\n                    }\r\n\r\n                    newObject.kingdoms = newKingdomsArray;\r\n                    newObject.order_by = 'kingdom'\r\n                    return newObject;\r\n                });\r\n            }\r\n        },\r\n        \"Order by\": {\r\n            displayed: ['Deck name' ,'Kingdom' ,'Total ec' , 'Num cards'],           \r\n            values: ['deck_name' ,'kingdom' ,'total_ec' , 'num_cards'],\r\n            type: \"radio\",\r\n            field_name: \"order_by\",\r\n            onChange: (e) => {\r\n                setReqOpt({...reqOpt, order_by: e.target.value});\r\n            }\r\n        },\r\n        \"Sens\": {\r\n            displayed: [\"Descendant\"],\r\n            values: [\"desc\"],\r\n            type: \"radio\",\r\n            field_name: \"sens\",\r\n            onChange: (e) => {\r\n                setReqOpt({...reqOpt, sens: e.target.value});\r\n            }\r\n        }\r\n    }\r\n\r\n    /* handle flash messages */\r\n    const handleFlash = (newFlashState) => {\r\n        setFlashState(newFlashState);\r\n    };\r\n\r\n    const handleDelete = (newState) => {\r\n        setDeleteResponse(newState)\r\n    }\r\n\r\n    /* handling fucntion for filter */\r\n    const handleClickFilter = (e, isVisible) => {\r\n        e.preventDefault();\r\n        setFilter(!isVisible);\r\n    } \r\n\r\n    /* handling functions for pagination */\r\n    const handlePage = async (e, newPage, options) => {\r\n        e.preventDefault();\r\n        if(newPage <= 0){\r\n            return;\r\n        }else{\r\n            setReqOpt({...options, page: newPage});  \r\n        }             \r\n    }\r\n\r\n    const handleSize = (e, newSize) => {\r\n        e.preventDefault();\r\n        setReqOpt({...reqOpt, size: newSize});\r\n    }\r\n\r\n    /* handling functions for popup */\r\n    const handleSelectPopup = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(e.target.value === 'unique'){\r\n            setReqOpt({...reqOpt, mode: 'unique'});\r\n        }\r\n\r\n        if(e.target.value === 'combination'){\r\n            setReqOpt({...reqOpt, mode:'combination'});\r\n        }\r\n\r\n        if(e.target.value === ''){\r\n            setReqOpt({...reqOpt, mode:''});\r\n        }\r\n    }\r\n\r\n    const handleClosePopup = (e) => {\r\n        e.preventDefault();\r\n        setFilter(true);\r\n    }\r\n\r\n    const handleResetPopup = (e) => {\r\n        setReqOpt({\r\n            kingdoms:[],\r\n            mode:'',\r\n            page: 1,\r\n            size: 10,\r\n            order_by: 'id',\r\n            sens: 'asc'\r\n        });\r\n        setFilter(true);\r\n    }\r\n\r\n    useEffect(async () => {\r\n        let response = null;\r\n        \r\n        if(reqOpt.kingdoms.length > 0){\r\n            response = await getDecksByKingdoms(reqOpt);\r\n        }else{\r\n            response = await getUserDecks(reqOpt);\r\n        }\r\n\r\n        if(response.code === 200){\r\n            setDecksList(response);\r\n        }else if(response.code !== 200 && decksList.message instanceof Array){\r\n            setDecksList([]);\r\n            setDeleteResponse(response);\r\n            setFlashState(true);\r\n        }else{\r\n            setFlashState(null);\r\n        }\r\n    },[reqOpt]);\r\n\r\n    useEffect(async () => {\r\n        let response = await getUserDecks(reqOpt);\r\n        setDecksList(response);\r\n    },[]);\r\n\r\n    if(decksList.message && decksList.message instanceof Array){\r\n        return (\r\n            <Layout classes=\"decks page\">\r\n                <Filters containerClasses=\"filter__container row justify-end mt-3\" isVisible={filterClicked} onClick={handleClickFilter}/>\r\n                <List classes=\"list__content layout layout__1\">\r\n                      { \r\n                        decksList.message.length > 0 ?\r\n                          decksList.message.map(elmt => {\r\n                                  return(\r\n                                      <Deck id={elmt.id} \r\n                                            title={elmt.deck_name} \r\n                                            description={elmt.description} \r\n                                            num_cards={elmt.num_cards} \r\n                                            total_ec={elmt.total_ec}\r\n                                            listState = {decksList}\r\n                                            listStateSetter = {setDecksList}\r\n                                            deleteState = {deleteResponse}\r\n                                            deleteStateSetter = {handleDelete}\r\n                                            handleFlash = {handleFlash}\r\n                                            reqOptState = {reqOpt}\r\n                                      />)\r\n                              }\r\n                          ) : \r\n                        <p style ={{color: \"black\",marginTop:\"auto\",marginBottom:\"auto\"}}>\r\n                            Empty \r\n                        </p>\r\n\r\n                        }r\n                </List>\r\n                <Flash \r\n                    classes=\"message__flash\" \r\n                    errorClass=\"message__flash-error\" \r\n                    successClass=\"message__flash-done\" \r\n                    message={deleteResponse.message ? deleteResponse.message : \"flash message\"}\r\n                    timing={750}\r\n                    flash={flashState}\r\n                    handleFlash= {handleFlash}\r\n                />\r\n                <Pagination \r\n                    options = {reqOpt}\r\n                    eventsToListen = {filterClicked}\r\n                    containerClasses = \"pagination__block my-3 row justify-between\"\r\n                    containerTextBlockClasses = {\"pagination__text--block row justify-between\"} \r\n                    setPage={handlePage} \r\n                    setSize={handleSize} \r\n                    listSize={[10,20,40]}\r\n                    nextPage={reqOpt.kingdoms.length > 0 ? getDecksByKingdoms : getUserDecks}\r\n                />\r\n                <Plus to={'/decks/create'}/>\r\n                {\r\n                    filterClicked || \r\n                        <Popup\r\n                            mode = {reqOpt.mode}\r\n                            setOptions = {setReqOpt}\r\n                            datas={popupDatas}  \r\n                            buttonResetText=\"Reset\"\r\n                            checkboxesState = {checkboxes}\r\n                            setCheckBoxes = {setCheckBoxes}\r\n                            actionSelect = {handleSelectPopup}\r\n                            actionClose={handleClosePopup}\r\n                            actionReset={handleResetPopup}\r\n                        />\r\n                }\r\n              </Layout>\r\n      )\r\n    }else{\r\n        return (<Redirect to=\"/decks/not-found\"/>);\r\n    }\r\n}\r\n\r\n\r\nexport default DecksPage;\r\n","export default __webpack_public_path__ + \"static/media/merrlyn.a1bb939c.jpg\";","import React from 'react'\r\n\r\nconst CheckBox = (props) => {\r\n    \r\n    const {classes, name, id,text, checked, onChange} = props\r\n\r\n    return (\r\n        <div className=\"row\">\r\n          <input id={name} className={classes} type=\"checkbox\" name={name} onChange={onChange} checked={checked}/>\r\n          <label className=\"form__label\" htmlFor={id}>{text}</label>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckBox\r\n","import React from 'react'\r\nimport CheckBox from './CheckBox'\r\n\r\n\r\nconst Card = (props) => {\r\n    const {id,url,alt,mode,onChange} = props\r\n\r\n    return (\r\n        <li className=\"card__container\" onChange={onChange}>\r\n            <img className=\"card__image\" src={url} alt={alt}/>\r\n            {mode === 'edit' ? <CheckBox id={id} classes=\"card__checkbox\"/> : ''} \r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport Filters from '../components/Filters';\r\nimport Plus from '../components/Plus';\r\nimport Image from '../../src/img/cards/merrlyn.jpg';\r\nimport Main from \"../layouts/Main\";\r\nimport List from '../components/List';\r\nimport Card from '../components/Card';\r\nimport Pagination from \"../components/Pagination\";\r\n\r\nconst CardsPage = (props) => {\r\n    const cards = [\r\n        {\r\n            id: 0,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 1,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 2,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 3,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 4,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 5,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 6,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 7,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 8,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 9,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 10,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 11,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 12,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 13,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 14,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 15,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 16,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 17,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 18,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 19,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n    ]\r\n\r\n    const handlePage = () => {\r\n        return null;\r\n    }\r\n\r\n    const handleSize = () => {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n            <Main classes=\"page\">\r\n                <Filters containerClasses=\"filter__container row justify-end my-3\" />\r\n                <List classes=\"list__content layout layout__3\">\r\n                    {cards.map(elmt => <Card key={elmt.id} url={elmt.url} alt={elmt.alt}/>)}\r\n                </List>\r\n                <Pagination \r\n                    containerClasses = \"pagination__block my-3 row justify-between\"\r\n                    containerTextBlockClasses = {\"pagination__text--block row justify-between\"} \r\n                    setPage={handlePage} \r\n                    setSize={handleSize}\r\n                    listSize={[10,20,40]}\r\n                /> \r\n                <Plus to=\"/cards/from\"/>\r\n            </Main>\r\n    )\r\n}\r\n\r\nexport default CardsPage\r\n","async function getProfile(){\r\n    let settings = {\r\n        method : 'GET',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api/profile`, settings);\r\n    let datas = response.json();\r\n    return datas;\r\n}\r\n\r\nasync function updateProfile(form){\r\n    let settings = {\r\n        method: 'PATCH',\r\n        credentials: 'include',\r\n        body: form\r\n    }\r\n\r\n    let response = await fetch('https://test-seven.site/api/profile', settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function deleteProfile(){\r\n    let settings = {\r\n        method: 'DELETE',\r\n        credentials: 'include',\r\n    }\r\n\r\n    let response = await fetch('https://test-seven.site/api/profile', settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getAvatar(){\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch('https://test-seven.site/api/profile/avatar', settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n \r\n}\r\n\r\nasync function addAvatar(form){\r\n    let settings = {\r\n        method : 'POST',\r\n        credentials: 'include',\r\n        body: form\r\n    } \r\n    \r\n    let response = await fetch('https://test-seven.site/api/profile/avatar', settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function deleteAvatar(){\r\n    let settings = {\r\n        method : 'PATCH',\r\n        credentials: 'include'\r\n    } \r\n}\r\n\r\nasync function updateAvatar(){\r\n    let settings = {\r\n        method : 'PATCH',\r\n        credentials: 'include'\r\n    }\r\n}\r\n\r\nexport {getProfile, updateProfile, deleteProfile, getAvatar, addAvatar, updateAvatar , deleteAvatar}","import React from 'react';\r\n\r\nfunction Loader(props) {\r\n    let { condition, setLoaded } = props;\r\n    let LoaderIcon = props.loaderIcon;\r\n    return (\r\n        <div className=\"loader__block row justify-center align-center\">\r\n            {             \r\n                condition\r\n                ? \r\n                setLoaded(true) \r\n                : \r\n                null\r\n            }\r\n            <LoaderIcon className=\"loader\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;\r\n","const regexModule = {\r\n    regex_order: /^[A-Za-z_]+$/,\r\n    regex_id: /^[1-9]{1}[0-9]{0,9}$/,\r\n    regex_username: /^[a-zA-Z_\\-#]{1}[a-zA-Z0-9_\\-\\s]{4,31}$/,\r\n    regex_name:/^[a-zA-Z]{0,32}$/,\r\n    regex_start_with: /^[a-zA-Z_\\-#]{1}[a-zA-Z0-9_\\-#]{0,31}$/,\r\n    regex_name: /^[A-Za-z]{0,32}$/,\r\n    regex_gender: /(M|F|Other)/,\r\n    regex_email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n    regex_cards: /([1-9]{1}[0-9]{0,4}:[1-9]{1}[0-9]{0,4},{0,1})+/,\r\n    regex_qty: /^[1-9]{1}[0-9]{0,1}$/,\r\n    regex_kingdoms: /^([1-7]{1,1},{0,1}){1,7}[^,]$/,\r\n    regex_page: /^[1-9]{1}[0-9]{0,5}$/,\r\n    regex_page_size: /^[1-9]{1}[0-9]{0,5}$/,\r\n    regex_img: /^([A-Za-z]{3,16}(-[1-9]{1,8}){0,1}(\\.jpg|\\.svg){1,1}){1,1}$/,\r\n    regex_deck_name: /^[A-Za-z0-9_\\-#]{4}[A-Za-z0-9_\\-#\\s]{0,26}$/\r\n}\r\n\r\nexport default regexModule;","import React,{useState, useEffect, useRef} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { BsPencil } from 'react-icons/bs';\r\n\r\n/* api */\r\nimport {getProfile, updateProfile, deleteProfile, addAvatar, getAvatar} from '../api/Profile';\r\n\r\n/* components */\r\nimport Flash from '../components/Flash';\r\nimport { RiLoader3Line } from 'react-icons/ri';\r\nimport Button from '../components/Button';\r\nimport Main from '../layouts/Main';\r\nimport Loader from '../components/Loader';\r\n\r\n/* module */\r\nimport regexModule  from '../modules/regex';\r\n\r\nconst ProfileForm = (props) => {\r\n\r\n    let history = useHistory();\r\n\r\n    /*States */\r\n    const [userInfos,setUserInfos] = useState({\r\n        code: null,\r\n        message: {\r\n            id: '',\r\n            firstname:'',\r\n            lastname:'',\r\n            gender: 'other',\r\n            username: '',\r\n            is_visible: true,\r\n            allow_collections: true\r\n        }\r\n    });\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [avatar, setAvatar] = useState({\r\n        code : '',\r\n        message : {\r\n            avatar : \"\"\r\n        }\r\n    });\r\n    const [avatarForm, setAvatarForm] = useState();\r\n    const [flashState, setFlashState] = useState(null);\r\n    const [flashMessage, setFlashMessage] = useState();\r\n     \r\n    /* ref */\r\n    const firstnameInput = useRef(null);\r\n    const lastnameInput = useRef(null);\r\n    const usernameInput = useRef(null);\r\n    const emailInput = useRef(null);\r\n    const avatarInput = useRef(null);\r\n\r\n    const handleChange = (e) => {\r\n        switch(e.target.id){\r\n            case 'firstname':\r\n                if(regexModule.regex_name.test(e.target.value) === true){\r\n                    if(firstnameInput.current.classList.contains('bad__input')){\r\n                        firstnameInput.current.classList.remove('bad__input');\r\n                    }\r\n                    firstnameInput.current.classList.add('good__input');\r\n                }else{\r\n                    if(firstnameInput.current.classList.contains('good__input')){\r\n                        firstnameInput.current.classList.remove('good__input');\r\n                    }\r\n                    firstnameInput.current.classList.add('bad__input');\r\n                }\r\n\r\n                if(firstnameInput.current.value.length === 0){\r\n                    firstnameInput.current.classList.remove('good__input');\r\n                }\r\n\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.firstname = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n\r\n            case 'lastname':\r\n                if(regexModule.regex_name.test(e.target.value) === true){\r\n                    if(lastnameInput.current.classList.contains('bad__input')){\r\n                        lastnameInput.current.classList.remove('bad__input');\r\n                    }\r\n                    lastnameInput.current.classList.add('good__input');\r\n                }else{\r\n                    if(lastnameInput.current.classList.contains('good__input')){\r\n                        lastnameInput.current.classList.remove('good__input');\r\n                    }\r\n                    lastnameInput.current.classList.add('bad__input');\r\n                }\r\n\r\n                if(lastnameInput.current.value.length === 0){\r\n                    lastnameInput.current.classList.remove('good__input');\r\n                }\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.lastname = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'username':\r\n                if(regexModule.regex_username.test(e.target.value) === true){\r\n                    if(usernameInput.current.classList.contains('bad__input')){\r\n                        usernameInput.current.classList.remove('bad__input');\r\n                    }\r\n                    usernameInput.current.classList.add('good__input');\r\n                }else{\r\n                    if(usernameInput.current.classList.contains('good__input')){\r\n                        usernameInput.current.classList.remove('good__input');\r\n                    }\r\n                    usernameInput.current.classList.add('bad__input');\r\n                }\r\n\r\n                if(usernameInput.current.value.length === 0){\r\n                    usernameInput.current.classList.remove('good__input');\r\n                }\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.username = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'email':\r\n                if(regexModule.regex_email.test(e.target.value) === true){\r\n                    if(emailInput.current.classList.contains('bad__input')){\r\n                        emailInput.current.classList.remove('bad__input');\r\n                    }\r\n                    emailInput.current.classList.add('good__input');\r\n                }else{\r\n                    if(emailInput.current.classList.contains('good__input')){\r\n                        emailInput.current.classList.remove('good__input');\r\n                    }\r\n                    emailInput.current.classList.add('bad__input');\r\n                }\r\n\r\n                if(emailInput.current.value.length === 0){\r\n                    emailInput.current.classList.remove('good__input');\r\n                }\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.email = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'female' :\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.gender = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'male' :\r\n                e.target.checked = true;\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.gender = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'other' :\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.gender = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n\r\n            case 'visible' :\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.is_visible = e.target.checked;\r\n                    return newObj; \r\n                });\r\n                break;\r\n\r\n            case 'collection' :\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.allow_collections = e.target.checked;\r\n                    return newObj; \r\n                });\r\n                break;\r\n\r\n            case 'avatar' :\r\n\r\n                if(e.target.files.length > 1){\r\n                    alert(\"Can send only one file\");\r\n                }\r\n\r\n                if(e.target.files[0].size > 200000){\r\n                    alert(\"file too big\");\r\n                }\r\n\r\n                if(e.target.files[0].type !== \"image/png\" && e.target.files[0].type !== \"image/jpeg\"){\r\n                    alert(\"bad file type should be png or jpg\");\r\n                }\r\n                 \r\n                let form = new FormData();     \r\n                form.append('avatar', e.target.files[0]);\r\n                setAvatarForm(form);\r\n                break;\r\n            default:\r\n                console.error(`Something wrong with ${e.target.id}`);\r\n        }\r\n    }\r\n\r\n    const handleUpdateClick = async (e) => {\r\n        e.preventDefault();\r\n        let form = new FormData();\r\n        Object.keys(userInfos.message).map(elmt => {\r\n            form.append(elmt, userInfos.message[elmt]);\r\n        });\r\n\r\n        let response = await updateProfile(form);\r\n\r\n        if(response.code === 200){\r\n            setUserInfos(response);\r\n            setFlashMessage(response.message.username + \" updated successfully\");\r\n            setFlashState(true);\r\n        }else{\r\n            setFlashMessage(response.message);\r\n            setFlashState(false);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleAvatarClick = (e) => {\r\n        e.preventDefault();\r\n        avatarInput.current.click();    \r\n        return true;\r\n    }\r\n\r\n    const handleFlash = (newFlashState) => {\r\n        setFlashState(newFlashState);\r\n    };\r\n\r\n    const handleDeleteClick = async (e) => {\r\n        e.preventDefault();\r\n        let response = \"\";\r\n        let test = window.confirm(\"Are you sure ?\");\r\n        if(test === true){\r\n            response = await deleteProfile();\r\n            if(response.code === 200){\r\n                setFlashState(true);\r\n                setFlashMessage(response.message);\r\n                setTimeout(() => {\r\n                    history.push('/login');\r\n                },750);\r\n            }else{\r\n                setFlashState(false);\r\n                setFlashMessage(response.message); \r\n            }\r\n        }else{\r\n            alert(\"Welcome back\");\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if(avatarForm){\r\n            let response = await addAvatar(avatarForm);\r\n            if(response.code === 200){\r\n                setAvatar(response);\r\n            }\r\n        }\r\n    }, [avatarForm]);\r\n\r\n    useEffect(async () => {\r\n        let responseUser = await getProfile();\r\n        let responseAvatar = await getAvatar();\r\n\r\n        if(responseAvatar.code === 200){\r\n\r\n            if(responseAvatar.message.avatar === null){\r\n                setAvatar({\r\n                    code: 200,\r\n                    message: {\r\n                        avatar: \"https://test-seven.site/images/user-default.svg\"\r\n                    }\r\n                })\r\n            }else{\r\n                setAvatar(responseAvatar);\r\n            }\r\n        }\r\n\r\n        if(responseUser.code === 200){\r\n            setUserInfos(responseUser);\r\n        }\r\n    },[]);\r\n\r\n    return isLoaded === true ? (\r\n        <Main classes=\"profile__page\">\r\n                <form className=\"form\" onChange={handleChange}>\r\n                        <label className=\"form__label--avatar mb-4\" htmlFor=\"avatar\">\r\n                            <div className=\"profile__heading\" onClick={handleAvatarClick}>\r\n                                {avatar.message.avatar ? <img className=\"profile__avatar\"\r\n                                     src={avatar.message.avatar} \r\n                                     alt=\"avatar\"\r\n                                />\r\n                                :\r\n                                null}\r\n                                <BsPencil className=\"profile__avatar--button\"/>\r\n                            </div>\r\n                        </label>\r\n                        <input ref={avatarInput} \r\n                               id=\"avatar\" \r\n                               className=\"d-none\" \r\n                               name=\"avatar\" \r\n                               type=\"file\" \r\n                               accept=\"image/png, image/jpeg\"\r\n                        />\r\n                        <div className=\"form__section w-80 mb-2\">\r\n                            <h4 className=\"form__section--title\">Profile options</h4>\r\n                        <div className=\"row justify-between w-100\">\r\n                            <label className=\"form__label mr-2\" htmlFor=\"visible\">Public</label>\r\n                            <input id=\"visible\" className=\"form__checkbox mb-1\" type=\"checkbox\" name=\"visible\" checked={userInfos.message.is_visible}/>\r\n                        </div>\r\n                        <div className=\"row justify-between w-100\">\r\n                            <label className=\"form__label mr-2\" htmlFor=\"collection\">Collections</label>\r\n                            <input id=\"collection\" className=\"form__checkbox\" type=\"checkbox\" name=\"collection\" checked={userInfos.message.allow_collections} />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form--section\" >\r\n                            <h4 className=\"form__section--title\">Contact</h4>\r\n                            <div className=\"form__radio--group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"form__radio--button\">\r\n                                        <label className=\"form__radio--label\" htmlFor=\"female\">F</label>\r\n                                        <input \r\n                                            id=\"female\" \r\n                                            className=\"form--radio\" \r\n                                            type=\"radio\" \r\n                                            name=\"gender\" \r\n                                            value=\"F\" \r\n                                            checked={userInfos.message.gender.trim() === 'F' ? true : false}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form__radio--button\">\r\n                                        <label className=\"form__radio--label\" htmlFor=\"male\">M</label> \r\n                                        <input id=\"male\" \r\n                                               className=\"form--radio\"\r\n                                               type=\"radio\" \r\n                                               name=\"gender\" \r\n                                               value=\"M\" \r\n                                               checked={userInfos.message.gender.trim() === 'M' ? true : false}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form__radio--button\">\r\n                                        <label className=\"form__radio--label\" htmlFor=\"other\">Autre</label> \r\n                                        <input id=\"other\" \r\n                                               className=\"form--radio\"\r\n                                               type=\"radio\" \r\n                                               name=\"gender\" \r\n                                               value=\"other\" \r\n                                               checked={userInfos.message.gender === 'other' ? true : false}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <input id=\"firstname\"\r\n                                   ref={firstnameInput} \r\n                                   className=\"form--input\" \r\n                                   type=\"text\"\r\n                                   placeholder=\"firstname\" \r\n                                   value={userInfos.message.firstname}\r\n                            />\r\n                            <input id=\"lastname\"\r\n                                   ref={lastnameInput} \r\n                                   type=\"text\" \r\n                                   className=\"form--input\" \r\n                                   placeholder=\"lastname\" \r\n                                   value={userInfos.message.lastname}\r\n                            />\r\n                            <input id=\"username\"\r\n                                   ref={usernameInput} \r\n                                   type=\"text\" \r\n                                   className=\"form--input\" \r\n                                   placeholder=\"username\" \r\n                                   value={userInfos.message.username}\r\n                            />\r\n                            <input id=\"email\"\r\n                                   ref={emailInput} \r\n                                   type=\"email\" \r\n                                   className=\"form--input\" \r\n                                   placeholder=\"email\" \r\n                                   value={userInfos.message.email}\r\n                            />\r\n                        </div>\r\n                        <Button classes=\"btn\" text=\"update\" bgcolor='#3be73b' color='#202020' onClick={handleUpdateClick}/>\r\n                        <Button classes=\"btn\" text=\"delete\" bgcolor='#ff5d5d' color='#202020' onClick={handleDeleteClick}/>  \r\n                </form>\r\n                <Flash \r\n                    classes=\"message__flash\" \r\n                    errorClass=\"message__flash-error\" \r\n                    successClass=\"message__flash-done\" \r\n                    message={flashMessage ? flashMessage : \"flash message\"}\r\n                    timing={750}\r\n                    flash={flashState}\r\n                    handleFlash= {handleFlash}\r\n                />\r\n            </Main>\r\n    )\r\n    :\r\n    (\r\n        <Loader condition={userInfos.code === 200} \r\n                loaderIcon={RiLoader3Line} \r\n                setLoaded={setIsLoaded} \r\n        />\r\n    )\r\n}\r\n\r\nexport default ProfileForm\r\n","import React from 'react'\r\nimport {HiUserCircle} from 'react-icons/hi'\r\n\r\nconst UserDefault = (props) => {\r\n    return (\r\n        <HiUserCircle className={props.classes}/>\r\n    )\r\n}\r\n\r\nexport default UserDefault\r\n","import React from 'react'\r\nimport './User.css'\r\nimport UserDefault from './UserDefault'\r\n\r\nconst User = (props) => {\r\n    const {content} = props;\r\n    return (\r\n        <li key={content.id} className=\"user__block\">\r\n            <div className=\"user__heading\">\r\n                {content.img ? <img src={content.img} alt=\"user avatar\"/> : <UserDefault classes=\"user__default--icon\"/>}\r\n                {content.title ? <h4>{content.title}</h4> : ''}\r\n            </div>\r\n            <div className=\"user__body\">\r\n                {content.id ? <p>ID : {content.id}</p> : ''}\r\n                {content.location ? <p>{content.location}</p> : ''}\r\n                {content.deck_num ? <p>Decks : {content.deck_num}</p> : ''}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\r\n\r\nconst InputText = (props) => {\r\n    const search = text;\r\n\r\n    if(!props.onChange) props.onChange = () => {return};\r\n    if(!props.onBlur) props.onBlur = () => {return};\r\n\r\n    const {classes,placeholder,onChange,text,onBlur} = props;\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        onChange(e);\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        e.preventDefault();\r\n        onBlur(e);\r\n    } \r\n    return (\r\n        <input className={classes} type=\"text\" placeholder={placeholder} onBlur={handleBlur} onChange={handleChange} value={search} />\r\n    )\r\n}\r\n\r\nexport default InputText\r\n","import React from 'react'\r\nimport InputText from './InputText'\r\nimport {AiOutlineSearch} from 'react-icons/ai'\r\n\r\nconst SearchBar = ({classes,inputClasses,iconClasses,onChange,onClick, placeholder,text}) => {\r\n    return (\r\n        <div className={classes} onClick={onClick}>\r\n            <InputText classes={inputClasses} placeholder={placeholder} onChange={onChange} value={text}/>\r\n            <AiOutlineSearch className={iconClasses}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import React,  {useState} from 'react';\r\nimport List from '../components/List';\r\nimport User from '../components/User';\r\nimport SearchBar from '../components/SearchBar';\r\nimport Main from '../layouts/Main';\r\nimport Pagination from '../components/Pagination';\r\n\r\nconst GamersPage = () => {\r\n\r\n    const users = [\r\n        {\r\n            id: \"0\",\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 1,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 4,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 5,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 6,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 7,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 8,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 9,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 10,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 11,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 12,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 13,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 14,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 15,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        }\r\n    ]\r\n    \r\n    const [searchValue, setSearchValue] = useState(null)\r\n    const handleSearch = (e) => {\r\n        setSearchValue(e.target.value)\r\n    }\r\n\r\n    const handlePage = () => {\r\n        return null;\r\n    }\r\n\r\n    const handleSize = () => {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n            <Main classes=\"page\">\r\n                <SearchBar \r\n                    classes=\"search__bar\" inputClasses=\"search__bar--input mb-2\" \r\n                    iconClasses=\"search__bar--icon\" \r\n                    onChange={handleSearch} text={searchValue}\r\n                    placeholder={\"Search ...\"}\r\n                />\r\n                <List classes=\"list__content layout layout__3\">\r\n                    {\r\n                        users.map(elmt => {\r\n                            return (\r\n                                <User key={elmt.id} content={elmt}/>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n                <Pagination \r\n                    containerClasses = \"pagination__block my-3 row justify-between\"\r\n                    containerTextBlockClasses = {\"pagination__text--block row justify-between\"} \r\n                    setPage={handlePage} \r\n                    setSize={handleSize} \r\n                    listSize={[10,20,40]} \r\n                /> \r\n            </Main>\r\n    )\r\n}\r\n\r\nexport default GamersPage\r\n","import React from 'react'\r\n\r\nfunction ErrorPage() {\r\n    return (\r\n        \r\n            <h1 className=\"title\">404 - Not found</h1>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React from 'react'\r\nimport './SocialButton.css'\r\nconst SocialButton = (props) => {\r\n    const {onClick} = props;\r\n    return (\r\n        <a style={{backgroundColor:props.bgcolor}} href={props.url} className=\"btn btn__social\">\r\n            {props.children}\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default SocialButton;\r\n","import './LoginPage.css';\r\nimport React from 'react';\r\nimport SocialButton from '../components/SocialButton';\r\nimport {FcGoogle} from 'react-icons/fc'\r\nimport {FaFacebookF} from 'react-icons/fa'\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\n\r\nfunction Login(props) {\r\n\r\n    return (\r\n                <ul className=\"social__icons--list\">\r\n                    <li className=\"mb-3\">\r\n                        <SocialButton bgcolor=\"#395693\" url=\"https://test-seven.site/api/auth/facebook\">\r\n                            <FaFacebookF className=\"icons facebook__icon\"/>\r\n                            <span className=\"btn__social--text\">Login facebook</span> \r\n                        </SocialButton>\r\n                    </li>\r\n                    <li>\r\n                        <SocialButton bgcolor=\"#F7F7F7\" url=\"https://test-seven.site/api/auth/google\">\r\n                            <FcGoogle className=\"icons google__icon\" />\r\n                            <span className=\"btn__social--text\">Login Google</span>\r\n                        </SocialButton>\r\n                    </li>\r\n                </ul>\r\n            )\r\n\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport './SettingsDeckPage.css'\r\nconst SettingsDeckPage = () => {\r\n    const deckName = useParams();\r\n    console.log(deckName)\r\n    return (\r\n        <div>\r\n            <h1 className=\"deck__setting--title\">{deckName.name} settings page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingsDeckPage\r\n","import React from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst BackButton = (props) => {\r\n    const {text, url, classes} = props;\r\n    const history = useHistory();\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        history.push(url);\r\n    }\r\n\r\n    return (\r\n        <button className={classes ? classes : 'btn'} onClick={handleClick}>\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default BackButton;","import React from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst NavButton = (props) => {\r\n\r\n    if(!props.onClick) props.onClick = () => {return};\r\n    const {text, url, classes, onClick, timing} = props;\r\n    const history = useHistory();\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        let result = await onClick(e);\r\n        setTimeout(() => {\r\n            if(result === true){\r\n                history.push(url);\r\n            }\r\n        },timing ? timing : 1000);\r\n    }\r\n\r\n    return (\r\n        <button className={classes ? classes : 'btn'} onClick={handleClick}>\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default NavButton;\r\n","function checkRegex(regex, value){\r\n    return regex.test(value);\r\n}\r\nexport default checkRegex;","import React, {useState} from 'react';\r\n\r\n/*api call*/\r\nimport {createUserDeck} from '../api/Decks';\r\n\r\n/*layout*/\r\nimport Layout from '../layouts/Layout';\r\n\r\n/*components*/\r\nimport InputText from '../components/InputText';\r\nimport CheckBox from '../components/CheckBox';\r\nimport BackButton from '../components/BackButton'\r\nimport NavButton from '../components/NavButton';\r\nimport Flash from '../components/Flash';\r\nimport {Link} from 'react-router-dom';\r\n\r\n/* Utilities */\r\nimport checkRegex from '../utilities/checkRegex';\r\n\r\n/*modules*/\r\nimport regexModule from '../modules/regex';\r\n\r\n\r\nconst AddingDeckPage = (props) => {\r\n\r\n    const [fieldValues, setFieldValues] = useState({\r\n        deck_name: '',\r\n        visibility: true\r\n    });\r\n\r\n    const [inputState, setInputState] = useState(true);\r\n    const [createState, setCreateState] = useState({});\r\n    const [flash, setFlash] = useState(null);\r\n    const [flashMessage, setFlashMessage] = useState(null);\r\n\r\n    const handleBlur = (e) => {\r\n        setFieldValues({...fieldValues, deck_name: e.target.value});\r\n        if(e.target.value.length > 0){\r\n            setInputState(false)\r\n        }else{\r\n            setInputState(true);\r\n        };\r\n    }\r\n\r\n    const handleCheck = (e) => {\r\n        setFieldValues({...fieldValues, visibility: e.target.checked});\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        setFieldValues({...fieldValues, deck_name: e.target.value});\r\n        setInputState(!checkRegex(regexModule.regex_deck_name, e.target.value))\r\n    }\r\n\r\n    const handleCreate = async (e) => {\r\n        e.preventDefault();\r\n        const form = new FormData();\r\n        form.append('deck_name', fieldValues.deck_name);\r\n        form.append('visibility', fieldValues.visibility);\r\n        let response = await createUserDeck(form);\r\n\r\n        if(response.code === 200){\r\n            setFlash(true);\r\n            setCreateState(response);\r\n            setFlashMessage(response.message[0].deck_name + \" created succesfully.\");\r\n            return true;\r\n        }else if(response.code !== 200){\r\n            setFlash(false);\r\n            setFlashMessage(response.message);\r\n            return false;\r\n        }else{\r\n            setFlash(null);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    const handleFlash = (newState) => {\r\n        setFlash(newState)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <form className=\"form\">\r\n                    <div className=\"form--section\">\r\n                        <h4 className=\"form__section--title\">Informations</h4>\r\n                        <InputText \r\n                            classes={inputState === true ? \"form--input bad__input\" : 'form--input good__input'} \r\n                            placeholder=\"Deck name\" onChange={handleInputChange} \r\n                            onBlur={handleBlur} \r\n                            value={fieldValues.deck_name}\r\n                        />\r\n                        <CheckBox \r\n                            id=\"visible\" \r\n                            name=\"visibility\" \r\n                            classes=\"form__checkbox\" \r\n                            text=\"public\" \r\n                            onChange={handleCheck} \r\n                            checked={fieldValues.visibility}\r\n                        />\r\n                        <Flash \r\n                            classes=\"message__flash\" \r\n                            errorClass=\"message__flash-error\" \r\n                            successClass=\"message__flash-done\" \r\n                            message={ flashMessage ? flashMessage : 'flash message'}\r\n                            flash={flash}\r\n                            timing={750}\r\n                            handleFlash = {handleFlash}\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <div className=\"buttons__block\">\r\n                    {createState.message ? \r\n                        <Link className=\"btn\" to={`/decks/${createState.message[0].id}/subdecks`}>Next</Link>\r\n                        :\r\n                        <NavButton text=\"Create\" \r\n                        url={`/decks/create`} \r\n                        onClick={handleCreate} \r\n                        timing={1000}\r\n                        />\r\n                    }\r\n                    <NavButton text=\"Import\" url={`/decks/new-deck/import`} onClick={handleCreate} timing={1000}/>\r\n                    <BackButton text=\"Back\" url=\"/decks\"/>\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddingDeckPage\r\n","import React,{useEffect, useReducer} from 'react'\r\nimport Button from '../components/Button'\r\nimport Main from '../layouts/Main'\r\nimport Header from '../layouts/Header'\r\n\r\n\r\n\r\nfunction reducer(state,action){\r\n    switch(action.type){\r\n        case 'STARTER_DECK':\r\n            return { choice:\"/cards/from/starter\"};\r\n        case 'INDIVIDUAL':\r\n            return { choice:\"/cards/from/individual\"};\r\n        case 'BACK':\r\n            return { choice:\"/cards\"};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst ChoicePage = (props) => {\r\n    const init = {choice: \"/cards/from\"}\r\n    const [isClicked, dispatch] = useReducer(reducer,init);\r\n    \r\n    const handleClick = (e,action) => {\r\n        e.preventDefault();\r\n        dispatch({type:action})\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.history.push(isClicked.choice);\r\n    }, [isClicked]) \r\n\r\n    return (        \r\n            <>\r\n                <Header>\r\n                    <h1>Choice :</h1>\r\n                </Header>\r\n                <Main>\r\n                    <div className=\"block\">\r\n                        <Button classes=\"btn\" text=\"Starter Deck\" onClick={(e) => handleClick(e,\"STARTER_DECK\")}/>\r\n                        <Button classes=\"btn\" text=\"Individual Card\" onClick={(e) => handleClick(e,\"INDIVIDUAL\")}/> \r\n                    </div>\r\n                    <Button classes=\"btn\" text=\"cancel\" onClick={(e) => handleClick(e,\"BACK\")}/>\r\n                </Main> \r\n            </>\r\n    )\r\n}\r\n\r\nexport default ChoicePage\r\n","import {useState} from 'react'\r\nimport './SubscribePage.css'\r\n\r\n\r\nfunction SubscribePage() {\r\n    const [formValues, setValue] = useState({\r\n        email:'',\r\n        username: ''\r\n    });\r\n    \r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        setValue({...formValues, [e.target.name]:e.target.value});\r\n    };\r\n\r\n    const handleBlur = (e) => {\r\n        e.preventDefault();\r\n        setValue({...formValues,[e.target.name]:e.target.value})     \r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        const data = new FormData();\r\n        Object.keys(formValues).map((key, index) => {\r\n            return data.append(key,formValues[key]);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\">\r\n            <h2 className=\"form--title\">Inscription :</h2>\r\n            <input \r\n                id=\"email\" \r\n                className=\"subscribe__form--input\"  \r\n                name=\"email\" \r\n                type=\"email\" \r\n                placeholder=\"Taper votre email ...\" \r\n                onBlur={e => handleBlur(e)} \r\n                onChange={e => handleChange(e)} \r\n                value={formValues.email} \r\n            />\r\n            <input \r\n                id=\"username\" \r\n                className=\"subscribe__form--input\" \r\n                name=\"username\" type=\"username\" \r\n                placeholder=\"Tapez votre username \" \r\n                onBlur={e => handleBlur(e)} \r\n                onChange={e => handleChange(e)} \r\n                value={formValues.username}\r\n            />\r\n            <button \r\n                className=\"btn btn-success\" \r\n                type=\"submit\"  \r\n                onClick={e => handleClick(e)}>\r\n                    Valider\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SubscribePage;","import React from 'react'\r\nimport {AiOutlineEye,AiOutlinePlusCircle} from 'react-icons/ai'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst StarterDeck = (props) => {\r\n    const {title, infos, EC, mode} = props;\r\n    return (\r\n        <li className=\"deck__block\">\r\n            <div className=\"deck__inner--left\">\r\n                <h3 className=\"deck__title\">{title}</h3>\r\n                <p className=\"deck__infos\">{infos}</p>\r\n            </div>\r\n            <div className=\"deck__inner--right\">\r\n                <div className=\"inner__right--text\">\r\n                    <h3 className=\"deck__ec--title\">EC :</h3>\r\n                    <span className=\"deck__ec--value\">{EC}</span>\r\n                </div>\r\n                <div className=\"inner__right--actions\">\r\n                    <div className=\"action\" ><AiOutlineEye/></div>\r\n                    <Link className=\"action\" to=\"/cards\"><AiOutlinePlusCircle/></Link>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default StarterDeck\r\n","import React from 'react'\r\nimport List from '../components/List'\r\nimport StarterDeck from '../components/StarterDeck'\r\nimport Button from '../components/Button'\r\nimport Header from '../layouts/Header'\r\nimport Main from '../layouts/Main'\r\n\r\nconst StarterPage = (props) => {\r\n    const datas = [\r\n        {\r\n            id: 0,\r\n            title: \"Dummy\",\r\n            infos: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut architecto laborum cupiditate velit fuga.\",\r\n            EC: 250,\r\n            cards_num: 64\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"Beginner\",\r\n            infos: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut architecto laborum cupiditate velit fuga.\",\r\n            EC: 250,\r\n            cards_num: 64\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"Low Mid\",\r\n            infos: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut architecto laborum cupiditate velit fuga.\",\r\n            EC: 250,\r\n            cards_num: 64\r\n        },\r\n        {\r\n            id: 4,\r\n            title: \"Hig Mid\",\r\n            infos: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut architecto laborum cupiditate velit fuga.\",\r\n            EC: 250,\r\n            cards_num: 64\r\n        },\r\n        {\r\n            id: 5,\r\n            title: \"The cream of the crop\",\r\n            infos: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut architecto laborum cupiditate velit fuga.\",\r\n            EC: 250,\r\n            cards_num: 64\r\n        },\r\n\r\n    ]\r\n    return (\r\n        <>\r\n            <Header>\r\n                <h1>Starter Decks</h1>\r\n            </Header>\r\n            <Main classes=\"page\">\r\n                <List classes=\"layout layout__1 mb-4\">\r\n                    {\r\n                        datas.map((elmt, index )=> (<StarterDeck key={index} title={elmt.title} infos={elmt.infos} EC={elmt.EC} />))\r\n                    }\r\n                </List>\r\n                <Button classes='btn' text=\"cancel\" onClick={props.history.goBack}/>\r\n            </Main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StarterPage\r\n","export default __webpack_public_path__ + \"static/media/framus.28ad3f9b.jpg\";","import {createContext} from 'react'\r\n\r\nconst CardsContext = createContext()\r\n\r\nexport default CardsContext;","import React, {useState} from 'react'\r\nimport List from '../components/List'\r\nimport Card from '../components/Card'\r\nimport Image from '../img/cards/framus.jpg'\r\nimport Button from '../components/Button'\r\nimport CardsContext from '../contexts/CardsContext'\r\nimport Header from '../layouts/Header'\r\nimport Main from '../layouts/Main'\r\n\r\n\r\nconst IndividualPage = (props) => {\r\n    const cards = [\r\n        {\r\n            id: 0,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 1,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 2,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 3,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 4,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 5,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 6,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 7,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 8,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 9,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false\r\n        },\r\n        {\r\n            id: 10,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        }\r\n    ]\r\n    const [isSelected, setIsSelected] = useState(cards)\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        props.history.goBack();\r\n    }\r\n\r\n    const handleChange = (e, id) => {\r\n        setIsSelected(isSelected => {\r\n            const test = [...isSelected]\r\n            test[id].selected = e.target.checked\r\n            console.log(test)\r\n            return [...test];\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <CardsContext.Provider value={[isSelected,setIsSelected]}>\r\n        <Header classes=\"header\">\r\n            <h1>{props.location.pathname.split('/').pop()}</h1>\r\n        </Header>\r\n        <Main classes=\"page\">\r\n            <List classes={`layout layout__3 ${!isSelected.some(elmt => elmt.selected) ? \"mb-4\" : \"mb-1\"}`}>\r\n                {isSelected.map(elmt => <Card key={elmt.id} id={elmt.id} url={elmt.url} alt={elmt.alt} mode=\"edit\" onChange={(e) => handleChange(e,elmt.id)}/>)}\r\n            </List>\r\n            {isSelected.some(elmt => elmt.selected) ? <Button classes=\"btn\" text=\"add\"/> : ''}\r\n            <Button classes=\"btn\" text=\"cancel\" onClick={handleClick}/>\r\n        </Main>\r\n        </CardsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default IndividualPage\r\n","import React from 'react'\r\nimport Layout from '../layouts/Layout'\r\nimport NavButton from '../components/NavButton'\r\n\r\nconst DeckBuildOptions = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <h1>Options :</h1>\r\n                <div className=\"block\">\r\n                    <NavButton text=\"create\" url=\"/decks/new-deck/create\"/>\r\n                    <NavButton text=\"import\" url=\"/decks/new-deck/import\"/>\r\n                </div>\r\n                <NavButton text=\"back\" url=\"/decks\"/>\r\n            </Layout>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeckBuildOptions\r\n","async function getEden(id){\r\n\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    }\r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/eden`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getEdenCards(id){\r\n    let settings = {\r\n        method : 'GET',\r\n        credentials: 'include'\r\n    }\r\n    let url = new URL(`https://test-seven.site/api/decks/${id}/eden/cards`)\r\n    let response = await fetch(url, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function createEden(id){\r\n\r\n    let settings = {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/eden/create`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function deleteEden(id){\r\n    let settings = {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/eden/delete`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\n\r\nexport { getEden, getEdenCards, createEden, deleteEden };","async function getHolyBook(id){\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    }\r\n    \r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/holybook`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getHolyBookCards(id){\r\n    let settings = {\r\n        method : 'GET',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/holybook/cards`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function createHolyBook(id){\r\n\r\n    let settings = {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/holybook/create`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function deleteHolyBook(id){\r\n    let settings = {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/holybook/delete`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nexport { getHolyBook, getHolyBookCards, createHolyBook, deleteHolyBook };","async function getRegister(id){\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    }\r\n    \r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/register`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getRegisterCards(id){\r\n    let settings = {\r\n        method : 'GET',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/register/cards`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function createRegister(id){\r\n\r\n    let settings = {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/register/create`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function deleteRegister(id){\r\n    let settings = {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/register/delete`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nexport { getRegister, getRegisterCards, createRegister, deleteRegister };","import React,{useEffect, useState} from 'react';\r\nimport {useParams, Link} from 'react-router-dom';\r\nimport { GiStack } from 'react-icons/gi';\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport { RiLoader3Line } from 'react-icons/ri';\r\n\r\n/* api */\r\nimport {getEden, createEden, deleteEden} from '../api/Eden.jsx';\r\nimport {getHolyBook, createHolyBook, deleteHolyBook} from '../api/HolyBook.jsx';\r\nimport {getRegister, createRegister, deleteRegister} from '../api/Register.jsx';\r\n\r\n/* layouts */\r\nimport Layout from '../layouts/Layout';\r\n\r\n/* components */\r\nimport Button from '../components/Button';\r\nimport Loader from '../components/Loader';\r\n\r\nconst DeckCreate = (props) => {\r\n    const { id } = useParams();\r\n    const [subdecks, setSubDecks] = useState({\r\n        eden: {\r\n            code: null,\r\n            message: null\r\n        },\r\n        register: {\r\n            code: null,\r\n            message: null\r\n        },\r\n        holybook: {\r\n            code: null,\r\n            message: null\r\n        }\r\n    });\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    const handleClickNav = async (e) => {\r\n        e.preventDefault();\r\n        let response = null;\r\n\r\n        if(e.target.id === 'eden'){\r\n            response = await createEden(id);\r\n            setSubDecks({...subdecks, eden: response});\r\n        }\r\n\r\n        if(e.target.id === 'register'){\r\n            response = await createRegister(id);\r\n            setSubDecks({...subdecks, register: response});\r\n        }\r\n\r\n        if(e.target.id === 'holybook'){\r\n            response = await createHolyBook(id);\r\n            setSubDecks({...subdecks, holybook: response});\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleDeleteEden = async (e) => {\r\n        e.preventDefault();\r\n        let response = await deleteEden(id);\r\n        if(response.code === 200){\r\n            setSubDecks({...subdecks, eden: {\r\n                code:null,\r\n                message: null\r\n            }});\r\n        }else{\r\n            setSubDecks({...subdecks, eden: response});           \r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleDeleteRegister = async (e) => {\r\n        e.preventDefault();\r\n        let response = await deleteRegister(id);\r\n        if(response.code === 200){\r\n            setSubDecks({...subdecks, register: {\r\n                code:null,\r\n                message: null\r\n            }});\r\n        }else{\r\n            setSubDecks({...subdecks, register: response});           \r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleDeleteHolyBook = async (e) => {\r\n        e.preventDefault();\r\n        let response = await deleteHolyBook(id);\r\n        if(response.code === 200){\r\n            setSubDecks({...subdecks, holybook: {\r\n                code:null,\r\n                message: null\r\n            }});\r\n        }else{\r\n            setSubDecks({...subdecks, holybook: response});           \r\n        }\r\n        return true;\r\n    }\r\n    \r\n    useEffect(async () => {\r\n        let eden = await getEden(id);\r\n        let register = await getRegister(id);\r\n        let holybook = await getHolyBook(id);\r\n        let response = {};\r\n\r\n        if(eden.message){\r\n            response = {...response, eden: eden}\r\n        }\r\n\r\n        if(register.message){\r\n            response = {...response, register: register}\r\n        }\r\n\r\n        if(holybook.message){\r\n            response = {...response, holybook: holybook}\r\n        }\r\n\r\n        setSubDecks(response);\r\n    },[]);\r\n\r\n    return loaded === true ? (\r\n        <Layout>\r\n            {subdecks.eden.code === 200 ?\r\n                <div className=\"subdeck__box mb-5\">\r\n                    <div className=\"subdeck__heading py-2\">\r\n                        <h4 className=\"subdeck__type\">eden</h4>\r\n                    </div>\r\n                    <div className=\"subdeck__body row justify-between p-2\">\r\n                        <p className=\"subdeck__infos row align-center\">\r\n                            Num cards : {subdecks.eden.message.qty === undefined ? 0 : subdecks.eden.message.qty}\r\n                        </p>\r\n                        <div className=\"subdeck__icon--list row justify-between\">\r\n                            <Link to={`/decks/${id}/eden`}>\r\n                                <GiStack className=\"subdeck__icon\" />\r\n                            </Link>\r\n                            <AiFillDelete className=\"subdeck__icon\" onClick={handleDeleteEden}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Button id=\"eden\" classes=\"btn mb-3\" text=\"create eden\" onClick={handleClickNav} />\r\n            }\r\n            {subdecks.register.code === 200 ?\r\n                <div className=\"subdeck__box mb-5\">\r\n                    <div className=\"subdeck__heading py-2\">\r\n                        <h4 className=\"subdeck__type\">register</h4>\r\n                    </div>\r\n                    <div className=\"subdeck__body row justify-between p-2\">\r\n                        <p className=\"subdeck__infos  row align-center\">\r\n                            Num cards : {subdecks.register.message.qty === undefined ? 0 : subdecks.register.message.qty}\r\n                        </p>\r\n                        <div className=\"subdeck__icon--list row justify-between\">\r\n                            <Link to={`/decks/${id}/register`}>\r\n                                <GiStack className=\"subdeck__icon\" />\r\n                            </Link>\r\n                            <AiFillDelete className=\"subdeck__icon\" onClick={handleDeleteRegister}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Button id=\"register\" classes=\"btn mb-3\" text=\"create register\" onClick={handleClickNav}/>\r\n            }\r\n            {subdecks.holybook.code === 200 ?\r\n                <div className=\"subdeck__box\">\r\n                    <div className=\"subdeck__heading py-2\">\r\n                        <h4 className=\"subdeck__type\">holybook</h4>\r\n                    </div>\r\n                    <div className=\"subdeck__body row justify-between p-2\">\r\n                        <p className=\"subdeck__infos  row align-center\">\r\n                            Num cards : {subdecks.holybook.message.qty === undefined ? 0 : subdecks.holybook.message.qty }\r\n                        </p>\r\n                        <div className=\"subdeck__icon--list row justify-between\">\r\n                            <Link to={`/decks/${id}/holybook`}>\r\n                                <GiStack className=\"subdeck__icon\" />\r\n                            </Link>\r\n                            <AiFillDelete className=\"subdeck__icon\" onClick={handleDeleteHolyBook}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Button id=\"holybook\" classes=\"btn\" text=\"create holybook\" onClick={handleClickNav}/>\r\n            }\r\n        </Layout>\r\n    )\r\n    :\r\n    (\r\n        <Loader condition = { \r\n                    subdecks.eden.code !== null || \r\n                    subdecks.register.code !== null ||\r\n                    subdecks.holybook.code !== null \r\n                }\r\n                setLoaded = {setLoaded}\r\n                loaderIcon = {RiLoader3Line}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DeckCreate;\r\n","const DeckImport = () => {\r\n    return null;\r\n}\r\n\r\nexport default DeckImport;","import {useHistory} from 'react-router-dom';\r\nimport {GiReturnArrow} from 'react-icons/gi';\r\n\r\nfunction Return(props){\r\n    let history = useHistory();\r\n\r\n    const handleClick = function(e){\r\n        e.preventDefault();\r\n        history.push('/decks');\r\n    }\r\n\r\n    return (\r\n            <div className = \"return__block\" onClick={handleClick}>\r\n                <GiReturnArrow className=\"return__icon\" />\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Return;","import Layout from '../layouts/Layout';\r\nimport Return from '../components/Return'\r\n\r\n\r\nconst EmptyDecksList = (props) => {\r\n\r\n    return (\r\n            <Layout>\r\n                <div className=\"deck__list\">\r\n                    <p className=\"deck__list--empty\">{props.text}</p>\r\n                </div>\r\n                <Return />\r\n            </Layout>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default EmptyDecksList;\r\n","async function getHolyBook(id){\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    }\r\n    \r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/holybook`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getHolyBookCards(id){\r\n    let settings = {\r\n        method : 'GET',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/holybook/cards`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function createHolyBook(id){\r\n\r\n    let settings = {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/holybook/create`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function deleteHolyBook(id){\r\n    let settings = {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/holybook/delete`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nexport { getHolyBook, getHolyBookCards, createHolyBook, deleteHolyBook };","import {FiPlus} from 'react-icons/fi';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction AddCard(props) {\r\n    const {classes, url} = props;\r\n    return (\r\n            <Link className={classes ? classes : \"card__thumbnail--container\"} to={url}>\r\n                <FiPlus />\r\n            </Link>\r\n    )\r\n}\r\n\r\nexport default AddCard;\r\n","\r\nimport {useEffect,useState, useRef} from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n/* layout parts */\r\nimport Main from '../layouts/Main';\r\n\r\n/* components */\r\nimport Button from '../components/Button';\r\nimport Flash from '../components/Flash';\r\n\r\n/* modules */\r\nimport regexModule from '../modules/regex';\r\n\r\n/* api*/\r\nimport { updateOne, getOne } from'../api/Decks.jsx';\r\nimport { getEdenCards } from '../api/Eden.jsx';\r\nimport { getRegisterCards } from '../api/Register.jsx';\r\nimport { getHolyBookCards } from '../api/holyBook.jsx';\r\n\r\n/* utilities */\r\nimport checkRegex from '../utilities/checkRegex';\r\nimport { serialize } from '../utilities/serialize';\r\nimport AddCard from '../components/AddCard';\r\n\r\nfunction ModifyDeckPage(props){\r\n    const [options, setOptions] = useState(JSON.parse(sessionStorage.getItem('kingdoms')));\r\n    const optionsTitle = 'Kingdoms';\r\n    const [deckInfos, setDeckInfos] = useState({});\r\n    const [flashState, setFlashState] = useState(null);\r\n    const [response, setResponse] = useState('');\r\n    const [formOpen, setFormOpen] = useState(false);\r\n    const deckName = useRef(null);\r\n    let { id } = useParams();\r\n    const [edenCards, setEdenCards] = useState({\r\n        cards: []\r\n    });\r\n    const [registerCards, setRegisterCards] = useState({\r\n        cards: []\r\n    });\r\n    const [holybookCards, setHolyBookCards] = useState({\r\n        cards: []\r\n    });\r\n    /* refs */\r\n    let formRef = useRef();\r\n    let pageRef = useRef();\r\n\r\n    /* handling functions */\r\n    const handleFlash = (newFlashState) => {\r\n        setFlashState(newFlashState);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'kingdoms'){\r\n            if(e.target.checked === true){\r\n                setDeckInfos(prevState => {\r\n                    let newArr = prevState.kingdom === null ? [Number(e.target.id)] : [...prevState.kingdom, Number(e.target.id)];\r\n                    const newSet = new Set(newArr);\r\n                    newArr = Array.from(newSet);\r\n                    return {\r\n                        ...prevState,\r\n                        kingdom: newArr.sort()\r\n                    };\r\n                });\r\n            }\r\n            \r\n            if(e.target.checked === false){\r\n                setDeckInfos(prevState => {\r\n                    let newArr = [...prevState.kingdom];\r\n                    const index = newArr.indexOf(Number(e.target.value));\r\n                    if(index > -1){\r\n                        newArr.splice(index, 1);\r\n                    }\r\n\r\n                    return {\r\n                        ...prevState,\r\n                        kingdom: newArr.sort()\r\n                    }\r\n\r\n                })\r\n            }\r\n        }\r\n        \r\n        if(e.target.id === 'deck_name'){\r\n            setDeckInfos({...deckInfos, deck_name: e.target.value})\r\n        }\r\n\r\n        if(e.target.id === 'description'){\r\n            setDeckInfos({...deckInfos, description: e.target.value});\r\n        }\r\n\r\n        if(e.target.id === 'isVisible'){\r\n            setDeckInfos({...deckInfos, is_visible: e.target.checked});\r\n        }\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        if(e.target.id === 'deck_name'){\r\n            setDeckInfos({...deckInfos, deck_name: e.target.value});\r\n        }\r\n    }   \r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        let form = new FormData();\r\n        Object.keys(deckInfos).map(elmt => {\r\n            if(elmt === 'kingdom'){\r\n                form.append(elmt, serialize(deckInfos.kingdom));\r\n            }else{\r\n                form.append(elmt, deckInfos[elmt]);\r\n            }\r\n            return true;\r\n        });\r\n\r\n        let updateRes = await updateOne(form, id);\r\n            setResponse(updateRes);\r\n        if(updateRes.code === 200){\r\n            setFlashState(true);\r\n        }else if(updateRes.code !== 200){\r\n            setFlashState(false);\r\n        }else{\r\n            setFlashState(null)\r\n        }\r\n\r\n        setTimeout(() => {\r\n            setFormOpen(false);\r\n        }, 750)\r\n    }\r\n\r\n    const handleAppearForm = (e) => {\r\n        e.preventDefault();\r\n        setFormOpen(!formOpen);\r\n        setTimeout(() => {\r\n            formRef.current.scrollIntoView({\r\n                behavior: \"smooth\",\r\n                block: \"end\"\r\n            })\r\n        }, 500)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(formOpen === true){\r\n            formRef.current.classList.add(\"isOpen\", \"mt-2\");\r\n        }else{\r\n            formRef.current.classList.remove(\"isOpen\", \"mt-2\");\r\n        }\r\n    }, [formOpen]);\r\n\r\n    useEffect(() => {   \r\n        if(checkRegex(regexModule.regex_deck_name, deckName.current.value) === true){\r\n            deckName.current.classList.add('good__input');\r\n        }\r\n\r\n        if(checkRegex(regexModule.regex_deck_name, deckName.current.value) === false){\r\n            deckName.current.classList.add('bad__input');\r\n        }\r\n\r\n        return () => {\r\n            if(deckName.current.classList.contains('good__input')){\r\n                deckName.current.classList.remove('good__input');\r\n            };\r\n\r\n            if(deckName.current.classList.contains('bad__input')){\r\n                deckName.current.classList.remove('bad__input');\r\n            };\r\n        }\r\n    }, [deckInfos.deck_name]);\r\n\r\n    useEffect(async () => {\r\n        let res = await getOne(id);\r\n        let eden = await getEdenCards(id);\r\n        let register = await getRegisterCards(id);\r\n        let holybook = await getHolyBookCards(id);\r\n\r\n        if(res.code === 200){\r\n            setDeckInfos(res.message);\r\n        }else{\r\n            setFlashState(false);\r\n            setResponse(res);\r\n        }\r\n        \r\n        if(eden.code === 200){\r\n            setEdenCards(eden.message[0]);\r\n        }\r\n\r\n        if(register.code === 200){\r\n            setRegisterCards(register.message[0]);\r\n        }\r\n\r\n        if(holybook.code === 200){\r\n            setHolyBookCards(holybook.message[0]);\r\n        }\r\n\r\n    },[]);\r\n\r\n    return (\r\n        <Main classes=\"page page__deck pt-6 pb-4\">\r\n            <div className=\"subdeck__box mt-3 mb-2\">\r\n                <div className=\"subdeck__heading py-2\">\r\n                    <h4 className=\"subdeck__type\">eden</h4>\r\n                </div>\r\n                <ul className=\"subdeck__body p-2\">\r\n                    {\r\n                        edenCards.cards.length === 0 ?\r\n                            <AddCard \r\n                                classes=\"card__thumbnail--container dashed-border row justify-center align-center\" \r\n                                url={`/decks/${id}/eden`}\r\n                            />                            \r\n                            :\r\n                            <AddCard \r\n                                classes=\"card__thumbnail--container dashed-border row justify-center align-center\" \r\n                                url={`/decks/${id}/eden`}\r\n                            /> \r\n                    }\r\n                </ul>\r\n            </div>\r\n            <div className=\"subdeck__box mb-2\">\r\n                <div className=\"subdeck__heading py-2\">\r\n                    <h4 className=\"subdeck__type\">register</h4>\r\n                </div>\r\n                <ul className=\"subdeck__body p-2\">\r\n                    {\r\n                        registerCards.cards.length === 0 ?\r\n                            <AddCard \r\n                                classes=\"card__thumbnail--container dashed-border row justify-center align-center\" \r\n                                url={`/decks/${id}/register`}\r\n                            />  \r\n                            :\r\n                            null\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <div className=\"subdeck__box mb-2\">\r\n                <div className=\"subdeck__heading py-2\">\r\n                    <h4 className=\"subdeck__type\">holybook</h4>\r\n                </div>\r\n                <ul className=\"subdeck__body p-2\">\r\n                    {\r\n                        holybookCards.cards.length === 0 ?\r\n                            <AddCard \r\n                                classes=\"card__thumbnail--container dashed-border row justify-center align-center\"\r\n                                url={`/decks/${id}/holybook`}\r\n                            />\r\n                            :\r\n                            null\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <div className=\"subdeck__box mb-2\">\r\n                <div className=\"subdeck__heading py-2\">\r\n                    <h4 className=\"subdeck__type\">side deck</h4>\r\n                </div>\r\n                <ul className=\"subdeck__body p-2\">\r\n                    {\r\n                        holybookCards.cards.length === 0 ?\r\n                            <AddCard \r\n                                classes=\"card__thumbnail--container dashed-border row justify-center align-center\"\r\n                                url={`/decks/${id}/holybook`}\r\n                            />\r\n                            :\r\n                            null\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <Button text=\"Infos\" onClick={handleAppearForm}/>\r\n            <form ref={formRef} className=\"deck form mt-2 mb-4\" onChange={handleChange} onBlur={handleBlur}>\r\n                <div className=\"form--section column\">\r\n                    <input id=\"deck_name\" className=\"form--input mb-2\" ref={deckName} type=\"text\" placeholder=\"deck name\" value={deckInfos.deck_name}/>\r\n                    <div className=\"form__option--block row\">\r\n                        <label className=\"form__label mr-2\" htmlFor=\"isVisible\">Public</label>\r\n                        <input id=\"isVisible\" className=\"form__checkbox\" type=\"checkbox\" checked={deckInfos.is_visible}/>\r\n                    </div>\r\n                    <p className=\"row justify-start mb-1\" >Cards number : {deckInfos.num_cards}</p>\r\n                    <p className=\"row jsutify-start mb-2\">Total Celestian energy : {deckInfos.total_ec}</p>\r\n                    {options && options instanceof Array ?\r\n                        <fieldset className=\"pb-2 mb-3\">\r\n                            <legend className=\"px-2\">{optionsTitle}</legend>\r\n                            <ul id=\"kingdoms__list\" className=\"column\">\r\n                                {\r\n                                    options.map(elmt => ( \r\n                                            <li key={elmt.id} className=\"row justify-between\">\r\n                                                <label className=\"form__label\" htmlFor={elmt.id}>{elmt.name}</label>\r\n                                                <input \r\n                                                       id={elmt.id} \r\n                                                       className=\"form__checkbox\" \r\n                                                       type=\"checkbox\" \r\n                                                       name=\"kingdoms\"\r\n                                                       checked ={ deckInfos.kingdom && deckInfos.kingdom.includes(elmt.id)}\r\n                                                       value={elmt.id}\r\n                                                />\r\n                                            </li> \r\n                                        )\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </fieldset>\r\n                        :\r\n                        null\r\n                    }\r\n                    <textarea id=\"description\" className=\"form__textarea mb-3\" placeholder=\"description\" value={deckInfos.description}/>\r\n                </div>\r\n                <Button onClick={handleClick} text=\"update\" />\r\n            </form>\r\n            <Flash \r\n                classes=\"message__flash\" \r\n                errorClass=\"message__flash-error\" \r\n                successClass=\"message__flash-done\" \r\n                message={response.message ? response.message : \"flash message\"}\r\n                timing={750}\r\n                flash={flashState}\r\n                handleFlash={handleFlash}\r\n            />\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default ModifyDeckPage;","import {useEffect, useState, useRef} from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\n/* api */\r\nimport { getEdenCards } from '../api/Eden';\r\nimport { getRegisterCards } from '../api/Register';\r\nimport { getHolyBookCards } from '../api/HolyBook';\r\n\r\n/* components */\r\nimport Loader  from '../components/Loader';\r\nimport { RiLoader3Line } from 'react-icons/ri';\r\nimport { AiFillCloseCircle } from 'react-icons/ai';\r\nimport {AiOutlineArrowLeft} from 'react-icons/ai';\r\nimport Button from '../components/Button';\r\nimport PopupContainer from '../components/PopupContainer';\r\nimport List from '../components/List';\r\nimport Plus from '../components/Plus';\r\n\r\n/* layouts */\r\nimport Main from '../layouts/Main';\r\n\r\nfunction SubDeckPage(props){\r\n\r\n    let endUrl = props.location.pathname.split('/');\r\n    endUrl = endUrl[endUrl.length - 1];\r\n\r\n    let {id} = useParams();\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [cardsList, setCardsList] = useState({\r\n        code: null,\r\n        message: null\r\n    });\r\n    const [isEmpty, setIsEmpty] = useState(true);\r\n    const [test, setTest] = useState(false);\r\n\r\n    const popupRef = useRef(null);\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if(popupRef.current.classList.contains('d-none')){\r\n            popupRef.current.classList.remove('d-none');\r\n        }else{\r\n            popupRef.current.classList.add('d-none');      \r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleValid = (e) => {\r\n        e.preventDefault();\r\n        popupRef.current.classList.add('d-none');\r\n        return true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n           setTest(true); \r\n        }, 500);\r\n    })\r\n\r\n    useEffect(async () => {\r\n        let response = null;\r\n\r\n        if(endUrl === 'eden'){\r\n            response = await getEdenCards(id);\r\n        }\r\n        \r\n        if(endUrl === 'register'){\r\n            response = await getRegisterCards(id);\r\n        }\r\n\r\n        if(endUrl === 'holybook'){\r\n            response = await getHolyBookCards(id);\r\n        }\r\n\r\n        if(response.message.cards.length === 0){\r\n            setIsEmpty(true);\r\n        }else{\r\n            setIsEmpty(false);\r\n        }\r\n\r\n        setCardsList(response);\r\n    },[]);\r\n\r\n\r\n    return loaded === true ? (\r\n        <Main classes=\"page\">\r\n                {\r\n                    isEmpty === true ?\r\n                    (\r\n                        <>  \r\n                            <div className=\"row justify-start w-80\">\r\n                                <Link \r\n                                    className=\"row justify-between align-center\" \r\n                                    to={`/decks/${id}/subdecks`}\r\n                                >\r\n                                    <AiOutlineArrowLeft className=\"arrow mr-2\"/>\r\n                                </Link>\r\n                            </div>\r\n                            <List classes=\"list__content layout layout__1\">\r\n                                <p style ={{color: \"black\",marginTop:\"auto\",marginBottom:\"auto\"}}>\r\n                                        Empty \r\n                                </p>\r\n                            </List>\r\n                            <Plus to={`/decks/${id}/${endUrl}/modify`}/>\r\n                            <PopupContainer \r\n                                classes=\"subdeck column align-center popup__container py-5 d-none\" \r\n                                ref={popupRef}\r\n                            >\r\n                                <div className=\"popup__heading\">\r\n                                    <div className=\"popup__close\" onClick={handleClick}>\r\n                                        <AiFillCloseCircle />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"popup__body my-5\">\r\n                                    <List classes=\"layout layout__3 p-0\">\r\n\r\n                                    </List>\r\n                                </div>\r\n                                <div className=\"popup__footer\">\r\n                                    <Button \r\n                                        text=\"Valid\" \r\n                                        bgcolor=\"#3be73b\" \r\n                                        color=\"#101010\" \r\n                                        padding=\"3vw 0\" \r\n                                        onClick={handleValid}\r\n                                    />\r\n                                </div>\r\n                            </PopupContainer>\r\n                        </>\r\n                    )\r\n                    :\r\n                    (\r\n                        <p style ={{color: \"black\",marginTop:\"auto\",marginBottom:\"auto\", textAlign: \"center\"}}>\r\n                            I'm full\r\n                        </p>\r\n                    )\r\n                }\r\n        </Main>\r\n    )\r\n    :\r\n    (\r\n        <Loader condition={test === true} loaderIcon={RiLoader3Line} setLoaded={setLoaded} />\r\n    )\r\n}\r\n\r\nexport default SubDeckPage;","import React from 'react'\r\n\r\nconst VhInPixels = () => {\r\n    let vh = window.innerHeight * 0.01;\r\n    return (\r\n        <>\r\n        {\r\n            window.addEventListener(\"load\",(e) => {\r\n                document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n            })\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VhInPixels\r\n","import dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\nasync function getTypesList(lang){\r\n    let settings = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': process.env.REACT_APP_TOKEN\r\n        }\r\n\r\n    }\r\n\r\n    let response = await fetch(`https://api.7fallen.ovh/api/types/all/${lang}`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getRaritiesList(lang){\r\n    let settings = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': process.env.REACT_APP_TOKEN\r\n        }\r\n\r\n    }\r\n\r\n    let response = await fetch(`https://api.7fallen.ovh/api/rarities/all/${lang}`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getKingdomsList(lang){\r\n    let settings = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': process.env.REACT_APP_TOKEN\r\n        }\r\n\r\n    }\r\n\r\n    let response = await fetch(`https://api.7fallen.ovh/api/kingdoms/all/${lang}`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getExtensionsList(lang){\r\n    let settings = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': process.env.REACT_APP_TOKEN\r\n        }\r\n\r\n    }\r\n\r\n    let response = await fetch(`https://api.7fallen.ovh/api/extensions/all/${lang}`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getClassesList(lang){\r\n    let settings = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': process.env.REACT_APP_TOKEN\r\n        }\r\n\r\n    }\r\n\r\n    let response = await fetch(`https://api.7fallen.ovh/api/classes/all/${lang}?name=m`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getCapacitiesList(lang){\r\n    let settings = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': process.env.REACT_APP_TOKEN\r\n        }\r\n\r\n    }\r\n\r\n    let response = await fetch(`https://api.7fallen.ovh/api/capacities/all/${lang}?name=a`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getEdenCards(page,count,lang){\r\n    let settings = {\r\n        method:'GET',\r\n        headers: {\r\n            'Authorization': process.env.REACT_APP_TOKEN\r\n        }\r\n    }\r\n    let url = new URL(`https://api.7fallen.ovh/api/cards/all/${lang.toUpperCase()}?types=[1,2,3]&card_count=${count}&page=${page}`);\r\n    let response = await fetch(url,settings);\r\n    let datas = await response.json();\r\n    return {\r\n        code: response.status,\r\n        message: datas\r\n    };\r\n}\r\n\r\nasync function getRegisterCards(page,count,lang){\r\n    let settings = {\r\n        method:'GET',\r\n        headers: {\r\n            'Authorization': process.env.REACT_APP_TOKEN\r\n        }\r\n    }\r\n    let url = new URL(`https://api.7fallen.ovh/api/cards/all/${lang.toUpperCase()}?types=[8]&card_count=${count}&page=${page}`);\r\n    let response = await fetch(url,settings);\r\n    let datas = await response.json();\r\n    return {\r\n        code: response.status,\r\n        message: datas\r\n    };\r\n}\r\n\r\nasync function getHolyBookCards(page,count,lang){\r\n    let settings = {\r\n        method:'GET',\r\n        headers: {\r\n            'Authorization': process.env.REACT_APP_TOKEN\r\n        }\r\n    }\r\n    let url = new URL(`https://api.7fallen.ovh/api/cards/all/${lang.toUpperCase()}?types=[4,5,6,7,9]&card_count=${count}&page=${page}`);\r\n    let response = await fetch(url,settings);\r\n    let datas = await response.json();\r\n    return {\r\n        code: response.status,\r\n        message: datas\r\n    };\r\n}\r\n\r\nexport { \r\n        getEdenCards,\r\n        getRegisterCards,\r\n        getHolyBookCards,\r\n        getTypesList, \r\n        getRaritiesList, \r\n        getKingdomsList, \r\n        getExtensionsList, \r\n        getClassesList, \r\n        getCapacitiesList \r\n    };","export default __webpack_public_path__ + \"static/media/22-2.5f5c400e.gif\";","import React,{useEffect, useRef, useState } from 'react';\r\nimport LoaderGif from '../img/22-2.gif';\r\nimport CardsCounter from './Cards__toolbox/CardsCounter';\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\nfunction InfiniteListTwo(props) {\r\n    \r\n    const { classesContainer, \r\n            classesElement,\r\n            datas,\r\n            size,\r\n            numPerPage,\r\n            page,\r\n            setPage,\r\n            triggerAt\r\n          } = props;\r\n\r\n    /*states*/\r\n    const [isLoadingList, setIsLoadingList] = useState(false);\r\n    const [imagesLoading, setImagesLoading] = useState({});\r\n\r\n    /*constantes*/\r\n    const MAX_PAGE = Math.ceil(size / numPerPage)\r\n\r\n    /*variables*/\r\n    let listBottom = 0;\r\n    let elmtBottom = 0;\r\n    let triggerIndex = 0;\r\n    let isMountedOrUpdated = false;\r\n\r\n    /* refs */\r\n    let listRef = useRef();\r\n    let elmtRef = useRef();\r\n\r\n    /*handlers*/\r\n    const handleScroll = (e) => {\r\n        listBottom = listRef.current.getBoundingClientRect().bottom;\r\n        elmtBottom = elmtRef.current.getBoundingClientRect().bottom;\r\n\r\n        if(page < MAX_PAGE && elmtBottom < listBottom){\r\n            setIsLoadingList(true);\r\n        }\r\n\r\n        if(page === MAX_PAGE){\r\n            setIsLoadingList(false);\r\n        }\r\n\r\n    }\r\n\r\n    const handleImageLoading = (e) => {\r\n        if(e.target.id && e.target.id.startsWith(\"page\")){\r\n            setImagesLoading(prevstate => {\r\n                let newObj = {...prevstate, [e.target.id]: true};\r\n                return newObj;\r\n            })\r\n        }\r\n    }\r\n\r\n    /*use effect*/\r\n    useEffect(() => {\r\n            if(isLoadingList === true && page < MAX_PAGE){\r\n                setPage()   \r\n            }  \r\n    },[isLoadingList]);\r\n\r\n    useEffect(() => {\r\n        if(isLoadingList === true){\r\n            setIsLoadingList(false);\r\n        }\r\n\r\n        if(page === MAX_PAGE && datas.length === size - 1){\r\n            setIsLoadingList(false);\r\n        }\r\n\r\n        if(!isMountedOrUpdated){\r\n            if(datas.length < triggerIndex){\r\n                triggerIndex = datas.length - 1;  \r\n            }else if( datas.length >= triggerIndex){\r\n                triggerIndex = triggerAt * page;\r\n            }\r\n            \r\n        }\r\n        isMountedOrUpdated = true;\r\n    },[datas]);\r\n\r\n    useEffect(() => {\r\n        let newObj = {}\r\n        if(datas){\r\n            datas.map(elmt => {\r\n                newObj[`page__${elmt.id}`] = false;\r\n            })\r\n            setImagesLoading(newObj)\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", handleScroll,true);\r\n        return window.removeEventListener(\"scroll\", handleScroll);\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <ul ref={listRef} className={classesContainer ? classesContainer : \"infinite__container\"}  onLoad={handleImageLoading}>\r\n                {\r\n                    datas.length > 0 &&\r\n                    datas.map((elmt, index) => {\r\n                        return (\r\n                                <li key={index}\r\n                                    ref={elmtRef} \r\n                                    className={classesElement ? classesElement : \"infinite__element\"}\r\n                                >\r\n                                        <img \r\n                                            id={`page__${elmt.id}`}\r\n                                            className={imagesLoading[\"page__\"+elmt.id] === true ? \"card__image\" : \"d-none\"} \r\n                                            src={process.env.REACT_APP_CARDS_STATIC + elmt.image_path} \r\n                                        />\r\n                                        <CardsCounter \r\n                                                classes={imagesLoading[\"page__\"+elmt.id] === true ? \"cards__counter\" : \"d-none\"} \r\n                                                value={elmt.qty} \r\n                                        /> \r\n                                        <img \r\n                                            id={`loader__${elmt.id}`}\r\n                                            className={imagesLoading[\"page__\"+elmt.id] === false ? \"card__image\" : \"d-none\"}\r\n                                            src={LoaderGif}  \r\n                                        />\r\n                                </li>\r\n                            )\r\n                        })\r\n                }\r\n            </ul>\r\n            <img className={isLoadingList === true ? \"loader__image\":\"d-none\" } src={LoaderGif}/>\r\n        </>)\r\n}\r\n\r\nexport default InfiniteListTwo;\r\n","import {useState,useRef, useEffect, forwardRef} from 'react';\r\nimport Loader from './Loader';\r\n\r\nfunction throttling(callback, delay) {\r\n    let timerId = undefined;\r\n\r\n    return function () {\r\n        if(timerId){\r\n            return;\r\n        }\r\n\r\n        setTimeout(() => {\r\n            callback();\r\n\r\n            timerId = undefined;\r\n        },delay);\r\n    }\r\n}\r\n\r\n/*components*/\r\nfunction LoaderList(props) {\r\n    const {classes, url} = props;\r\n    return(\r\n        <img className={classes && classes} src={url} alt=\"loader\"/>\r\n    )\r\n}\r\n\r\nconst InfiniteListThree = (props) => {\r\n    const {\r\n            numberPerPage,\r\n            size,page,\r\n            setPage, \r\n            triggerAt,\r\n            children,\r\n            datas,\r\n            loaderListClasses, \r\n            loaderList\r\n        } = props;\r\n    \r\n\r\n    /*states*/\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    /*constantes*/\r\n    const MAX_PAGES = Math.ceil(size / numberPerPage);\r\n\r\n    /*refs*/\r\n    let listRef = useRef();\r\n    let elmtRef = useRef();\r\n\r\n    if(children.type === 'ul'){\r\n        children.ref = listRef;\r\n    }\r\n\r\n\r\n    if(triggerAt < children.props.children.length - 1){\r\n        children.props.children[triggerAt].ref = elmtRef;\r\n        console.log(children.props.children[triggerAt])\r\n    }\r\n\r\n    if(triggerAt >= children.props.children.length - 1){\r\n        children.props.children[children.props.children.length - 1].ref = elmtRef;\r\n        console.log(children.props.children[children.props.children.length - 1])\r\n    }\r\n\r\n    /*variables*/\r\n    let listBottom = null;\r\n    let elmtBottom = null;\r\n    let isMounted = false;\r\n    let triggerIndex = 0;\r\n\r\n    /*handlers*/\r\n    const handleScroll = (e) => {\r\n        listBottom = listRef.current.getBoundingClientRect().bottom;\r\n        elmtBottom = elmtRef.current.getBoundingClientRect().bottom;\r\n    }\r\n\r\n    /*effect*/\r\n    useEffect(() => {\r\n        if(!isMounted){\r\n\r\n            if(datas.length < triggerIndex){\r\n                triggerIndex = datas.length - 1;  \r\n            }\r\n            \r\n            if( datas.length >= triggerIndex){\r\n                triggerIndex = triggerAt * page;\r\n            }\r\n        }\r\n\r\n        isMounted = true;\r\n\r\n        if(isLoaded === false){\r\n            setIsLoaded(true);\r\n        }\r\n        \r\n    },[datas]);\r\n\r\n    return (\r\n        <>  \r\n            {children}\r\n            {!isLoaded && <LoaderList classes={loaderListClasses} url={loaderList}/>}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default InfiniteListThree;\r\n","import {useState, useEffect } from 'react';\r\nimport {useParams} from 'react-router-dom';\r\n\r\n/*api*/\r\nimport {getEdenCards, getRegisterCards, getHolyBookCards} from '../api/CardsWareHouse';\r\nimport {getEdenCards as getUserEdenCards} from '../api/Eden';\r\nimport {getRegisterCards as getUserRegisterCards} from '../api/Register';\r\nimport {getHolyBookCards as getUserHolyBookCards} from '../api/HolyBook';\r\n\r\n/*components*/\r\nimport Main from '../layouts/Main';\r\nimport Loader from '../components/Loader';\r\nimport {RiLoader3Line} from 'react-icons/ri';\r\nimport Flash from '../components/Flash';\r\nimport Filters from '../components/Filters';\r\nimport InfiniteListTwo from '../components/InfiniteListTwo';\r\nimport CardsCounter from '../components/Cards__toolbox/CardsCounter';\r\nimport LoaderGif from \"../img/22-2.gif\";\r\n\r\nimport dotenv from 'dotenv';\r\nimport InfiniteListThree from '../components/InfiniteListThree';\r\ndotenv.config();\r\n\r\nfunction AddingSubDecksCardsPage(props) {\r\n    /*states*/\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [flashMessage, setFlashMessage] = useState(null);\r\n    const [flashState, setFlashState] = useState(null);\r\n    const [cardsResponse, setCardsResponse] = useState({\r\n        code: '',\r\n        message: ''\r\n    });\r\n    const [page, setPage] = useState(1);\r\n    const [completeList, setCompleteList] = useState([]);\r\n    const [imageLoaded, setImageLoaded] = useState([]);\r\n\r\n    /*variables*/\r\n    let endUrl = props.location.pathname.split('/');\r\n    endUrl = endUrl[endUrl.length - 1];\r\n    let {id} = useParams();\r\n\r\n    /*handlers*/\r\n    const handleFlash = (newFlashState) => {\r\n        setFlashState(newFlashState);\r\n    }\r\n\r\n    /*useEffects*/\r\n    useEffect(async () => {\r\n        let response = '';\r\n        let userSubdeckResponse = '';\r\n        let newCompleteList = []; \r\n\r\n        if(endUrl === 'eden'){\r\n            response = await getEdenCards(page,10,'FR');\r\n            userSubdeckResponse = await getUserEdenCards(id);\r\n        }\r\n\r\n        if(endUrl === 'register'){\r\n            response = await getRegisterCards(page,10,'FR');\r\n            userSubdeckResponse = await getUserRegisterCards(id);\r\n        }\r\n\r\n        if(endUrl === 'holybook'){\r\n            response = await getHolyBookCards(page,10,'FR');\r\n            userSubdeckResponse = await getUserHolyBookCards(id);\r\n        }\r\n        \r\n        if(response.message[1] instanceof Array && userSubdeckResponse.message[0].cards instanceof Array){\r\n            /*init complte list with qty property for each object*/\r\n            newCompleteList = response.message[1].map(elmt => {\r\n                return !elmt.qty && {...elmt, qty: 0};\r\n            })\r\n\r\n            /*set the completeList qty */\r\n            userSubdeckResponse.message[0].cards.map(elmt1 => {\r\n                response.message[1].map((elmt2,index) => {\r\n                    if(elmt1[0] === elmt2.id){\r\n                        return  newCompleteList[index].qty = elmt1[1]; \r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n        setCompleteList(newCompleteList);\r\n    },[page]);\r\n\r\n    useEffect(() => {\r\n        if(loaded === false){\r\n            setLoaded(true)\r\n        }\r\n    }, [completeList])\r\n\r\n    useEffect(() => {\r\n        let newImages = {};\r\n\r\n        if(cardsResponse.message[1] instanceof Array){\r\n            cardsResponse.message[1].map(elmt => {\r\n                newImages[elmt.id] = false;    \r\n            })\r\n        }\r\n        \r\n        setImageLoaded(newImages);\r\n    }, [cardsResponse.message[1]]);\r\n\r\n    return loaded === true ? (\r\n        <Main classes=\"subdeck page\">\r\n            <Filters containerClasses=\"filter__container row justify-end my-2\" />\r\n            {/* {Object.keys(completeList).length > 0 && \r\n                <InfiniteListTwo \r\n                    classesContainer=\"subdeck list__content layout layout__1 mb-2\" \r\n                    classesElement=\"card__container\"\r\n                    classesImages=\"card__image\"\r\n                    classesLoaderList=\"loader__image\"\r\n                    datas={completeList}\r\n                    size={cardsResponse.message[0]}\r\n                    numPerPage={10}\r\n                    page={page}\r\n                    setPage={() => setPage(page + 1)}\r\n                    triggerAt={9}\r\n                />\r\n            } */}\r\n            {\r\n                <InfiniteListThree \r\n                    page={page} \r\n                    datas={completeList}\r\n                    triggerAt={5} \r\n                    setPage={setPage} \r\n                    loaderListClasses=\"loader__image\" \r\n                    loaderList={LoaderGif}\r\n                >\r\n                    <ul className=\"subdeck list__content layout layout__1 mb-2\">\r\n                        <li>salut</li>\r\n                        <li>salut</li>\r\n                        <li>salut</li>\r\n                    </ul>\r\n                </InfiniteListThree>\r\n            }\r\n\r\n            <Flash \r\n                classes=\"message__flash\" \r\n                errorClass=\"message__flash-error\" \r\n                successClass=\"message__flash-done\" \r\n                message={flashMessage ? flashMessage : \"flash message\"}\r\n                timing={750}\r\n                flash={flashState}\r\n                handleFlash= {handleFlash}\r\n            />\r\n        </Main>\r\n    )\r\n    :\r\n    <Loader condition={cardsResponse.code === 200} loaderIcon={RiLoader3Line} setLoaded={setLoaded} />\r\n    \r\n}\r\n\r\nexport default AddingSubDecksCardsPage;\r\n","import { useEffect } from 'react'\n\n//Layout element import\nimport Footer from'./layouts/Footer';\nimport Menu from './components/Menu';\n\n//Settings import\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n//Components imports\nimport Navigation from './components/Navigation';\nimport Header from './layouts/Header';\nimport Avatar from './components/Avatar';\nimport Logout from './components/Logout';\n\n// Pages import\nimport LandingPage from './pages/LandingPage';\nimport DecksPage from './pages/DecksPage';\nimport CardsPage from './pages/CardsPage';\nimport ProfilePage from './pages/ProfilePage';\nimport GamersPage from './pages/GamersPage';\nimport ErrorPage from './pages/ErrorPage';\nimport LoginPage from './pages/LoginPage';\nimport SettingsDeckPage from './pages/SettingsDeckPage';\nimport AddingDeckPage from './pages/AddingDeckPage';\nimport ChoicePage from './pages/ChoicePage';\nimport SubscribePage from './pages/SubscribePage';\nimport StarterPage from './pages/StarterPage';\nimport IndividualPage from './pages/IndividualPage';\nimport DeckBuildOptions from './pages/DeckBuildOptions';\nimport DeckCreate from './pages/DeckCreate';\nimport DeckImport from './pages/DeckImport';\nimport EmptyDecksList from './pages/EmptyDecksList';\nimport ModifyDeckPage from './pages/ModifyDeckPage';\nimport SubDeckPage from './pages/SubDeckPage';\n\n//Utilities import\nimport VhInPixels from './utilities/VhInPixels';\nimport { getRaritiesList, getTypesList, getKingdomsList, getCapacitiesList, getExtensionsList, getSubdeckCards, getClassesList } from './api/CardsWareHouse';\nimport AddingSubDecksCardsPage from './pages/AddingSubDecksPage';\n\nfunction App() {\n\n  const pages = [\n    {\n        exact: true,\n        path:'/',\n        component: LandingPage,\n    },\n    {\n        strict: true,\n        path:'/login',\n        component: LoginPage,\n    },\n    {\n        strict: true,\n        path:'/profile',\n        component: ProfilePage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks',\n        component: DecksPage\n    \n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/create',\n        component: AddingDeckPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/empty',\n        component: EmptyDecksList,\n        props: {text: \"No Decks \"} \n    },\n    {\n        exact: true,\n        strict: true,\n        path: '/decks/:id',\n        component: ModifyDeckPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/:id/eden',\n        component: AddingSubDecksCardsPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/:id/register',\n        component: AddingSubDecksCardsPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/:id/holybook',\n        component: AddingSubDecksCardsPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/new-deck/build',\n        component: DeckBuildOptions\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/new-deck/import',\n        component: DeckImport\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/cards',\n        component: CardsPage,\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/cards/from',\n        component: ChoicePage,\n    },\n    {\n        strict:true,\n        path:'/cards/from/starter',\n        component: StarterPage,\n    },\n    {\n        strict:true,\n        path:'/cards/from/individual',\n        component: IndividualPage,\n    },\n    {\n\n        strict: true,\n        path:'/deck/:name',\n        component: SettingsDeckPage\n    },\n    {\n\n        strict: true,\n        path:'/gamers',\n        component: GamersPage\n    },\n    {\n        component: ErrorPage\n    },\n  ]\n\n  useEffect(async () => {\n\n    if(!sessionStorage.getItem('types')){\n        let types = await getTypesList('FR');\n        sessionStorage.setItem('types',JSON.stringify(types));\n    }\n\n    if(!sessionStorage.getItem('kingdoms')){\n        let kingdoms = await getKingdomsList('FR');\n        sessionStorage.setItem('kingdoms',JSON.stringify(kingdoms));\n    }\n\n    if(!sessionStorage.getItem('rarities')){\n        let rarities = await getRaritiesList('FR');\n        sessionStorage.setItem('rarities',JSON.stringify(rarities));\n    }\n\n    if(!sessionStorage.getItem('extensions')){\n        let extensions = await getExtensionsList('FR');\n        sessionStorage.setItem('extensions',JSON.stringify(extensions));\n    }\n   \n  }, []);\n\n  return (\n        <>\n          <VhInPixels/>\n          <Router basename=\"/\">\n              <Navigation pages={pages} />\n            <Footer classes=\"footer\">\n              <Menu classes=\"navbar\" />\n            </Footer>\n          </Router>\n        </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n        <App />\n    ,document.getElementById('root'));"],"sourceRoot":""}