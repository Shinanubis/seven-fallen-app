{"version":3,"sources":["layouts/Footer.jsx","components/Menu.js","components/Navigation.jsx","layouts/Header.jsx","components/Avatar.jsx","components/Logout.jsx","components/Button.jsx","pages/LandingPage.jsx","layouts/Main.jsx","layouts/Layout.jsx","utilities/serialize.js","api/Decks.jsx","components/Flash.jsx","components/Plus.jsx","components/List.jsx","components/Deck.jsx","components/Pagination.jsx","components/Filters.jsx","components/Popup.jsx","pages/DecksPage.jsx","img/cards/merrlyn.jpg","components/CheckBox.jsx","components/Card.jsx","pages/CardsPage.jsx","api/Profile.jsx","components/Loader.jsx","modules/regex.js","pages/ProfilePage.jsx","components/UserDefault.jsx","components/User.jsx","components/InputText.jsx","components/SearchBar.jsx","pages/GamersPage.jsx","pages/ErrorPage.jsx","components/SocialButton.jsx","pages/LoginPage.jsx","pages/SettingsDeckPage.jsx","components/BackButton.jsx","components/NavButton.jsx","utilities/checkRegex.js","pages/AddingDeckPage.jsx","pages/ChoicePage.jsx","pages/SubscribePage.jsx","components/StarterDeck.jsx","pages/StarterPage.jsx","img/cards/framus.jpg","contexts/CardsContext.jsx","pages/IndividualPage.jsx","pages/DeckBuildOptions.jsx","api/Eden.jsx","api/HolyBook.jsx","api/Register.jsx","pages/DeckCreate.jsx","pages/DeckImport.jsx","components/Return.jsx","pages/EmptyDecksList.jsx","pages/ModifyDeckPage.jsx","components/PopupContainer.jsx","pages/SubDeckPage.jsx","utilities/VhInPixels.jsx","api/CardsWareHouse.jsx","components/Toolbar.jsx","pages/AddingSubDecksPage.jsx","App.jsx","index.js"],"names":["Footer","props","classes","className","children","Menu","initialState","item__1","item__2","item__3","item__4","useState","isClicked","setIsClicked","handleClick","e","persist","field","currentTarget","id","prevstate","useEffect","onClick","to","Navigation","pages","map","page","index","exact","strict","path","component","Header","Avatar","url","alt","src","Logout","containerClasses","Button","forwardRef","bgcolor","color","size","text","padding","type","style","backgroundColor","width","LandingPage","history","useHistory","uri","preventDefault","push","handleConnexion","Main","layout","Array","elmt","serialize","arr","TypeError","toString","getUserDecks","options","a","settings","method","credentials","URL","params","sens","order_by","Object","keys","forEach","key","searchParams","append","fetch","response","json","datas","getDecksByKingdoms","form","FormData","kingdoms","body","mode","getOne","createUserDeck","updateOne","deleteUserDeck","Flash","message","errorClass","flash","successClass","timing","handleFlash","classesState","setClasses","afterClasses","setTimeout","replace","Plus","List","Deck","title","total_ec","description","num_cards","listStateSetter","listState","deleteStateSetter","reqOptState","removeData","deleteResponse","getResponse","code","state","Pagination","setPage","setSize","containerTextBlockClasses","leftClasses","rightClasses","textClasses","listSize","nextPage","canNext","setCanNext","newObj","res","length","Number","Filters","isVisible","Popup","buttonResetText","actionClose","actionReset","actionSelect","setCheckBoxes","checkboxesState","handleClickCheckBoxes","checkboxes","from","document","getElementsByClassName","querySelectorAll","checkBoxesState","checked","enctype","htmlFor","name","onChange","value","selected","values","displayed","field_name","DecksPage","decksList","setDecksList","flashState","setFlashState","setDeleteResponse","filterClicked","setFilter","reqOpt","setReqOpt","popupDatas","JSON","parse","localStorage","getItem","prevState","newObject","newKingdomsArray","target","includes","indexOf","splice","newFlashState","handleDelete","newState","handlePage","newPage","Layout","deck_name","deleteState","marginTop","marginBottom","eventsToListen","newSize","setOptions","CheckBox","Card","CardsPage","cards","Image","getProfile","updateProfile","deleteProfile","getAvatar","addAvatar","Loader","condition","setLoaded","LoaderIcon","loaderIcon","regexModule","regex_order","regex_id","regex_username","regex_name","regex_start_with","ProfileForm","firstname","lastname","gender","username","is_visible","allow_collections","userInfos","setUserInfos","isLoaded","setIsLoaded","avatar","setAvatar","avatarForm","setAvatarForm","flashMessage","setFlashMessage","firstnameInput","useRef","lastnameInput","usernameInput","emailInput","avatarInput","handleUpdateClick","handleDeleteClick","window","confirm","alert","responseUser","responseAvatar","test","current","classList","contains","remove","add","regex_email","email","files","console","error","click","ref","accept","trim","placeholder","RiLoader3Line","UserDefault","User","content","img","location","deck_num","InputText","search","onBlur","SearchBar","inputClasses","iconClasses","GamersPage","searchValue","setSearchValue","ErrorPage","SocialButton","href","dotenv","config","Login","SettingsDeckPage","deckName","useParams","log","BackButton","NavButton","result","checkRegex","regex","AddingDeckPage","visibility","fieldValues","setFieldValues","inputState","setInputState","createState","setCreateState","setFlash","handleCreate","regex_deck_name","reducer","action","choice","ChoicePage","useReducer","dispatch","SubscribePage","formValues","setValue","handleChange","handleBlur","data","StarterDeck","infos","EC","StarterPage","cards_num","goBack","CardsContext","createContext","IndividualPage","isSelected","setIsSelected","Provider","pathname","split","pop","some","DeckBuildOptions","getEden","getEdenCards","createEden","deleteEden","getHolyBook","getHolyBookCards","createHolyBook","deleteHolyBook","getRegister","getRegisterCards","createRegister","deleteRegister","DeckCreate","eden","register","holybook","subdecks","setSubDecks","loaded","handleClickNav","handleDeleteEden","handleDeleteRegister","handleDeleteHolyBook","undefined","qty","DeckImport","Return","EmptyDecksList","ModifyDeckPage","deckInfos","setDeckInfos","setResponse","kingdom","updateRes","newArr","newSet","Set","sort","PopupContainer","SubDeckPage","endUrl","setCardsList","isEmpty","setIsEmpty","setTest","popupRef","textAlign","VhInPixels","vh","innerHeight","addEventListener","documentElement","setProperty","getTypesList","lang","headers","process","getRaritiesList","getKingdomsList","getExtensionsList","count","toUpperCase","status","Toolbar","toolsList","NewComponent","AddingSubDecksCardsPage","cardsResponse","setCardsResponse","toolBarList","Minus","Trash","handleToolbarList","image_path","loading","App","LoginPage","ProfilePage","sessionStorage","types","setItem","stringify","rarities","extensions","basename","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d54229d9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Footer = (props) => {\r\n    const {classes} = props; \r\n    return (\r\n        <footer className={classes}>\r\n            {props.children}\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Link } from 'react-router-dom';\r\nimport {useState, useEffect} from 'react';\r\nimport {RiSettings3Fill,RiFileList2Fill} from 'react-icons/ri';\r\nimport {GrStackOverflow} from 'react-icons/gr';\r\nimport {HiOutlineUsers} from 'react-icons/hi';\r\nimport './Menu.css';\r\n\r\n\r\n\r\nfunction Menu (props) {\r\n    const {classes} = props;\r\n    const initialState = {\r\n        item__1: false,\r\n        item__2: false,\r\n        item__3: false,\r\n        item__4: false\r\n    }\r\n\r\n    const [isClicked, setIsClicked] = useState(initialState);\r\n\r\n    const handleClick = (e) => {\r\n           e.persist()\r\n           const field = e.currentTarget.id\r\n           setIsClicked(initialState)\r\n           setIsClicked(prevstate => ({...prevstate,\r\n               [field]: true\r\n           }))            \r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsClicked({item__2:true})\r\n    },[])\r\n\r\n    return (\r\n        <nav className={classes}>\r\n            \r\n            <ul className=\"menu\" >\r\n                <div className=\"menu__bubble\"></div>\r\n                <li id=\"item__1\" className={isClicked.item__1 ? \"menu__item move-up\" : \"menu__item\"} onClick={handleClick}>\r\n                    <Link className=\"menu__link\" to=\"/profile\">\r\n                        <RiSettings3Fill className=\"menu__icon\"/>\r\n                    </Link>\r\n                </li>\r\n                <li id=\"item__2\" className={isClicked.item__2 ? \"menu__item move-up\" : \"menu__item\"} onClick={handleClick}>\r\n                    <Link   id=\"item__2\" className=\"menu__link\" to=\"/decks\">\r\n                        <RiFileList2Fill className=\"menu__icon\"/>\r\n                    </Link>\r\n                </li>\r\n                <li id=\"item__3\"  className={isClicked.item__3 ? \"menu__item move-up\" : \"menu__item\"} onClick={handleClick}>\r\n                    <Link className=\"menu__link\" to=\"/cards\">\r\n                        <GrStackOverflow className=\"menu__icon\"/>\r\n                    </Link>\r\n                </li>\r\n                <li id=\"item__4\" className={isClicked.item__4 ? \"menu__item move-up\" : \"menu__item\"} onClick={handleClick}>\r\n                    <Link className=\"menu__link\" to=\"/gamers\">\r\n                        <HiOutlineUsers className=\"menu__icon\"/>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Menu;","import {Switch,Route} from 'react-router-dom'\r\n\r\n\r\nfunction Navigation({pages}) {\r\n    return(\r\n        \r\n        <Switch > \r\n            {pages.map((page, index) => (    \r\n                    <Route \r\n                        key={index} exact={page.exact ?? page.exact} \r\n                        strict={page.strict ?? page.strict} path={page.path ?? page.path}\r\n                        component={page.props ? () => <page.component {...page.props} /> : page.component}\r\n                    />\r\n                ))}\r\n        </Switch>       \r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react'\r\n\r\nconst Header = (props) => {\r\n    const {classes} = props;\r\n    return (\r\n       <header className={classes ?? \"header\"}>\r\n           {props.children}\r\n       </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport {AiOutlineUser} from 'react-icons/ai'\r\n\r\nfunction Avatar(props){\r\n    const {classes, url, alt} = props;\r\n\r\n    return (\r\n        <>\r\n            {url ? \r\n                <img className={classes ?? \"avatar\"} src={url} alt={alt}/> \r\n                    : \r\n                <div className={classes ?? \"avatar\"}><AiOutlineUser /></div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport {AiOutlineLogout} from 'react-icons/ai';\r\n\r\nfunction Logout(props){\r\n    const {containerClasses} = props;\r\n\r\n    return (\r\n        <div className={containerClasses ?? 'logout'}>\r\n            <AiOutlineLogout className=\"menu__icon menu__icon-logout\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logout;","import React,{forwardRef} from 'react'\r\nconst Button = forwardRef((props) => {\r\n    const {id, classes,bgcolor,color, size,onClick, text, padding} = props\r\n    \r\n    return (\r\n\r\n        <button \r\n            id={id ? id : null}\r\n            type=\"button\"\r\n            className = {classes ? classes : \"btn\"}\r\n            style={{\r\n                padding: padding ?? padding,\r\n                backgroundColor:bgcolor ?? bgcolor,\r\n                color:color ?? color,\r\n                width: size ?? size\r\n            }}\r\n            onClick={onClick ?? onClick}\r\n        >\r\n        {text}\r\n        </button>\r\n    )\r\n})\r\n\r\nexport default Button\r\n","import React from 'react';\r\nimport Button from '../components/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LandingPage = (props) => {\r\n    \r\n    let history = useHistory();\r\n\r\n    const handleConnexion = (e,uri) => {\r\n        e.preventDefault();\r\n        history.push(uri)\r\n    }\r\n \r\n    return (\r\n            <>\r\n                <Button classes=\"btn\" text=\"Connexion\" onClick={e => handleConnexion(e,'/login')}/>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from 'react'\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <main id=\"main\" className={props.classes}>\r\n            {props.children}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Main from './Main'\r\n\r\nconst layout = ({children}) => {\r\n        return (\r\n        <>\r\n           <Main classes=\"page\">\r\n               {children instanceof Array ? children.map((elmt, index) => {\r\n                   return elmt;\r\n                }) : ''}\r\n           </Main> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default layout\r\n","export function serialize(arr){\r\n    if(!arr instanceof Array){\r\n        throw TypeError(\"The serialize function argument should be an Array\");\r\n    }\r\n\r\n    return arr.toString();\r\n}","import {serialize} from '../utilities/serialize.js';\r\n\r\nasync function getAllDecks(){\r\n\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    };\r\n\r\n    let response = await fetch('https://test-seven.site/api/decks/shared', settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getUserDecks(options){\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    };\r\n    let url = new URL('https://test-seven.site/api/decks');\r\n\r\n    let params = {\r\n        page: options.page ? options.page : 1, \r\n        size: options.size ? options.size : 10,\r\n        sens: options.sens ? options.sens : 'asc',\r\n        order_by: options.order_by ? options.order_by : 'id'\r\n    };\r\n\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\r\n    let response = await fetch(url, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n    \r\n}\r\n\r\nasync function getDecksByKingdoms(options){\r\n    let form = new FormData();\r\n    let kingdoms = await serialize(options.kingdoms);\r\n    form.append('kingdoms', kingdoms);\r\n    let settings = {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: form\r\n    };\r\n\r\n    let url = new URL('https://test-seven.site/api/decks/kingdoms');\r\n\r\n    let params = {\r\n        mode: options.mode ? options.mode : \"\",\r\n        page: options.page ? options.page : 1, \r\n        size: options.size ? options.size : 10,\r\n        sens: options.sens ? options.sens : 'asc',\r\n        order_by: options.order_by ? options.order_by : 'id'\r\n    };\r\n\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\r\n    let response = await fetch(url, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getOne(id){\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n    };\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function createUserDeck(form){\r\n\r\n    let settings = {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: form\r\n    };\r\n\r\n    let response = await fetch('https://test-seven.site/api/decks/add', settings);\r\n    let datas = response.json();\r\n    return datas;\r\n}\r\n\r\nasync function updateOne(form, id){\r\n\r\n    let settings = {\r\n        method: 'PATCH',\r\n        credentials: 'include',\r\n        body: form\r\n    };\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/update/${id}`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n\r\n}\r\n\r\nasync function deleteUserDeck(id){\r\n    let settings = {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n    };\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/delete/${id}`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n\r\n}\r\n\r\nexport { getAllDecks, getDecksByKingdoms, getUserDecks, getOne, updateOne, deleteUserDeck, createUserDeck };","import React, {useState, useEffect} from 'react'\r\n\r\nfunction Flash(props){\r\n\r\n    const {message, classes, errorClass,flash ,successClass, timing, handleFlash} = props;\r\n    const [classesState, setClasses] = useState(classes);\r\n    let afterClasses = '';\r\n    \r\n    useEffect(() => {\r\n\r\n        if(flash === false){\r\n            setClasses(classes + ' ' + errorClass)\r\n            setTimeout(() => {\r\n                afterClasses = classes.replace(errorClass, '');\r\n                setClasses(afterClasses);\r\n            }, timing ? timing : 1000);\r\n\r\n        }\r\n\r\n        if(flash === true){\r\n            setClasses(classes + ' ' + successClass);\r\n            setTimeout(() => {\r\n                afterClasses = classes.replace(successClass, '');\r\n                setClasses(afterClasses);\r\n            }, timing ? timing : 1000);\r\n        }\r\n\r\n        handleFlash(null);\r\n\r\n    },[flash])\r\n\r\n    return(\r\n        <>\r\n            <p className={classesState}>{message}</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Flash;","import React from 'react'\r\nimport {GrAddCircle} from 'react-icons/gr'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Plus = (props) => {\r\n    return (\r\n        <Link className=\"add__button mb-4\" to={props.to}><GrAddCircle/></Link>\r\n    )\r\n}\r\n\r\nexport default Plus\r\n","import React from 'react'\r\n\r\nconst List = (props) => {\r\n    const {classes} = props\r\n    return (\r\n        <ul className={classes}>\r\n            {props.children}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport {deleteUserDeck, getUserDecks} from '../api/Decks';\r\nimport {AiFillCloseCircle} from 'react-icons/ai';\r\nimport {BsPencil} from 'react-icons/bs';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Deck = (props) => {\r\n    const {\r\n            id, \r\n            title,\r\n            total_ec, \r\n            description, \r\n            num_cards, \r\n            listState, \r\n            listStateSetter, \r\n            handleFlash, \r\n            deleteStateSetter, \r\n            reqOptState\r\n        } = props;\r\n    \r\n    const removeData = async () => {\r\n        let deleteResponse = await deleteUserDeck(id);\r\n        let getResponse = await getUserDecks(reqOptState);\r\n        \r\n        if(deleteResponse.code === 200){\r\n            handleFlash(true);\r\n        }else if(deleteResponse.code !== 200){\r\n            handleFlash(false);\r\n        }else{\r\n            handleFlash(null);\r\n        }\r\n        \r\n        listStateSetter(getResponse);\r\n        deleteStateSetter(deleteResponse);\r\n    }\r\n\r\n    const handleClick = (e, state, id) => {\r\n        e.preventDefault();\r\n        removeData();\r\n    }\r\n    \r\n    return (\r\n        <li key={id} className=\"deck__block\">\r\n            <div className=\"deck__inner--left\">\r\n                <h3 className=\"deck__title\">{title}</h3>\r\n                <p className=\"deck__infos\">{description}</p>\r\n                <div className=\"deck__total\">Total : {num_cards}</div>\r\n            </div>\r\n            <div className=\"deck__inner--right\">\r\n                <div className=\"inner__right--text\">\r\n                    <h3 className=\"deck__ec--title\">Ec :</h3>\r\n                    <span className=\"deck__ec--value\">{total_ec}</span>\r\n                </div>\r\n                <div className=\"inner__right--actions\">\r\n                    <div className=\"action\" onClick={(e) => handleClick(e, listState, id)}><AiFillCloseCircle/></div>\r\n                    <Link className=\"action\" to={`/decks/${id}/modify`}><BsPencil/></Link>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Deck;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {BsChevronLeft,BsChevronRight} from 'react-icons/bs'\r\n\r\n\r\nfunction Pagination(props){\r\n    const {\r\n        options, \r\n        setPage, \r\n        setSize , \r\n        containerClasses,\r\n        containerTextBlockClasses, \r\n        leftClasses, \r\n        rightClasses, \r\n        textClasses, \r\n        listSize = [],\r\n        nextPage\r\n    } = props;\r\n\r\n    const [canNext, setCanNext] = useState(true);\r\n\r\n    useEffect(async () => {\r\n\r\n        let newObj = {...options};\r\n        newObj.page = options.page + 1;\r\n        let res = await nextPage(newObj);\r\n\r\n        if(res.code === 200 && res.message.length === 0){\r\n            setCanNext(false);\r\n        }else{\r\n            setCanNext(true);\r\n        }\r\n\r\n    },[options]);\r\n\r\n    return (\r\n        <div className={containerClasses ?? \"pagination__block\"} >\r\n            <div className={leftClasses ?? \"pagination__arrow\"} \r\n                 onClick={(e) => setPage(e, Number(options.page) - 1, options)}\r\n            >\r\n                <BsChevronLeft/>\r\n            </div>\r\n                <div className={containerTextBlockClasses ?? \"pagination__text--block\"}>\r\n                {\r\n                    listSize.map((elmt, index) => {\r\n                        return <p key={index} className={textClasses ?? \"pagination__text\"} onClick={(e) => setSize(e, elmt)}>{elmt}</p>\r\n                    })\r\n                }\r\n                </div>\r\n            <div className={rightClasses ?? \"pagination__arrow\"} \r\n                 onClick={canNext === true ? (e) => setPage(e, Number(options.page) + 1, options) : (e) => setPage(e, 1, options)}\r\n            >\r\n                <BsChevronRight/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport {BsFilterRight} from 'react-icons/bs';\r\n\r\nfunction Filters(props){\r\n    const {containerClasses, onClick, isVisible} = props;\r\n\r\n    return (\r\n        <div className={containerClasses ?? \"filter__container\"} onClick={(e) => onClick(e, isVisible)}>\r\n            <BsFilterRight />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters;","import React,{ useEffect, useRef} from 'react';\r\nimport {AiFillCloseCircle} from 'react-icons/ai'\r\n\r\nfunction Popup(props) {\r\n\r\n    const {\r\n            datas, \r\n            buttonResetText, \r\n            actionClose, \r\n            actionReset, \r\n            actionSelect,\r\n            setCheckBoxes,\r\n            checkboxesState,\r\n            mode,\r\n        } = props;\r\n\r\n    const handleClickCheckBoxes = (e) => {\r\n        let checkboxes = null;\r\n\r\n        if(mode === 'unique'){\r\n            checkboxes = Array.from(document.getElementsByClassName('option__kingdom'));\r\n        }else{\r\n            checkboxes = Array.from(document.querySelectorAll('input[type=\"checkbox\"]')) \r\n        }\r\n\r\n        let checkBoxesState = [];\r\n        checkboxes.map(elmt => {\r\n            return checkBoxesState.push(elmt.checked);\r\n        });\r\n        setCheckBoxes(checkBoxesState);\r\n    }\r\n\r\n    return (\r\n        <div className=\"popup__container\">\r\n            <div className=\"popup__inner--container\">\r\n            <div className=\"popup__box\">\r\n                <form className=\"popup__form\" enctype=\"multipart/form-data\">\r\n                    <div className=\"popup__heading\">\r\n                        <div  className=\"popup__close\" onClick={e => actionClose(e)}>\r\n                            <AiFillCloseCircle />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"popup__form--section\" >\r\n                        <h4 className=\"popup__option--name\">Options for kingdoms</h4>\r\n                        <div className=\"popup__option--container\">\r\n                            <label className=\"popup__option--label\" htmlFor=\"options-select\">Set options :</label>\r\n                            <select id=\"popup__options--select\" name=\"kingdom-options-set\" onChange={actionSelect}>\r\n                                {mode === '' ?\r\n                                    <option value=\"\" selected>Default</option>\r\n                                    :\r\n                                    <option value=\"\">Default</option>\r\n                                }\r\n                                {mode === 'unique' ? \r\n                                    <option value=\"unique\" selected>Unique</option> \r\n                                    : \r\n                                    <option value=\"unique\" >Unique</option>\r\n                                }\r\n                                {mode === 'combination' ? \r\n                                    <option value=\"combination\" selected>Combination</option>\r\n                                    :\r\n                                    <option value=\"combination\">Combination</option>\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    {Object.keys(datas).map(title => {\r\n                        if(datas[title].type === \"checkbox\"){                            \r\n                            return (\r\n                                <div className=\"popup__form--section \" onClick={handleClickCheckBoxes} onChange={datas[title].onChange} >\r\n                                        <h4 className=\"popup__option--name\" >{title}</h4>\r\n                                        {datas[title].values.map((elmt, index) => {\r\n                                                    return (\r\n                                                        <div className=\"popup__option--container\">\r\n                                                            <label className=\"popup__option--label\" htmlFor={elmt}>{datas[title].displayed[index]}</label>\r\n                                                            <input id={elmt} \r\n                                                                   className={mode === 'unique' ? 'popup__option--input option__kingdom': \"popup__option--input\"} \r\n                                                                   type={mode === \"unique\" ? \"radio\" : \"checkbox\"} \r\n                                                                   name={datas[title].field_name} \r\n                                                                   checked={checkboxesState[index]} \r\n                                                                   value={elmt}\r\n                                                            />\r\n                                                        </div>\r\n                                                    )\r\n                                                \r\n                                            })}\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                        if(datas[title].type === \"radio\"){           \r\n                            return (\r\n                                <div className=\"popup__form--section\">\r\n                                    <h4 className=\"popup__option--name\">{title}</h4>\r\n                                        {datas[title].values.map((elmt,index)=> {\r\n                                                return (\r\n                                                    <div className=\"popup__option--container\">\r\n                                                        <label className=\"popup__option--label\" htmlFor={elmt}>{datas[title].displayed[index]}</label>                \r\n                                                        <input className=\"popup__option--input\" type=\"radio\" id={elmt} name={datas[title].field_name} onChange={datas[title].onChange} value={datas[title].values[index]}/>\r\n                                                    </div>\r\n                                                )\r\n                                        })}\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    })}\r\n                    <button type=\"reset\" className=\"btn popup__button\" onClick={actionReset}>{buttonResetText}</button>\r\n                </form>\r\n            </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Popup;\r\n","import React,{useEffect, useState } from 'react';\r\n\r\n/* layout */\r\nimport Layout from '../layouts/Layout';\r\n\r\n/* api */\r\nimport { getUserDecks, getDecksByKingdoms} from '../api/Decks';\r\n\r\n/* components */\r\nimport Flash from '../components/Flash'\r\nimport Plus from '../components/Plus';\r\nimport List from '../components/List';\r\nimport Deck from '../components/Deck';\r\nimport Pagination from '../components/Pagination';\r\nimport Filters from '../components/Filters';\r\nimport Popup from '../components/Popup';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst DecksPage = (props) => {\r\n\r\n    const [decksList, setDecksList] = useState({\r\n        code: 200,\r\n        message: []\r\n    });\r\n    const [flashState, setFlashState] = useState(null);\r\n    const [deleteResponse, setDeleteResponse] = useState({});\r\n    const [filterClicked, setFilter] = useState(true);\r\n    const [reqOpt, setReqOpt] = useState({\r\n        kingdoms: [],\r\n        mode: '',\r\n        page: 1,\r\n        size: 10,\r\n        order_by: 'id',\r\n        sens: 'asc'\r\n    });\r\n\r\n    const [checkboxes, setCheckBoxes] = useState([false, false, false, false,false,false,false]);\r\n    const kingdomsList = JSON.parse(localStorage.getItem('kingdoms'));\r\n    /* datas for popup form */\r\n    const popupDatas = {\r\n        \"List by kingdoms\": {\r\n            displayed: ['Poseidia', 'Eondra', 'Endless night', 'MetaScience', 'The light\\'s temple', 'Celestial purity', 'The saber\\'s way'],\r\n            values: [1, 2, 3, 4, 5, 6, 7],\r\n            field_name: 'kingdoms',\r\n            type: \"checkbox\",\r\n            onChange: (e) => {\r\n                setReqOpt(prevState => {\r\n                    let newObject = {...prevState};\r\n                    let newKingdomsArray = null;\r\n\r\n                    if(prevState.kingdoms instanceof Array){\r\n                        newKingdomsArray = [...prevState.kingdoms];\r\n                    }\r\n\r\n                    if(e.target.checked === true && !newKingdomsArray.includes(e.target.value)){\r\n\r\n                        if(prevState.mode === 'combination' || prevState.mode === ''){\r\n                            newKingdomsArray.push(e.target.value)\r\n                        }\r\n                        \r\n                        if(prevState.mode === 'unique'){\r\n                            newKingdomsArray = [e.target.value]\r\n                        }\r\n\r\n                    };\r\n\r\n                    if(e.target.checked === false) {\r\n                        let index = newKingdomsArray.indexOf(e.target.value);\r\n                        if(index > -1){\r\n                            newKingdomsArray.splice(index, 1);\r\n                        }\r\n                    }\r\n\r\n                    newObject.kingdoms = newKingdomsArray;\r\n                    newObject.order_by = 'kingdom'\r\n                    return newObject;\r\n                });\r\n            }\r\n        },\r\n        \"Order by\": {\r\n            displayed: ['Deck name' ,'Kingdom' ,'Total ec' , 'Num cards'],           \r\n            values: ['deck_name' ,'kingdom' ,'total_ec' , 'num_cards'],\r\n            type: \"radio\",\r\n            field_name: \"order_by\",\r\n            onChange: (e) => {\r\n                setReqOpt({...reqOpt, order_by: e.target.value});\r\n            }\r\n        },\r\n        \"Sens\": {\r\n            displayed: [\"Descendant\"],\r\n            values: [\"desc\"],\r\n            type: \"radio\",\r\n            field_name: \"sens\",\r\n            onChange: (e) => {\r\n                setReqOpt({...reqOpt, sens: e.target.value});\r\n            }\r\n        }\r\n    }\r\n\r\n    /* handle flash messages */\r\n    const handleFlash = (newFlashState) => {\r\n        setFlashState(newFlashState);\r\n    };\r\n\r\n    const handleDelete = (newState) => {\r\n        setDeleteResponse(newState)\r\n    }\r\n\r\n    /* handling fucntion for filter */\r\n    const handleClickFilter = (e, isVisible) => {\r\n        e.preventDefault();\r\n        setFilter(!isVisible);\r\n    } \r\n\r\n    /* handling functions for pagination */\r\n    const handlePage = async (e, newPage, options) => {\r\n        e.preventDefault();\r\n        if(newPage <= 0){\r\n            return;\r\n        }else{\r\n            setReqOpt({...options, page: newPage});  \r\n        }             \r\n    }\r\n\r\n    const handleSize = (e, newSize) => {\r\n        e.preventDefault();\r\n        setReqOpt({...reqOpt, size: newSize});\r\n    }\r\n\r\n    /* handling functions for popup */\r\n    const handleSelectPopup = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(e.target.value === 'unique'){\r\n            setReqOpt({...reqOpt, mode: 'unique'});\r\n        }\r\n\r\n        if(e.target.value === 'combination'){\r\n            setReqOpt({...reqOpt, mode:'combination'});\r\n        }\r\n\r\n        if(e.target.value === ''){\r\n            setReqOpt({...reqOpt, mode:''});\r\n        }\r\n    }\r\n\r\n    const handleClosePopup = (e) => {\r\n        e.preventDefault();\r\n        setFilter(true);\r\n    }\r\n\r\n    const handleResetPopup = (e) => {\r\n        setReqOpt({\r\n            kingdoms:[],\r\n            mode:'',\r\n            page: 1,\r\n            size: 10,\r\n            order_by: 'id',\r\n            sens: 'asc'\r\n        });\r\n        setFilter(true);\r\n    }\r\n\r\n    useEffect(async () => {\r\n        let response = null;\r\n        \r\n        if(reqOpt.kingdoms.length > 0){\r\n            response = await getDecksByKingdoms(reqOpt);\r\n        }else{\r\n            response = await getUserDecks(reqOpt);\r\n        }\r\n\r\n        if(response.code === 200){\r\n            setDecksList(response);\r\n        }else if(response.code !== 200 && decksList.message instanceof Array){\r\n            setDecksList([]);\r\n            setDeleteResponse(response);\r\n            setFlashState(true);\r\n        }else{\r\n            setFlashState(null);\r\n        }\r\n    },[reqOpt]);\r\n\r\n    useEffect(async () => {\r\n        let response = await getUserDecks(reqOpt);\r\n        setDecksList(response);\r\n    },[]);\r\n\r\n    if(decksList.message && decksList.message instanceof Array){\r\n        return (\r\n            <Layout>\r\n                <Filters containerClasses=\"filter__container row justify-end mt-3 mb-2 px-2\" isVisible={filterClicked} onClick={handleClickFilter}/>\r\n                <List classes=\"list__content layout layout__1\">\r\n                      { \r\n                        decksList.message.length > 0 ?\r\n                          decksList.message.map(elmt => {\r\n                                  return(\r\n                                      <Deck id={elmt.id} \r\n                                            title={elmt.deck_name} \r\n                                            description={elmt.description} \r\n                                            num_cards={elmt.num_cards} \r\n                                            total_ec={elmt.total_ec}\r\n                                            listState = {decksList}\r\n                                            listStateSetter = {setDecksList}\r\n                                            deleteState = {deleteResponse}\r\n                                            deleteStateSetter = {handleDelete}\r\n                                            handleFlash = {handleFlash}\r\n                                            reqOptState = {reqOpt}\r\n                                      />)\r\n                              }\r\n                          ) : \r\n                        <p style ={{color: \"black\",marginTop:\"auto\",marginBottom:\"auto\"}}>\r\n                            Empty \r\n                        </p>\r\n\r\n                        }r\n                </List>\r\n                <Flash \r\n                    classes=\"message__flash\" \r\n                    errorClass=\"message__flash-error\" \r\n                    successClass=\"message__flash-done\" \r\n                    message={deleteResponse.message ? deleteResponse.message : \"flash message\"}\r\n                    timing={750}\r\n                    flash={flashState}\r\n                    handleFlash= {handleFlash}\r\n                />\r\n                <Pagination \r\n                    options = {reqOpt}\r\n                    eventsToListen = {filterClicked}\r\n                    containerClasses = \"pagination__block my-3 row justify-between\"\r\n                    containerTextBlockClasses = {\"pagination__text--block row justify-between\"} \r\n                    setPage={handlePage} \r\n                    setSize={handleSize} \r\n                    listSize={[10,20,40]}\r\n                    nextPage={reqOpt.kingdoms.length > 0 ? getDecksByKingdoms : getUserDecks}\r\n                />\r\n                <Plus to={'/decks/create'}/>\r\n                {\r\n                    filterClicked || \r\n                        <Popup\r\n                            mode = {reqOpt.mode}\r\n                            setOptions = {setReqOpt}\r\n                            datas={popupDatas}  \r\n                            buttonResetText=\"Reset\"\r\n                            checkboxesState = {checkboxes}\r\n                            setCheckBoxes = {setCheckBoxes}\r\n                            actionSelect = {handleSelectPopup}\r\n                            actionClose={handleClosePopup}\r\n                            actionReset={handleResetPopup}\r\n                        />\r\n                }\r\n              </Layout>\r\n      )\r\n    }else{\r\n        return (<Redirect to=\"/decks/not-found\"/>);\r\n    }\r\n}\r\n\r\n\r\nexport default DecksPage;\r\n","export default __webpack_public_path__ + \"static/media/merrlyn.a1bb939c.jpg\";","import React from 'react'\r\n\r\nconst CheckBox = (props) => {\r\n    \r\n    const {classes, name, id,text, checked, onChange} = props\r\n\r\n    return (\r\n        <div className=\"row\">\r\n          <input id={name} className={classes} type=\"checkbox\" name={name} onChange={onChange} checked={checked}/>\r\n          <label className=\"form__label\" htmlFor={id}>{text}</label>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckBox\r\n","import React from 'react'\r\nimport './Card.css'\r\nimport CheckBox from './CheckBox'\r\n\r\n\r\nconst Card = (props) => {\r\n    const {id,url,alt,mode,onChange} = props\r\n\r\n    return (\r\n        <li className=\"card__container\" onChange={onChange}>\r\n            <img className=\"card__image\" src={url} alt={alt}/>\r\n            {mode === 'edit' ? <CheckBox id={id} classes=\"card__checkbox\"/> : ''} \r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport Filters from '../components/Filters';\r\nimport Plus from '../components/Plus';\r\nimport Image from '../../src/img/cards/merrlyn.jpg';\r\nimport Main from \"../layouts/Main\";\r\nimport List from '../components/List';\r\nimport Card from '../components/Card';\r\nimport Pagination from \"../components/Pagination\";\r\n\r\nconst CardsPage = (props) => {\r\n    const cards = [\r\n        {\r\n            id: 0,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 1,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 2,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 3,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 4,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 5,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 6,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 7,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 8,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 9,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 10,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 11,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 12,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 13,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 14,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 15,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 16,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 17,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 18,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n        {\r\n            id: 19,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\"\r\n        },\r\n    ]\r\n\r\n    const handlePage = () => {\r\n        return null;\r\n    }\r\n\r\n    const handleSize = () => {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n            <Main classes=\"page\">\r\n                <Filters containerClasses=\"filter__container row justify-end my-3\" />\r\n                <List classes=\"list__content layout layout__3\">\r\n                    {cards.map(elmt => <Card key={elmt.id} url={elmt.url} alt={elmt.alt}/>)}\r\n                </List>\r\n                <Pagination \r\n                    containerClasses = \"pagination__block my-3 row justify-between\"\r\n                    containerTextBlockClasses = {\"pagination__text--block row justify-between\"} \r\n                    setPage={handlePage} \r\n                    setSize={handleSize}\r\n                    listSize={[10,20,40]}\r\n                /> \r\n                <Plus to=\"/cards/from\"/>\r\n            </Main>\r\n    )\r\n}\r\n\r\nexport default CardsPage\r\n","async function getProfile(){\r\n    let settings = {\r\n        method : 'GET',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api/profile`, settings);\r\n    let datas = response.json();\r\n    return datas;\r\n}\r\n\r\nasync function updateProfile(form){\r\n    let settings = {\r\n        method: 'PATCH',\r\n        credentials: 'include',\r\n        body: form\r\n    }\r\n\r\n    let response = await fetch('https://test-seven.site/api/profile', settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function deleteProfile(){\r\n    let settings = {\r\n        method: 'DELETE',\r\n        credentials: 'include',\r\n    }\r\n\r\n    let response = await fetch('https://test-seven.site/api/profile', settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getAvatar(){\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch('https://test-seven.site/api/profile/avatar', settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n \r\n}\r\n\r\nasync function addAvatar(form){\r\n    let settings = {\r\n        method : 'POST',\r\n        credentials: 'include',\r\n        body: form\r\n    } \r\n    \r\n    let response = await fetch('https://test-seven.site/api/profile/avatar', settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function deleteAvatar(){\r\n    let settings = {\r\n        method : 'PATCH',\r\n        credentials: 'include'\r\n    } \r\n}\r\n\r\nasync function updateAvatar(){\r\n    let settings = {\r\n        method : 'PATCH',\r\n        credentials: 'include'\r\n    }\r\n}\r\n\r\nexport {getProfile, updateProfile, deleteProfile, getAvatar, addAvatar, updateAvatar , deleteAvatar}","import React from 'react';\r\n\r\nfunction Loader(props) {\r\n    let { condition, setLoaded } = props;\r\n    let LoaderIcon = props.loaderIcon;\r\n    return (\r\n        <div className=\"loader__block row justify-center align-center\">\r\n            {             \r\n                condition\r\n                ? \r\n                setLoaded(true) \r\n                : \r\n                null\r\n            }\r\n            <LoaderIcon className=\"loader\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;\r\n","const regexModule = {\r\n    regex_order: /^[A-Za-z_]+$/,\r\n    regex_id: /^[1-9]{1}[0-9]{0,9}$/,\r\n    regex_username: /^[a-zA-Z_\\-#]{1}[a-zA-Z0-9_\\-\\s]{4,31}$/,\r\n    regex_name:/^[a-zA-Z]{0,32}$/,\r\n    regex_start_with: /^[a-zA-Z_\\-#]{1}[a-zA-Z0-9_\\-#]{0,31}$/,\r\n    regex_name: /^[A-Za-z]{0,32}$/,\r\n    regex_gender: /(M|F|Other)/,\r\n    regex_email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n    regex_cards: /([1-9]{1}[0-9]{0,4}:[1-9]{1}[0-9]{0,4},{0,1})+/,\r\n    regex_qty: /^[1-9]{1}[0-9]{0,1}$/,\r\n    regex_kingdoms: /^([1-7]{1,1},{0,1}){1,7}[^,]$/,\r\n    regex_page: /^[1-9]{1}[0-9]{0,5}$/,\r\n    regex_page_size: /^[1-9]{1}[0-9]{0,5}$/,\r\n    regex_img: /^([A-Za-z]{3,16}(-[1-9]{1,8}){0,1}(\\.jpg|\\.svg){1,1}){1,1}$/,\r\n    regex_deck_name: /^[A-Za-z0-9_\\-#]{4}[A-Za-z0-9_\\-#\\s]{0,26}$/\r\n}\r\n\r\nexport default regexModule;","import React,{useState, useEffect, useRef} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { BsPencil } from 'react-icons/bs';\r\n\r\n/* api */\r\nimport {getProfile, updateProfile, deleteProfile, addAvatar, getAvatar} from '../api/Profile';\r\n\r\n/* components */\r\nimport Flash from '../components/Flash';\r\nimport { RiLoader3Line } from 'react-icons/ri';\r\nimport Button from '../components/Button';\r\nimport Main from '../layouts/Main';\r\nimport Loader from '../components/Loader';\r\n\r\n/* module */\r\nimport regexModule  from '../modules/regex';\r\n\r\nconst ProfileForm = (props) => {\r\n\r\n    let history = useHistory();\r\n\r\n    /*States */\r\n    const [userInfos,setUserInfos] = useState({\r\n        code: null,\r\n        message: {\r\n            id: '',\r\n            firstname:'',\r\n            lastname:'',\r\n            gender: 'other',\r\n            username: '',\r\n            is_visible: true,\r\n            allow_collections: true\r\n        }\r\n    });\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [avatar, setAvatar] = useState({\r\n        code : '',\r\n        message : {\r\n            avatar : \"\"\r\n        }\r\n    });\r\n    const [avatarForm, setAvatarForm] = useState();\r\n    const [flashState, setFlashState] = useState(null);\r\n    const [flashMessage, setFlashMessage] = useState();\r\n     \r\n    /* ref */\r\n    const firstnameInput = useRef(null);\r\n    const lastnameInput = useRef(null);\r\n    const usernameInput = useRef(null);\r\n    const emailInput = useRef(null);\r\n    const avatarInput = useRef(null);\r\n\r\n    const handleChange = (e) => {\r\n        switch(e.target.id){\r\n            case 'firstname':\r\n                if(regexModule.regex_name.test(e.target.value) === true){\r\n                    if(firstnameInput.current.classList.contains('bad__input')){\r\n                        firstnameInput.current.classList.remove('bad__input');\r\n                    }\r\n                    firstnameInput.current.classList.add('good__input');\r\n                }else{\r\n                    if(firstnameInput.current.classList.contains('good__input')){\r\n                        firstnameInput.current.classList.remove('good__input');\r\n                    }\r\n                    firstnameInput.current.classList.add('bad__input');\r\n                }\r\n\r\n                if(firstnameInput.current.value.length === 0){\r\n                    firstnameInput.current.classList.remove('good__input');\r\n                }\r\n\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.firstname = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n\r\n            case 'lastname':\r\n                if(regexModule.regex_name.test(e.target.value) === true){\r\n                    if(lastnameInput.current.classList.contains('bad__input')){\r\n                        lastnameInput.current.classList.remove('bad__input');\r\n                    }\r\n                    lastnameInput.current.classList.add('good__input');\r\n                }else{\r\n                    if(lastnameInput.current.classList.contains('good__input')){\r\n                        lastnameInput.current.classList.remove('good__input');\r\n                    }\r\n                    lastnameInput.current.classList.add('bad__input');\r\n                }\r\n\r\n                if(lastnameInput.current.value.length === 0){\r\n                    lastnameInput.current.classList.remove('good__input');\r\n                }\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.lastname = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'username':\r\n                if(regexModule.regex_username.test(e.target.value) === true){\r\n                    if(usernameInput.current.classList.contains('bad__input')){\r\n                        usernameInput.current.classList.remove('bad__input');\r\n                    }\r\n                    usernameInput.current.classList.add('good__input');\r\n                }else{\r\n                    if(usernameInput.current.classList.contains('good__input')){\r\n                        usernameInput.current.classList.remove('good__input');\r\n                    }\r\n                    usernameInput.current.classList.add('bad__input');\r\n                }\r\n\r\n                if(usernameInput.current.value.length === 0){\r\n                    usernameInput.current.classList.remove('good__input');\r\n                }\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.username = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'email':\r\n                if(regexModule.regex_email.test(e.target.value) === true){\r\n                    if(emailInput.current.classList.contains('bad__input')){\r\n                        emailInput.current.classList.remove('bad__input');\r\n                    }\r\n                    emailInput.current.classList.add('good__input');\r\n                }else{\r\n                    if(emailInput.current.classList.contains('good__input')){\r\n                        emailInput.current.classList.remove('good__input');\r\n                    }\r\n                    emailInput.current.classList.add('bad__input');\r\n                }\r\n\r\n                if(emailInput.current.value.length === 0){\r\n                    emailInput.current.classList.remove('good__input');\r\n                }\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.email = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'female' :\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.gender = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'male' :\r\n                e.target.checked = true;\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.gender = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'other' :\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.gender = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n\r\n            case 'visible' :\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.is_visible = e.target.checked;\r\n                    return newObj; \r\n                });\r\n                break;\r\n\r\n            case 'collection' :\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.allow_collections = e.target.checked;\r\n                    return newObj; \r\n                });\r\n                break;\r\n\r\n            case 'avatar' :\r\n\r\n                if(e.target.files.length > 1){\r\n                    alert(\"Can send only one file\");\r\n                }\r\n\r\n                if(e.target.files[0].size > 200000){\r\n                    alert(\"file too big\");\r\n                }\r\n\r\n                if(e.target.files[0].type !== \"image/png\" && e.target.files[0].type !== \"image/jpeg\"){\r\n                    alert(\"bad file type should be png or jpg\");\r\n                }\r\n                 \r\n                let form = new FormData();     \r\n                form.append('avatar', e.target.files[0]);\r\n                setAvatarForm(form);\r\n                break;\r\n            default:\r\n                console.error(`Something wrong with ${e.target.id}`);\r\n        }\r\n    }\r\n\r\n    const handleUpdateClick = async (e) => {\r\n        e.preventDefault();\r\n        let form = new FormData();\r\n        Object.keys(userInfos.message).map(elmt => {\r\n            form.append(elmt, userInfos.message[elmt]);\r\n        });\r\n\r\n        let response = await updateProfile(form);\r\n\r\n        if(response.code === 200){\r\n            setUserInfos(response);\r\n            setFlashMessage(response.message.username + \" updated successfully\");\r\n            setFlashState(true);\r\n        }else{\r\n            setFlashMessage(response.message);\r\n            setFlashState(false);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleAvatarClick = (e) => {\r\n        e.preventDefault();\r\n        avatarInput.current.click();    \r\n        return true;\r\n    }\r\n\r\n    const handleFlash = (newFlashState) => {\r\n        setFlashState(newFlashState);\r\n    };\r\n\r\n    const handleDeleteClick = async (e) => {\r\n        e.preventDefault();\r\n        let response = \"\";\r\n        let test = window.confirm(\"Are you sure ?\");\r\n        if(test === true){\r\n            response = await deleteProfile();\r\n            if(response.code === 200){\r\n                setFlashState(true);\r\n                setFlashMessage(response.message);\r\n                setTimeout(() => {\r\n                    history.push('/login');\r\n                },750);\r\n            }else{\r\n                setFlashState(false);\r\n                setFlashMessage(response.message); \r\n            }\r\n        }else{\r\n            alert(\"Welcome back\");\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if(avatarForm){\r\n            let response = await addAvatar(avatarForm);\r\n            if(response.code === 200){\r\n                setAvatar(response);\r\n            }\r\n        }\r\n    }, [avatarForm]);\r\n\r\n    useEffect(async () => {\r\n        let responseUser = await getProfile();\r\n        let responseAvatar = await getAvatar();\r\n\r\n        if(responseAvatar.code === 200){\r\n\r\n            if(responseAvatar.message.avatar === null){\r\n                setAvatar({\r\n                    code: 200,\r\n                    message: {\r\n                        avatar: \"https://test-seven.site/images/user-default.svg\"\r\n                    }\r\n                })\r\n            }else{\r\n                setAvatar(responseAvatar);\r\n            }\r\n        }\r\n\r\n        if(responseUser.code === 200){\r\n            setUserInfos(responseUser);\r\n        }\r\n    },[]);\r\n\r\n    return isLoaded === true ? (\r\n        <Main classes=\"profile__page\">\r\n                <form className=\"form\" onChange={handleChange}>\r\n                        <label className=\"form__label--avatar mb-4\" htmlFor=\"avatar\">\r\n                            <div className=\"profile__heading\" onClick={handleAvatarClick}>\r\n                                {avatar.message.avatar ? <img className=\"profile__avatar\"\r\n                                     src={avatar.message.avatar} \r\n                                     alt=\"avatar\"\r\n                                />\r\n                                :\r\n                                null}\r\n                                <BsPencil className=\"profile__avatar--button\"/>\r\n                            </div>\r\n                        </label>\r\n                        <input ref={avatarInput} \r\n                               id=\"avatar\" \r\n                               className=\"d-none\" \r\n                               name=\"avatar\" \r\n                               type=\"file\" \r\n                               accept=\"image/png, image/jpeg\"\r\n                        />\r\n                        <div className=\"form__section w-80 mb-2\">\r\n                            <h4 className=\"form__section--title\">Profile options</h4>\r\n                        <div className=\"row justify-between w-100\">\r\n                            <label className=\"form__label mr-2\" htmlFor=\"visible\">Public</label>\r\n                            <input id=\"visible\" className=\"form__checkbox mb-1\" type=\"checkbox\" name=\"visible\" checked={userInfos.message.is_visible}/>\r\n                        </div>\r\n                        <div className=\"row justify-between w-100\">\r\n                            <label className=\"form__label mr-2\" htmlFor=\"collection\">Collections</label>\r\n                            <input id=\"collection\" className=\"form__checkbox\" type=\"checkbox\" name=\"collection\" checked={userInfos.message.allow_collections} />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form--section\" >\r\n                            <h4 className=\"form__section--title\">Contact</h4>\r\n                            <div className=\"form__radio--group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"form__radio--button\">\r\n                                        <label className=\"form__radio--label\" htmlFor=\"female\">F</label>\r\n                                        <input \r\n                                            id=\"female\" \r\n                                            className=\"form--radio\" \r\n                                            type=\"radio\" \r\n                                            name=\"gender\" \r\n                                            value=\"F\" \r\n                                            checked={userInfos.message.gender.trim() === 'F' ? true : false}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form__radio--button\">\r\n                                        <label className=\"form__radio--label\" htmlFor=\"male\">M</label> \r\n                                        <input id=\"male\" \r\n                                               className=\"form--radio\"\r\n                                               type=\"radio\" \r\n                                               name=\"gender\" \r\n                                               value=\"M\" \r\n                                               checked={userInfos.message.gender.trim() === 'M' ? true : false}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form__radio--button\">\r\n                                        <label className=\"form__radio--label\" htmlFor=\"other\">Autre</label> \r\n                                        <input id=\"other\" \r\n                                               className=\"form--radio\"\r\n                                               type=\"radio\" \r\n                                               name=\"gender\" \r\n                                               value=\"other\" \r\n                                               checked={userInfos.message.gender === 'other' ? true : false}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <input id=\"firstname\"\r\n                                   ref={firstnameInput} \r\n                                   className=\"form--input\" \r\n                                   type=\"text\"\r\n                                   placeholder=\"firstname\" \r\n                                   value={userInfos.message.firstname}\r\n                            />\r\n                            <input id=\"lastname\"\r\n                                   ref={lastnameInput} \r\n                                   type=\"text\" \r\n                                   className=\"form--input\" \r\n                                   placeholder=\"lastname\" \r\n                                   value={userInfos.message.lastname}\r\n                            />\r\n                            <input id=\"username\"\r\n                                   ref={usernameInput} \r\n                                   type=\"text\" \r\n                                   className=\"form--input\" \r\n                                   placeholder=\"username\" \r\n                                   value={userInfos.message.username}\r\n                            />\r\n                            <input id=\"email\"\r\n                                   ref={emailInput} \r\n                                   type=\"email\" \r\n                                   className=\"form--input\" \r\n                                   placeholder=\"email\" \r\n                                   value={userInfos.message.email}\r\n                            />\r\n                        </div>\r\n                        <Button classes=\"btn\" text=\"update\" bgcolor='#3be73b' color='#202020' onClick={handleUpdateClick}/>\r\n                        <Button classes=\"btn\" text=\"delete\" bgcolor='#ff5d5d' color='#202020' onClick={handleDeleteClick}/>  \r\n                </form>\r\n                <Flash \r\n                    classes=\"message__flash\" \r\n                    errorClass=\"message__flash-error\" \r\n                    successClass=\"message__flash-done\" \r\n                    message={flashMessage ? flashMessage : \"flash message\"}\r\n                    timing={750}\r\n                    flash={flashState}\r\n                    handleFlash= {handleFlash}\r\n                />\r\n            </Main>\r\n    )\r\n    :\r\n    (\r\n        <Loader condition={userInfos.code === 200} \r\n                loaderIcon={RiLoader3Line} \r\n                setLoaded={setIsLoaded} \r\n        />\r\n    )\r\n}\r\n\r\nexport default ProfileForm\r\n","import React from 'react'\r\nimport {HiUserCircle} from 'react-icons/hi'\r\n\r\nconst UserDefault = (props) => {\r\n    return (\r\n        <HiUserCircle className={props.classes}/>\r\n    )\r\n}\r\n\r\nexport default UserDefault\r\n","import React from 'react'\r\nimport './User.css'\r\nimport UserDefault from './UserDefault'\r\n\r\nconst User = (props) => {\r\n    const {content} = props;\r\n    return (\r\n        <li key={content.id} className=\"user__block\">\r\n            <div className=\"user__heading\">\r\n                {content.img ? <img src={content.img} alt=\"user avatar\"/> : <UserDefault classes=\"user__default--icon\"/>}\r\n                {content.title ? <h4>{content.title}</h4> : ''}\r\n            </div>\r\n            <div className=\"user__body\">\r\n                {content.id ? <p>ID : {content.id}</p> : ''}\r\n                {content.location ? <p>{content.location}</p> : ''}\r\n                {content.deck_num ? <p>Decks : {content.deck_num}</p> : ''}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\r\n\r\nconst InputText = (props) => {\r\n    const search = text;\r\n\r\n    if(!props.onChange) props.onChange = () => {return};\r\n    if(!props.onBlur) props.onBlur = () => {return};\r\n\r\n    const {classes,placeholder,onChange,text,onBlur} = props;\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        onChange(e);\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        e.preventDefault();\r\n        onBlur(e);\r\n    } \r\n    return (\r\n        <input className={classes} type=\"text\" placeholder={placeholder} onBlur={handleBlur} onChange={handleChange} value={search} />\r\n    )\r\n}\r\n\r\nexport default InputText\r\n","import React from 'react'\r\nimport InputText from './InputText'\r\nimport {AiOutlineSearch} from 'react-icons/ai'\r\n\r\nconst SearchBar = ({classes,inputClasses,iconClasses,onChange,onClick, placeholder,text}) => {\r\n    return (\r\n        <div className={classes} onClick={onClick}>\r\n            <InputText classes={inputClasses} placeholder={placeholder} onChange={onChange} value={text}/>\r\n            <AiOutlineSearch className={iconClasses}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import React,  {useState} from 'react';\r\nimport List from '../components/List';\r\nimport User from '../components/User';\r\nimport SearchBar from '../components/SearchBar';\r\nimport Main from '../layouts/Main';\r\nimport Pagination from '../components/Pagination';\r\n\r\nconst GamersPage = () => {\r\n\r\n    const users = [\r\n        {\r\n            id: \"0\",\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 1,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 4,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 5,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 6,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 7,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 8,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 9,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 10,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 11,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 12,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 13,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 14,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        },\r\n        {\r\n            id: 15,\r\n            title: \"Pablo\",\r\n            location: \"Paris FR\",\r\n            deck_num: 25\r\n        }\r\n    ]\r\n    \r\n    const [searchValue, setSearchValue] = useState(null)\r\n    const handleSearch = (e) => {\r\n        setSearchValue(e.target.value)\r\n    }\r\n\r\n    const handlePage = () => {\r\n        return null;\r\n    }\r\n\r\n    const handleSize = () => {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n            <Main classes=\"page\">\r\n                <SearchBar \r\n                    classes=\"search__bar\" inputClasses=\"search__bar--input mb-2\" \r\n                    iconClasses=\"search__bar--icon\" \r\n                    onChange={handleSearch} text={searchValue}\r\n                    placeholder={\"Search ...\"}\r\n                />\r\n                <List classes=\"list__content layout layout__3\">\r\n                    {\r\n                        users.map(elmt => {\r\n                            return (\r\n                                <User key={elmt.id} content={elmt}/>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n                <Pagination \r\n                    containerClasses = \"pagination__block my-3 row justify-between\"\r\n                    containerTextBlockClasses = {\"pagination__text--block row justify-between\"} \r\n                    setPage={handlePage} \r\n                    setSize={handleSize} \r\n                    listSize={[10,20,40]} \r\n                /> \r\n            </Main>\r\n    )\r\n}\r\n\r\nexport default GamersPage\r\n","import React from 'react'\r\n\r\nfunction ErrorPage() {\r\n    return (\r\n        \r\n            <h1 className=\"title\">404 - Not found</h1>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React from 'react'\r\nimport './SocialButton.css'\r\nconst SocialButton = (props) => {\r\n    const {onClick} = props;\r\n    return (\r\n        <a style={{backgroundColor:props.bgcolor}} href={props.url} className=\"btn btn__social\">\r\n            {props.children}\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default SocialButton;\r\n","import './LoginPage.css';\r\nimport React from 'react';\r\nimport SocialButton from '../components/SocialButton';\r\nimport {FcGoogle} from 'react-icons/fc'\r\nimport {FaFacebookF} from 'react-icons/fa'\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\n\r\nfunction Login(props) {\r\n\r\n    return (\r\n                <ul className=\"social__icons--list\">\r\n                    <li className=\"mb-3\">\r\n                        <SocialButton bgcolor=\"#395693\" url=\"https://test-seven.site/api/auth/facebook\">\r\n                            <FaFacebookF className=\"icons facebook__icon\"/>\r\n                            <span className=\"btn__social--text\">Login facebook</span> \r\n                        </SocialButton>\r\n                    </li>\r\n                    <li>\r\n                        <SocialButton bgcolor=\"#F7F7F7\" url=\"https://test-seven.site/api/auth/google\">\r\n                            <FcGoogle className=\"icons google__icon\" />\r\n                            <span className=\"btn__social--text\">Login Google</span>\r\n                        </SocialButton>\r\n                    </li>\r\n                </ul>\r\n            )\r\n\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport './SettingsDeckPage.css'\r\nconst SettingsDeckPage = () => {\r\n    const deckName = useParams();\r\n    console.log(deckName)\r\n    return (\r\n        <div>\r\n            <h1 className=\"deck__setting--title\">{deckName.name} settings page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingsDeckPage\r\n","import React from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst BackButton = (props) => {\r\n    const {text, url, classes} = props;\r\n    const history = useHistory();\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        history.push(url);\r\n    }\r\n\r\n    return (\r\n        <button className={classes ? classes : 'btn'} onClick={handleClick}>\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default BackButton;","import React from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst NavButton = (props) => {\r\n\r\n    if(!props.onClick) props.onClick = () => {return};\r\n    const {text, url, classes, onClick, timing} = props;\r\n    const history = useHistory();\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        let result = await onClick(e);\r\n        setTimeout(() => {\r\n            if(result === true){\r\n                history.push(url);\r\n            }\r\n        },timing ? timing : 1000);\r\n    }\r\n\r\n    return (\r\n        <button className={classes ? classes : 'btn'} onClick={handleClick}>\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default NavButton;\r\n","function checkRegex(regex, value){\r\n    return regex.test(value);\r\n}\r\nexport default checkRegex;","import React, {useState} from 'react';\r\n\r\n/*api call*/\r\nimport {createUserDeck} from '../api/Decks';\r\n\r\n/*layout*/\r\nimport Layout from '../layouts/Layout';\r\n\r\n/*components*/\r\nimport InputText from '../components/InputText';\r\nimport CheckBox from '../components/CheckBox';\r\nimport BackButton from '../components/BackButton'\r\nimport NavButton from '../components/NavButton';\r\nimport Flash from '../components/Flash';\r\nimport {Link} from 'react-router-dom';\r\n\r\n/* Utilities */\r\nimport checkRegex from '../utilities/checkRegex';\r\n\r\n/*modules*/\r\nimport regexModule from '../modules/regex';\r\n\r\n\r\nconst AddingDeckPage = (props) => {\r\n\r\n    const [fieldValues, setFieldValues] = useState({\r\n        deck_name: '',\r\n        visibility: true\r\n    });\r\n\r\n    const [inputState, setInputState] = useState(true);\r\n    const [createState, setCreateState] = useState({});\r\n    const [flash, setFlash] = useState(null);\r\n    const [flashMessage, setFlashMessage] = useState(null);\r\n\r\n    const handleBlur = (e) => {\r\n        setFieldValues({...fieldValues, deck_name: e.target.value});\r\n        if(e.target.value.length > 0){\r\n            setInputState(false)\r\n        }else{\r\n            setInputState(true);\r\n        };\r\n    }\r\n\r\n    const handleCheck = (e) => {\r\n        setFieldValues({...fieldValues, visibility: e.target.checked});\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        setFieldValues({...fieldValues, deck_name: e.target.value});\r\n        setInputState(!checkRegex(regexModule.regex_deck_name, e.target.value))\r\n    }\r\n\r\n    const handleCreate = async (e) => {\r\n        e.preventDefault();\r\n        const form = new FormData();\r\n        form.append('deck_name', fieldValues.deck_name);\r\n        form.append('visibility', fieldValues.visibility);\r\n        let response = await createUserDeck(form);\r\n\r\n        if(response.code === 200){\r\n            setFlash(true);\r\n            setCreateState(response);\r\n            setFlashMessage(response.message[0].deck_name + \" created succesfully.\");\r\n            return true;\r\n        }else if(response.code !== 200){\r\n            setFlash(false);\r\n            setFlashMessage(response.message);\r\n            return false;\r\n        }else{\r\n            setFlash(null);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    const handleFlash = (newState) => {\r\n        setFlash(newState)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <form className=\"form\">\r\n                    <div className=\"form--section\">\r\n                        <h4 className=\"form__section--title\">Informations</h4>\r\n                        <InputText \r\n                            classes={inputState === true ? \"form--input bad__input\" : 'form--input good__input'} \r\n                            placeholder=\"Deck name\" onChange={handleInputChange} \r\n                            onBlur={handleBlur} \r\n                            value={fieldValues.deck_name}\r\n                        />\r\n                        <CheckBox \r\n                            id=\"visible\" \r\n                            name=\"visibility\" \r\n                            classes=\"form__checkbox\" \r\n                            text=\"public\" \r\n                            onChange={handleCheck} \r\n                            checked={fieldValues.visibility}\r\n                        />\r\n                        <Flash \r\n                            classes=\"message__flash\" \r\n                            errorClass=\"message__flash-error\" \r\n                            successClass=\"message__flash-done\" \r\n                            message={ flashMessage ? flashMessage : 'flash message'}\r\n                            flash={flash}\r\n                            timing={750}\r\n                            handleFlash = {handleFlash}\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <div className=\"buttons__block\">\r\n                    {createState.message ? \r\n                        <Link className=\"btn\" to={`/decks/${createState.message[0].id}/subdecks`}>Next</Link>\r\n                        :\r\n                        <NavButton text=\"Create\" \r\n                        url={`/decks/create`} \r\n                        onClick={handleCreate} \r\n                        timing={1000}\r\n                        />\r\n                    }\r\n                    <NavButton text=\"Import\" url={`/decks/new-deck/import`} onClick={handleCreate} timing={1000}/>\r\n                    <BackButton text=\"Back\" url=\"/decks\"/>\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddingDeckPage\r\n","import React,{useEffect, useReducer} from 'react'\r\nimport Button from '../components/Button'\r\nimport Main from '../layouts/Main'\r\nimport Header from '../layouts/Header'\r\n\r\n\r\n\r\nfunction reducer(state,action){\r\n    switch(action.type){\r\n        case 'STARTER_DECK':\r\n            return { choice:\"/cards/from/starter\"};\r\n        case 'INDIVIDUAL':\r\n            return { choice:\"/cards/from/individual\"};\r\n        case 'BACK':\r\n            return { choice:\"/cards\"};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst ChoicePage = (props) => {\r\n    const init = {choice: \"/cards/from\"}\r\n    const [isClicked, dispatch] = useReducer(reducer,init);\r\n    \r\n    const handleClick = (e,action) => {\r\n        e.preventDefault();\r\n        dispatch({type:action})\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.history.push(isClicked.choice);\r\n    }, [isClicked]) \r\n\r\n    return (        \r\n            <>\r\n                <Header>\r\n                    <h1>Choice :</h1>\r\n                </Header>\r\n                <Main>\r\n                    <div className=\"block\">\r\n                        <Button classes=\"btn\" text=\"Starter Deck\" onClick={(e) => handleClick(e,\"STARTER_DECK\")}/>\r\n                        <Button classes=\"btn\" text=\"Individual Card\" onClick={(e) => handleClick(e,\"INDIVIDUAL\")}/> \r\n                    </div>\r\n                    <Button classes=\"btn\" text=\"cancel\" onClick={(e) => handleClick(e,\"BACK\")}/>\r\n                </Main> \r\n            </>\r\n    )\r\n}\r\n\r\nexport default ChoicePage\r\n","import {useState} from 'react'\r\nimport './SubscribePage.css'\r\n\r\n\r\nfunction SubscribePage() {\r\n    const [formValues, setValue] = useState({\r\n        email:'',\r\n        username: ''\r\n    });\r\n    \r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        setValue({...formValues, [e.target.name]:e.target.value});\r\n    };\r\n\r\n    const handleBlur = (e) => {\r\n        e.preventDefault();\r\n        setValue({...formValues,[e.target.name]:e.target.value})     \r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        const data = new FormData();\r\n        Object.keys(formValues).map((key, index) => {\r\n            return data.append(key,formValues[key]);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\">\r\n            <h2 className=\"form--title\">Inscription :</h2>\r\n            <input \r\n                id=\"email\" \r\n                className=\"subscribe__form--input\"  \r\n                name=\"email\" \r\n                type=\"email\" \r\n                placeholder=\"Taper votre email ...\" \r\n                onBlur={e => handleBlur(e)} \r\n                onChange={e => handleChange(e)} \r\n                value={formValues.email} \r\n            />\r\n            <input \r\n                id=\"username\" \r\n                className=\"subscribe__form--input\" \r\n                name=\"username\" type=\"username\" \r\n                placeholder=\"Tapez votre username \" \r\n                onBlur={e => handleBlur(e)} \r\n                onChange={e => handleChange(e)} \r\n                value={formValues.username}\r\n            />\r\n            <button \r\n                className=\"btn btn-success\" \r\n                type=\"submit\"  \r\n                onClick={e => handleClick(e)}>\r\n                    Valider\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SubscribePage;","import React from 'react'\r\nimport {AiOutlineEye,AiOutlinePlusCircle} from 'react-icons/ai'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst StarterDeck = (props) => {\r\n    const {title, infos, EC, mode} = props;\r\n    return (\r\n        <li className=\"deck__block\">\r\n            <div className=\"deck__inner--left\">\r\n                <h3 className=\"deck__title\">{title}</h3>\r\n                <p className=\"deck__infos\">{infos}</p>\r\n            </div>\r\n            <div className=\"deck__inner--right\">\r\n                <div className=\"inner__right--text\">\r\n                    <h3 className=\"deck__ec--title\">EC :</h3>\r\n                    <span className=\"deck__ec--value\">{EC}</span>\r\n                </div>\r\n                <div className=\"inner__right--actions\">\r\n                    <div className=\"action\" ><AiOutlineEye/></div>\r\n                    <Link className=\"action\" to=\"/cards\"><AiOutlinePlusCircle/></Link>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default StarterDeck\r\n","import React from 'react'\r\nimport List from '../components/List'\r\nimport StarterDeck from '../components/StarterDeck'\r\nimport Button from '../components/Button'\r\nimport Header from '../layouts/Header'\r\nimport Main from '../layouts/Main'\r\n\r\nconst StarterPage = (props) => {\r\n    const datas = [\r\n        {\r\n            id: 0,\r\n            title: \"Dummy\",\r\n            infos: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut architecto laborum cupiditate velit fuga.\",\r\n            EC: 250,\r\n            cards_num: 64\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"Beginner\",\r\n            infos: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut architecto laborum cupiditate velit fuga.\",\r\n            EC: 250,\r\n            cards_num: 64\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"Low Mid\",\r\n            infos: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut architecto laborum cupiditate velit fuga.\",\r\n            EC: 250,\r\n            cards_num: 64\r\n        },\r\n        {\r\n            id: 4,\r\n            title: \"Hig Mid\",\r\n            infos: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut architecto laborum cupiditate velit fuga.\",\r\n            EC: 250,\r\n            cards_num: 64\r\n        },\r\n        {\r\n            id: 5,\r\n            title: \"The cream of the crop\",\r\n            infos: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut architecto laborum cupiditate velit fuga.\",\r\n            EC: 250,\r\n            cards_num: 64\r\n        },\r\n\r\n    ]\r\n    return (\r\n        <>\r\n            <Header>\r\n                <h1>Starter Decks</h1>\r\n            </Header>\r\n            <Main classes=\"page\">\r\n                <List classes=\"layout layout__1 mb-4\">\r\n                    {\r\n                        datas.map((elmt, index )=> (<StarterDeck key={index} title={elmt.title} infos={elmt.infos} EC={elmt.EC} />))\r\n                    }\r\n                </List>\r\n                <Button classes='btn' text=\"cancel\" onClick={props.history.goBack}/>\r\n            </Main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StarterPage\r\n","export default __webpack_public_path__ + \"static/media/framus.28ad3f9b.jpg\";","import {createContext} from 'react'\r\n\r\nconst CardsContext = createContext()\r\n\r\nexport default CardsContext;","import React, {useState} from 'react'\r\nimport List from '../components/List'\r\nimport Card from '../components/Card'\r\nimport Image from '../img/cards/framus.jpg'\r\nimport Button from '../components/Button'\r\nimport CardsContext from '../contexts/CardsContext'\r\nimport Header from '../layouts/Header'\r\nimport Main from '../layouts/Main'\r\n\r\n\r\nconst IndividualPage = (props) => {\r\n    const cards = [\r\n        {\r\n            id: 0,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 1,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 2,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 3,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 4,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 5,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 6,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 7,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 8,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 9,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false\r\n        },\r\n        {\r\n            id: 10,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        }\r\n    ]\r\n    const [isSelected, setIsSelected] = useState(cards)\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        props.history.goBack();\r\n    }\r\n\r\n    const handleChange = (e, id) => {\r\n        setIsSelected(isSelected => {\r\n            const test = [...isSelected]\r\n            test[id].selected = e.target.checked\r\n            console.log(test)\r\n            return [...test];\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <CardsContext.Provider value={[isSelected,setIsSelected]}>\r\n        <Header classes=\"header\">\r\n            <h1>{props.location.pathname.split('/').pop()}</h1>\r\n        </Header>\r\n        <Main classes=\"page\">\r\n            <List classes={`layout layout__3 ${!isSelected.some(elmt => elmt.selected) ? \"mb-4\" : \"mb-1\"}`}>\r\n                {isSelected.map(elmt => <Card key={elmt.id} id={elmt.id} url={elmt.url} alt={elmt.alt} mode=\"edit\" onChange={(e) => handleChange(e,elmt.id)}/>)}\r\n            </List>\r\n            {isSelected.some(elmt => elmt.selected) ? <Button classes=\"btn\" text=\"add\"/> : ''}\r\n            <Button classes=\"btn\" text=\"cancel\" onClick={handleClick}/>\r\n        </Main>\r\n        </CardsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default IndividualPage\r\n","import React from 'react'\r\nimport Layout from '../layouts/Layout'\r\nimport NavButton from '../components/NavButton'\r\n\r\nconst DeckBuildOptions = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <h1>Options :</h1>\r\n                <div className=\"block\">\r\n                    <NavButton text=\"create\" url=\"/decks/new-deck/create\"/>\r\n                    <NavButton text=\"import\" url=\"/decks/new-deck/import\"/>\r\n                </div>\r\n                <NavButton text=\"back\" url=\"/decks\"/>\r\n            </Layout>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeckBuildOptions\r\n","async function getEden(id){\r\n\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    }\r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/eden`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getEdenCards(id){\r\n    let settings = {\r\n        method : 'GET',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/eden/cards`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function createEden(id){\r\n\r\n    let settings = {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/eden/create`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function deleteEden(id){\r\n    let settings = {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/eden/delete`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\n\r\nexport { getEden, getEdenCards, createEden, deleteEden };","async function getHolyBook(id){\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    }\r\n    \r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/holybook`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getHolyBookCards(id){\r\n    let settings = {\r\n        method : 'GET',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/holybook/cards`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function createHolyBook(id){\r\n\r\n    let settings = {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/holybook/create`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function deleteHolyBook(id){\r\n    let settings = {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/holybook/delete`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nexport { getHolyBook, getHolyBookCards, createHolyBook, deleteHolyBook };","async function getRegister(id){\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    }\r\n    \r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/register`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getRegisterCards(id){\r\n    let settings = {\r\n        method : 'GET',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api/decks/${id}/register/cards`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function createRegister(id){\r\n\r\n    let settings = {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/register/create`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function deleteRegister(id){\r\n    let settings = {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api//decks/${id}/register/delete`, settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nexport { getRegister, getRegisterCards, createRegister, deleteRegister };","import React,{useEffect, useState} from 'react';\r\nimport {useParams, Link} from 'react-router-dom';\r\nimport { GiStack } from 'react-icons/gi';\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport { RiLoader3Line } from 'react-icons/ri';\r\n\r\n/* api */\r\nimport {getEden, createEden, deleteEden} from '../api/Eden.jsx';\r\nimport {getHolyBook, createHolyBook, deleteHolyBook} from '../api/HolyBook.jsx';\r\nimport {getRegister, createRegister, deleteRegister} from '../api/Register.jsx';\r\n\r\n/* layouts */\r\nimport Layout from '../layouts/Layout';\r\n\r\n/* components */\r\nimport Button from '../components/Button';\r\nimport Loader from '../components/Loader';\r\n\r\nconst DeckCreate = (props) => {\r\n    const { id } = useParams();\r\n    const [subdecks, setSubDecks] = useState({\r\n        eden: {\r\n            code: null,\r\n            message: null\r\n        },\r\n        register: {\r\n            code: null,\r\n            message: null\r\n        },\r\n        holybook: {\r\n            code: null,\r\n            message: null\r\n        }\r\n    });\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    const handleClickNav = async (e) => {\r\n        e.preventDefault();\r\n        let response = null;\r\n\r\n        if(e.target.id === 'eden'){\r\n            response = await createEden(id);\r\n            setSubDecks({...subdecks, eden: response});\r\n        }\r\n\r\n        if(e.target.id === 'register'){\r\n            response = await createRegister(id);\r\n            setSubDecks({...subdecks, register: response});\r\n        }\r\n\r\n        if(e.target.id === 'holybook'){\r\n            response = await createHolyBook(id);\r\n            setSubDecks({...subdecks, holybook: response});\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleDeleteEden = async (e) => {\r\n        e.preventDefault();\r\n        let response = await deleteEden(id);\r\n        if(response.code === 200){\r\n            setSubDecks({...subdecks, eden: {\r\n                code:null,\r\n                message: null\r\n            }});\r\n        }else{\r\n            setSubDecks({...subdecks, eden: response});           \r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleDeleteRegister = async (e) => {\r\n        e.preventDefault();\r\n        let response = await deleteRegister(id);\r\n        if(response.code === 200){\r\n            setSubDecks({...subdecks, register: {\r\n                code:null,\r\n                message: null\r\n            }});\r\n        }else{\r\n            setSubDecks({...subdecks, register: response});           \r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleDeleteHolyBook = async (e) => {\r\n        e.preventDefault();\r\n        let response = await deleteHolyBook(id);\r\n        if(response.code === 200){\r\n            setSubDecks({...subdecks, holybook: {\r\n                code:null,\r\n                message: null\r\n            }});\r\n        }else{\r\n            setSubDecks({...subdecks, holybook: response});           \r\n        }\r\n        return true;\r\n    }\r\n    \r\n    useEffect(async () => {\r\n        let eden = await getEden(id);\r\n        let register = await getRegister(id);\r\n        let holybook = await getHolyBook(id);\r\n        let response = {};\r\n\r\n        if(eden.message){\r\n            response = {...response, eden: eden}\r\n        }\r\n\r\n        if(register.message){\r\n            response = {...response, register: register}\r\n        }\r\n\r\n        if(holybook.message){\r\n            response = {...response, holybook: holybook}\r\n        }\r\n\r\n        setSubDecks(response);\r\n    },[]);\r\n\r\n    return loaded === true ? (\r\n        <Layout>\r\n            {subdecks.eden.code === 200 ?\r\n                <div className=\"subdeck__box mb-5\">\r\n                    <div className=\"subdeck__heading py-2\">\r\n                        <h4 className=\"subdeck__type\">eden</h4>\r\n                    </div>\r\n                    <div className=\"subdeck__body row justify-between p-2\">\r\n                        <p className=\"subdeck__infos row align-center\">\r\n                            Num cards : {subdecks.eden.message.qty === undefined ? 0 : subdecks.eden.message.qty}\r\n                        </p>\r\n                        <div className=\"subdeck__icon--list row justify-between\">\r\n                            <Link to={`/decks/${id}/eden`}>\r\n                                <GiStack className=\"subdeck__icon\" />\r\n                            </Link>\r\n                            <AiFillDelete className=\"subdeck__icon\" onClick={handleDeleteEden}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Button id=\"eden\" classes=\"btn mb-3\" text=\"create eden\" onClick={handleClickNav} />\r\n            }\r\n            {subdecks.register.code === 200 ?\r\n                <div className=\"subdeck__box mb-5\">\r\n                    <div className=\"subdeck__heading py-2\">\r\n                        <h4 className=\"subdeck__type\">register</h4>\r\n                    </div>\r\n                    <div className=\"subdeck__body row justify-between p-2\">\r\n                        <p className=\"subdeck__infos  row align-center\">\r\n                            Num cards : {subdecks.register.message.qty === undefined ? 0 : subdecks.register.message.qty}\r\n                        </p>\r\n                        <div className=\"subdeck__icon--list row justify-between\">\r\n                            <Link to={`/decks/${id}/register`}>\r\n                                <GiStack className=\"subdeck__icon\" />\r\n                            </Link>\r\n                            <AiFillDelete className=\"subdeck__icon\" onClick={handleDeleteRegister}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Button id=\"register\" classes=\"btn mb-3\" text=\"create register\" onClick={handleClickNav}/>\r\n            }\r\n            {subdecks.holybook.code === 200 ?\r\n                <div className=\"subdeck__box\">\r\n                    <div className=\"subdeck__heading py-2\">\r\n                        <h4 className=\"subdeck__type\">holybook</h4>\r\n                    </div>\r\n                    <div className=\"subdeck__body row justify-between p-2\">\r\n                        <p className=\"subdeck__infos  row align-center\">\r\n                            Num cards : {subdecks.holybook.message.qty === undefined ? 0 : subdecks.holybook.message.qty }\r\n                        </p>\r\n                        <div className=\"subdeck__icon--list row justify-between\">\r\n                            <Link to={`/decks/${id}/holybook`}>\r\n                                <GiStack className=\"subdeck__icon\" />\r\n                            </Link>\r\n                            <AiFillDelete className=\"subdeck__icon\" onClick={handleDeleteHolyBook}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Button id=\"holybook\" classes=\"btn\" text=\"create holybook\" onClick={handleClickNav}/>\r\n            }\r\n        </Layout>\r\n    )\r\n    :\r\n    (\r\n        <Loader condition = { \r\n                    subdecks.eden.code !== null || \r\n                    subdecks.register.code !== null ||\r\n                    subdecks.holybook.code !== null \r\n                }\r\n                setLoaded = {setLoaded}\r\n                loaderIcon = {RiLoader3Line}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DeckCreate;\r\n","const DeckImport = () => {\r\n    return null;\r\n}\r\n\r\nexport default DeckImport;","import {useHistory} from 'react-router-dom';\r\nimport {GiReturnArrow} from 'react-icons/gi';\r\n\r\nfunction Return(props){\r\n    let history = useHistory();\r\n\r\n    const handleClick = function(e){\r\n        e.preventDefault();\r\n        history.push('/decks');\r\n    }\r\n\r\n    return (\r\n            <div className = \"return__block\" onClick={handleClick}>\r\n                <GiReturnArrow className=\"return__icon\" />\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Return;","import Layout from '../layouts/Layout';\r\nimport Return from '../components/Return'\r\n\r\n\r\nconst EmptyDecksList = (props) => {\r\n\r\n    return (\r\n            <Layout>\r\n                <div className=\"deck__list\">\r\n                    <p className=\"deck__list--empty\">{props.text}</p>\r\n                </div>\r\n                <Return />\r\n            </Layout>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default EmptyDecksList;\r\n","\r\nimport {useEffect,useState, useRef} from 'react';\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\n/* layout parts */\r\nimport Main from '../layouts/Main';\r\n\r\n/* components */\r\nimport {AiOutlineArrowRight} from 'react-icons/ai';\r\nimport Button from '../components/Button';\r\nimport Flash from '../components/Flash';\r\n\r\n/* modules */\r\nimport regexModule from '../modules/regex';\r\n\r\n/* api*/\r\nimport { updateOne,getOne } from'../api/Decks.jsx';\r\n\r\n/* utilities */\r\nimport checkRegex from '../utilities/checkRegex';\r\nimport { serialize } from '../utilities/serialize';\r\n\r\nfunction ModifyDeckPage(props){\r\n    const options = [\r\n        [1, 'Poseidia'],\r\n        [2, 'Eondra'],\r\n        [3, 'Endless night'],\r\n        [4, 'MetaScience'],\r\n        [5, 'The light\\'s temple'],\r\n        [6, 'Celestial purity'],\r\n        [7, 'The saber\\'s way'],\r\n    ]\r\n    const optionsTitle = 'Kingdoms';\r\n    const [deckInfos, setDeckInfos] = useState({});\r\n    const [flashState, setFlashState] = useState(null);\r\n    const [response, setResponse] = useState('');\r\n    const deckName = useRef(null);\r\n    let { id } = useParams();\r\n\r\n    /* handling functions */\r\n    const handleFlash = (newFlashState) => {\r\n        setFlashState(newFlashState);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'kingdoms'){\r\n            if(e.target.checked === true){\r\n                setDeckInfos(prevState => {\r\n                    let newArr = prevState.kingdom === null ? [Number(e.target.id)] : [...prevState.kingdom, Number(e.target.id)];\r\n                    const newSet = new Set(newArr);\r\n                    newArr = Array.from(newSet);\r\n                    return {\r\n                        ...prevState,\r\n                        kingdom: newArr.sort()\r\n                    };\r\n                });\r\n            }\r\n            \r\n            if(e.target.checked === false){\r\n                setDeckInfos(prevState => {\r\n                    let newArr = [...prevState.kingdom];\r\n                    const index = newArr.indexOf(Number(e.target.value));\r\n                    if(index > -1){\r\n                        newArr.splice(index, 1);\r\n                    }\r\n\r\n                    return {\r\n                        ...prevState,\r\n                        kingdom: newArr.sort()\r\n                    }\r\n\r\n                })\r\n            }\r\n        }\r\n        \r\n        if(e.target.id === 'deck_name'){\r\n            setDeckInfos({...deckInfos, deck_name: e.target.value})\r\n        }\r\n\r\n        if(e.target.id === 'description'){\r\n            setDeckInfos({...deckInfos, description: e.target.value});\r\n        }\r\n\r\n        if(e.target.id === 'isVisible'){\r\n            setDeckInfos({...deckInfos, is_visible: e.target.checked});\r\n        }\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        if(e.target.id === 'deck_name'){\r\n            setDeckInfos({...deckInfos, deck_name: e.target.value});\r\n        }\r\n    }   \r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        let form = new FormData();\r\n        Object.keys(deckInfos).map(elmt => {\r\n            if(elmt === 'kingdom'){\r\n                form.append(elmt, serialize(deckInfos.kingdom));\r\n            }else{\r\n                form.append(elmt, deckInfos[elmt]);\r\n            }\r\n            return true;\r\n        });\r\n\r\n        let updateRes = await updateOne(form, id);\r\n            setResponse(updateRes);\r\n        if(updateRes.code === 200){\r\n            setFlashState(true);\r\n        }else if(updateRes.code !== 200){\r\n            setFlashState(false);\r\n        }else{\r\n            setFlashState(null)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        if(checkRegex(regexModule.regex_deck_name, deckName.current.value) === true){\r\n            deckName.current.classList.add('good__input');\r\n        }\r\n\r\n        if(checkRegex(regexModule.regex_deck_name, deckName.current.value) === false){\r\n            deckName.current.classList.add('bad__input');\r\n        }\r\n\r\n        return () => {\r\n            if(deckName.current.classList.contains('good__input')){\r\n                deckName.current.classList.remove('good__input');\r\n            };\r\n\r\n            if(deckName.current.classList.contains('bad__input')){\r\n                deckName.current.classList.remove('bad__input');\r\n            };\r\n        }\r\n    }, [deckInfos.deck_name]);\r\n\r\n    useEffect(async () => {\r\n        let res = await getOne(id);\r\n        if(res.code === 200){\r\n            setDeckInfos(res.message);\r\n        }else{\r\n            setFlashState(false);\r\n            setResponse(res);\r\n        }\r\n    },[]);\r\n\r\n    return (\r\n        <Main classes=\"page page__deck\">\r\n            <div className=\"row justify-end w-80\">\r\n                <Link className=\"row justify-between align-center\" to={`/decks/${id}/subdecks`}>Subdeck <AiOutlineArrowRight className=\"arrow ml-2\"/></Link>\r\n            </div>\r\n            <form className=\"form\" onChange={handleChange} onBlur={handleBlur}>\r\n                <div className=\"form--section column\">\r\n                    <input id=\"deck_name\" className=\"form--input mb-2\" ref={deckName} type=\"text\" placeholder=\"deck name\" value={deckInfos.deck_name}/>\r\n                    <div className=\"form__option--block row\">\r\n                        <label className=\"form__label mr-2\" htmlFor=\"isVisible\">Public</label>\r\n                        <input id=\"isVisible\" className=\"form__checkbox\" type=\"checkbox\" checked={deckInfos.is_visible}/>\r\n                    </div>\r\n                    <p className=\"row justify-start mb-1\" >Cards number : {deckInfos.num_cards}</p>\r\n                    <p className=\"row jsutify-start mb-2\">Total Celestian energy : {deckInfos.total_ec}</p>\r\n                    {options && options instanceof Array ?\r\n                        <fieldset className=\"pb-2 mb-3\">\r\n                            <legend className=\"px-2\">{optionsTitle}</legend>\r\n                            <ul id=\"kingdoms__list\" className=\"column\">\r\n                                {\r\n                                    options.map(elmt => ( \r\n                                            <li key={elmt[0]} className=\"row justify-between\">\r\n                                                <label className=\"form__label\" htmlFor={elmt[0]}>{elmt[1]}</label>\r\n                                                <input \r\n                                                       id={elmt[0]} \r\n                                                       className=\"form__checkbox\" \r\n                                                       type=\"checkbox\" \r\n                                                       name=\"kingdoms\"\r\n                                                       checked ={ deckInfos.kingdom && deckInfos.kingdom.includes(elmt[0])}\r\n                                                       value={elmt[0]}\r\n                                                />\r\n                                            </li> \r\n                                        )\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </fieldset>\r\n                        :\r\n                        null\r\n                    }\r\n                    <textarea id=\"description\" className=\"form__textarea\" placeholder=\"description\" value={deckInfos.description}/>\r\n                </div>\r\n                <Button onClick={handleClick} text=\"update\" />\r\n            </form>\r\n            <Flash \r\n                classes=\"message__flash\" \r\n                errorClass=\"message__flash-error\" \r\n                successClass=\"message__flash-done\" \r\n                message={response.message ? response.message : \"flash message\"}\r\n                timing={750}\r\n                flash={flashState}\r\n                handleFlash={handleFlash}\r\n            />\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default ModifyDeckPage;","import React,{forwardRef} from 'react';\r\n\r\nconst PopupContainer = forwardRef((props, ref) => {\r\n    const {classes} = props;\r\n    return (\r\n        <div ref={ref} className={classes ? classes : \"popup__container\"}>\r\n                {props.children}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default PopupContainer;\r\n","import {useEffect, useState, useRef} from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\n/* api */\r\nimport { getEdenCards } from '../api/Eden';\r\nimport { getRegisterCards } from '../api/Register';\r\nimport { getHolyBookCards } from '../api/HolyBook';\r\n\r\n/* components */\r\nimport Loader  from '../components/Loader';\r\nimport { RiLoader3Line } from 'react-icons/ri';\r\nimport { AiFillCloseCircle } from 'react-icons/ai';\r\nimport {AiOutlineArrowLeft} from 'react-icons/ai';\r\nimport Button from '../components/Button';\r\nimport PopupContainer from '../components/PopupContainer';\r\nimport List from '../components/List';\r\nimport Plus from '../components/Plus';\r\n\r\n/* layouts */\r\nimport Main from '../layouts/Main';\r\n\r\nfunction SubDeckPage(props){\r\n\r\n    let endUrl = props.location.pathname.split('/');\r\n    endUrl = endUrl[endUrl.length - 1];\r\n\r\n    let {id} = useParams();\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [cardsList, setCardsList] = useState({\r\n        code: null,\r\n        message: null\r\n    });\r\n    const [isEmpty, setIsEmpty] = useState(true);\r\n    const [test, setTest] = useState(false);\r\n\r\n    const popupRef = useRef(null);\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if(popupRef.current.classList.contains('d-none')){\r\n            popupRef.current.classList.remove('d-none');\r\n        }else{\r\n            popupRef.current.classList.add('d-none');      \r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleValid = (e) => {\r\n        e.preventDefault();\r\n        popupRef.current.classList.add('d-none');\r\n        return true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n           setTest(true); \r\n        }, 500);\r\n    })\r\n\r\n    useEffect(async () => {\r\n        let response = null;\r\n\r\n        if(endUrl === 'eden'){\r\n            response = await getEdenCards(id);\r\n        }\r\n        \r\n        if(endUrl === 'register'){\r\n            response = await getRegisterCards(id);\r\n        }\r\n\r\n        if(endUrl === 'holybook'){\r\n            response = await getHolyBookCards(id);\r\n        }\r\n\r\n        if(response.message.cards.length === 0){\r\n            setIsEmpty(true);\r\n        }else{\r\n            setIsEmpty(false);\r\n        }\r\n\r\n        setCardsList(response);\r\n    },[]);\r\n\r\n\r\n    return loaded === true ? (\r\n        <Main classes=\"page\">\r\n                {\r\n                    isEmpty === true ?\r\n                    (\r\n                        <>  \r\n                            <div className=\"row justify-start w-80\">\r\n                                <Link \r\n                                    className=\"row justify-between align-center\" \r\n                                    to={`/decks/${id}/subdecks`}\r\n                                >\r\n                                    <AiOutlineArrowLeft className=\"arrow mr-2\"/>\r\n                                </Link>\r\n                            </div>\r\n                            <List classes=\"list__content layout layout__1\">\r\n                                <p style ={{color: \"black\",marginTop:\"auto\",marginBottom:\"auto\"}}>\r\n                                        Empty \r\n                                </p>\r\n                            </List>\r\n                            <Plus to={`/decks/${id}/${endUrl}/modify`}/>\r\n                            <PopupContainer \r\n                                classes=\"subdeck column align-center popup__container py-5 d-none\" \r\n                                ref={popupRef}\r\n                            >\r\n                                <div className=\"popup__heading\">\r\n                                    <div className=\"popup__close\" onClick={handleClick}>\r\n                                        <AiFillCloseCircle />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"popup__body my-5\">\r\n                                    <List classes=\"layout layout__3 p-0\">\r\n\r\n                                    </List>\r\n                                </div>\r\n                                <div className=\"popup__footer\">\r\n                                    <Button \r\n                                        text=\"Valid\" \r\n                                        bgcolor=\"#3be73b\" \r\n                                        color=\"#101010\" \r\n                                        padding=\"3vw 0\" \r\n                                        onClick={handleValid}\r\n                                    />\r\n                                </div>\r\n                            </PopupContainer>\r\n                        </>\r\n                    )\r\n                    :\r\n                    (\r\n                        <p style ={{color: \"black\",marginTop:\"auto\",marginBottom:\"auto\", textAlign: \"center\"}}>\r\n                            I'm full\r\n                        </p>\r\n                    )\r\n                }\r\n        </Main>\r\n    )\r\n    :\r\n    (\r\n        <Loader condition={test === true} loaderIcon={RiLoader3Line} setLoaded={setLoaded} />\r\n    )\r\n}\r\n\r\nexport default SubDeckPage;","import React from 'react'\r\n\r\nconst VhInPixels = () => {\r\n    let vh = window.innerHeight * 0.01;\r\n    return (\r\n        <>\r\n        {\r\n            window.addEventListener(\"load\",(e) => {\r\n                document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n            })\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VhInPixels\r\n","import dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\nasync function getTypesList(lang){\r\n    let settings = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': process.env.REACT_APP_TOKEN\r\n        }\r\n\r\n    }\r\n\r\n    let response = await fetch(`https://api.7fallen.ovh/api/types/all/${lang}`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getRaritiesList(lang){\r\n    let settings = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': process.env.REACT_APP_TOKEN\r\n        }\r\n\r\n    }\r\n\r\n    let response = await fetch(`https://api.7fallen.ovh/api/rarities/all/${lang}`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getKingdomsList(lang){\r\n    let settings = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': process.env.REACT_APP_TOKEN\r\n        }\r\n\r\n    }\r\n\r\n    let response = await fetch(`https://api.7fallen.ovh/api/kingdoms/all/${lang}`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getExtensionsList(lang){\r\n    let settings = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': process.env.REACT_APP_TOKEN\r\n        }\r\n\r\n    }\r\n\r\n    let response = await fetch(`https://api.7fallen.ovh/api/extensions/all/${lang}`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getClassesList(lang){\r\n    let settings = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': process.env.REACT_APP_TOKEN\r\n        }\r\n\r\n    }\r\n\r\n    let response = await fetch(`https://api.7fallen.ovh/api/classes/all/${lang}?name=m`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getCapacitiesList(lang){\r\n    let settings = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': process.env.REACT_APP_TOKEN\r\n        }\r\n\r\n    }\r\n\r\n    let response = await fetch(`https://api.7fallen.ovh/api/capacities/all/${lang}?name=a`,settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getEdenCards(page,count,lang){\r\n    let settings = {\r\n        method:'GET',\r\n        headers: {\r\n            'Authorization': process.env.REACT_APP_TOKEN\r\n        }\r\n    }\r\n    let url = new URL(`https://api.7fallen.ovh/api/cards/all/${lang.toUpperCase()}`);\r\n    url.searchParams.append('types', [4,2,1,9]);\r\n    url.searchParams.append('card_count', count);\r\n    url.searchParams.append('page', page);\r\n    let response = await fetch(url,settings);\r\n    let datas = await response.json();\r\n    return {\r\n        code: response.status,\r\n        message: datas\r\n    };\r\n}\r\n\r\nexport { getEdenCards, getTypesList, getRaritiesList, getKingdomsList, getExtensionsList, getClassesList, getCapacitiesList };","import React from 'react'\r\n\r\nfunction Toolbar(props) {\r\n    const {classes, toolsList ,onClick} = props;\r\n    return (\r\n        <div className={classes ? classes : \"toolbar\"} onClick = {onClick}>\r\n           {\r\n             toolsList ? \r\n                Object.keys(toolsList).map((elmt, index) => {\r\n                    let NewComponent = toolsList[elmt].component;\r\n                    return (\r\n                        <div className=\"toolbar__icon\">\r\n                            <NewComponent key={index} id={toolsList[elmt].id} />\r\n                        </div>\r\n                        )\r\n                })\r\n            :\r\n            null\r\n           } \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar\r\n","import {useState, useEffect, lazy} from 'react';\r\n\r\nimport {getEdenCards} from '../api/CardsWareHouse';\r\n\r\nimport Layout from '../layouts/Layout';\r\nimport Loader from '../components/Loader';\r\nimport {RiLoader3Line} from 'react-icons/ri';\r\nimport Flash from '../components/Flash';\r\nimport List from '../components/List';\r\nimport Filters from '../components/Filters';\r\nimport Toolbar from '../components/Toolbar';\r\nimport {FiPlus, FiMinus, FiTrash} from 'react-icons/fi';\r\n\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\nfunction AddingSubDecksCardsPage(props) {\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [flashMessage, setFlashMessage] = useState(null);\r\n    const [flashState, setFlashState] = useState(null);\r\n    const [cardsResponse, setCardsResponse] = useState({\r\n        code: '',\r\n        message: ''\r\n    });\r\n\r\n    const toolBarList = {\r\n        Plus: {\r\n            component : () => <FiPlus id=\"add-one\" className=\"toolbar__icon\"/> \r\n        },\r\n        Minus: {\r\n            id: \"remove\",\r\n            component : () => <FiMinus id=\"remove-one\" className=\"toolbar__icon\"/>\r\n        },\r\n        Trash: {\r\n            id: \"remove-all\",\r\n            component : () => <FiTrash id=\"remove-all\" className=\"toolbar__icon\"/>\r\n        }\r\n    }\r\n\r\n    const handleFlash = (newFlashState) => {\r\n        setFlashState(newFlashState);\r\n    }\r\n\r\n    const handleToolbarList = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.target.id)\r\n    }\r\n\r\n    useEffect(async () => {\r\n        let response = await getEdenCards(1,20,'FR');\r\n        setCardsResponse(response);\r\n    },[]);\r\n\r\n    return loaded === true ? (\r\n        <Layout>\r\n            <Filters containerClasses=\"filter__container row  justify-end w-80 mb-3\" />\r\n            <List classes=\"subdeck list__content layout layout__1\">\r\n                {\r\n                    cardsResponse.message[1].map(elmt => {\r\n                        return (\r\n                            <li className=\"card__container\">\r\n                                <img \r\n                                    className=\"card__image\" \r\n                                    src={process.env.REACT_APP_CARDS_STATIC + '/' + elmt.image_path } \r\n                                    alt=\"card\"\r\n                                    loading=\"lazy\"\r\n                                />\r\n                                <Toolbar \r\n                                    classes=\"toolbar column justify-around\" \r\n                                    toolsList={toolBarList} \r\n                                    onClick={handleToolbarList} \r\n                                />\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </List>\r\n            <Flash \r\n                classes=\"message__flash\" \r\n                errorClass=\"message__flash-error\" \r\n                successClass=\"message__flash-done\" \r\n                message={flashMessage ? flashMessage : \"flash message\"}\r\n                timing={750}\r\n                flash={flashState}\r\n                handleFlash= {handleFlash}\r\n            />\r\n        </Layout>\r\n    )\r\n    :\r\n    <Loader condition={cardsResponse.code === 200} loaderIcon={RiLoader3Line} setLoaded={setLoaded} />\r\n}\r\n\r\nexport default AddingSubDecksCardsPage;\r\n","import { useEffect } from 'react'\n\n//Layout element import\nimport Footer from'./layouts/Footer';\nimport Menu from './components/Menu';\n\n//Settings import\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n//Components imports\nimport Navigation from './components/Navigation';\nimport Header from './layouts/Header';\nimport Avatar from './components/Avatar';\nimport Logout from './components/Logout';\n\n// Pages import\nimport LandingPage from './pages/LandingPage';\nimport DecksPage from './pages/DecksPage';\nimport CardsPage from './pages/CardsPage';\nimport ProfilePage from './pages/ProfilePage';\nimport GamersPage from './pages/GamersPage';\nimport ErrorPage from './pages/ErrorPage';\nimport LoginPage from './pages/LoginPage';\nimport SettingsDeckPage from './pages/SettingsDeckPage';\nimport AddingDeckPage from './pages/AddingDeckPage';\nimport ChoicePage from './pages/ChoicePage';\nimport SubscribePage from './pages/SubscribePage';\nimport StarterPage from './pages/StarterPage';\nimport IndividualPage from './pages/IndividualPage';\nimport DeckBuildOptions from './pages/DeckBuildOptions';\nimport DeckCreate from './pages/DeckCreate';\nimport DeckImport from './pages/DeckImport';\nimport EmptyDecksList from './pages/EmptyDecksList';\nimport ModifyDeckPage from './pages/ModifyDeckPage';\nimport SubDeckPage from './pages/SubDeckPage';\n\n//Utilities import\nimport VhInPixels from './utilities/VhInPixels';\nimport { getRaritiesList, getTypesList, getKingdomsList, getCapacitiesList, getExtensionsList, getSubdeckCards, getClassesList } from './api/CardsWareHouse';\nimport AddingSubDecksCardsPage from './pages/AddingSubDecksPage';\n\nfunction App() {\n\n  const pages = [\n    {\n        exact: true,\n        path:'/',\n        component: LandingPage,\n    },\n    {\n        strict: true,\n        path:'/login',\n        component: LoginPage,\n    },\n    {\n        strict: true,\n        path:'/subscribe',\n        component: SubscribePage,\n    },\n    {\n        strict: true,\n        path:'/profile',\n        component: ProfilePage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks',\n        component: DecksPage\n    \n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/create',\n        component: AddingDeckPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/empty',\n        component: EmptyDecksList,\n        props: {text: \"No Decks \"} \n    },\n    {\n        exact: true,\n        strict: true,\n        path: '/decks/:id/modify',\n        component: ModifyDeckPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/:id/subdecks',\n        component: DeckCreate\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/:id/eden',\n        component: SubDeckPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/:id/eden/modify',\n        component: AddingSubDecksCardsPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/:id/register',\n        component: SubDeckPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/:id/register/modify',\n        component: AddingSubDecksCardsPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/:id/holybook',\n        component: SubDeckPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/:id/holybook/modify',\n        component: AddingSubDecksCardsPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/new-deck/build',\n        component: DeckBuildOptions\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/new-deck/import',\n        component: DeckImport\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/cards',\n        component: CardsPage,\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/cards/from',\n        component: ChoicePage,\n    },\n    {\n        strict:true,\n        path:'/cards/from/starter',\n        component: StarterPage,\n    },\n    {\n        strict:true,\n        path:'/cards/from/individual',\n        component: IndividualPage,\n    },\n    {\n\n        strict: true,\n        path:'/deck/:name',\n        component: SettingsDeckPage\n    },\n    {\n\n        strict: true,\n        path:'/gamers',\n        component: GamersPage\n    },\n    {\n        component: ErrorPage\n    },\n  ]\n\n  useEffect(async () => {\n\n    if(!sessionStorage.getItem('types')){\n        let types = await getTypesList('FR');\n        sessionStorage.setItem('types',JSON.stringify(types));\n    }\n\n    if(!sessionStorage.getItem('kingdoms')){\n        let kingdoms = await getKingdomsList('FR');\n        sessionStorage.setItem('kingdoms',JSON.stringify(kingdoms));\n    }\n\n    if(!sessionStorage.getItem('rarities')){\n        let rarities = await getRaritiesList('FR');\n        sessionStorage.setItem('rarities',JSON.stringify(rarities));\n    }\n\n    if(!sessionStorage.getItem('extensions')){\n        let extensions = await getExtensionsList('FR');\n        sessionStorage.setItem('extensions',JSON.stringify(extensions));\n    }\n   \n  }, []);\n\n  return (\n        <>\n          <VhInPixels/>\n          <Router basename=\"/\">\n            <Header classes=\"header row justify-end\">\n                <div className='header__inner--right row justify-between'>\n                    <Avatar />\n                    <Logout />\n                </div>\n            </Header>\n              <Navigation pages={pages} />\n            <Footer classes=\"footer\">\n              <Menu classes=\"navbar\" />\n            </Footer>\n          </Router>\n        </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n        <App />\n    ,document.getElementById('root'));"],"sourceRoot":""}