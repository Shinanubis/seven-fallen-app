[{"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\index.js":"1","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\App.jsx":"2","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Menu.js":"3","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\layouts\\Footer.jsx":"4","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\layouts\\Header.jsx":"5","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Avatar.jsx":"6","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\LandingPage.jsx":"7","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Logout.jsx":"8","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\CardsPage.jsx":"9","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\ProfilePage.jsx":"10","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Navigation.jsx":"11","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\DecksPage.jsx":"12","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\GamersPage.jsx":"13","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\ErrorPage.jsx":"14","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\SettingsDeckPage.jsx":"15","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\SubscribePage.jsx":"16","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\LoginPage.jsx":"17","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\AddingDeckPage.jsx":"18","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\ChoicePage.jsx":"19","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\StarterPage.jsx":"20","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\DeckBuildOptions.jsx":"21","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\DeckCreate.jsx":"22","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\DeckImport.jsx":"23","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\IndividualPage.jsx":"24","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\contexts\\Context.jsx":"25","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\utilities\\VhInPixels.jsx":"26","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Button.jsx":"27","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Separator.jsx":"28","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Filters.jsx":"29","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\layouts\\Main.jsx":"30","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Plus.jsx":"31","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Card.jsx":"32","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\List.jsx":"33","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Pagination.jsx":"34","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\layouts\\Layout.jsx":"35","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Flash.jsx":"36","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\User.jsx":"37","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\SearchBar.jsx":"38","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Deck.jsx":"39","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\InputText.jsx":"40","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Popup.jsx":"41","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\SocialButton.jsx":"42","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\CheckBox.jsx":"43","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\contexts\\CardsContext.jsx":"44","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Dropdown.jsx":"45","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\NavButton.jsx":"46","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\StarterDeck.jsx":"47","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\BackButton.jsx":"48","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\Decks.jsx":"49","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\UserDefault.jsx":"50","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Draw.jsx":"51","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\utilities\\serialize.js":"52","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Return.jsx":"53","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\EmptyDecksList.jsx":"54","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\utilities\\checkRegex.js":"55","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\modules\\regex.js":"56","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\ModifyDeckPage.jsx":"57","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\Register.jsx":"58","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\HolyBook.jsx":"59","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\Eden.jsx":"60","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\SubDeckPage.jsx":"61"},{"size":168,"mtime":1616699326089,"results":"62","hashOfConfig":"63"},{"size":4679,"mtime":1624369987671,"results":"64","hashOfConfig":"63"},{"size":2410,"mtime":1617568969768,"results":"65","hashOfConfig":"63"},{"size":226,"mtime":1623392405807,"results":"66","hashOfConfig":"63"},{"size":233,"mtime":1622979422383,"results":"67","hashOfConfig":"63"},{"size":441,"mtime":1623389915653,"results":"68","hashOfConfig":"63"},{"size":678,"mtime":1617296186851,"results":"69","hashOfConfig":"63"},{"size":339,"mtime":1623390092898,"results":"70","hashOfConfig":"63"},{"size":3460,"mtime":1623316018855,"results":"71","hashOfConfig":"63"},{"size":4224,"mtime":1623314174410,"results":"72","hashOfConfig":"63"},{"size":581,"mtime":1623705124974,"results":"73","hashOfConfig":"63"},{"size":10908,"mtime":1624277606877,"results":"74","hashOfConfig":"63"},{"size":3848,"mtime":1623316196234,"results":"75","hashOfConfig":"63"},{"size":172,"mtime":1617435746842,"results":"76","hashOfConfig":"63"},{"size":375,"mtime":1617052941944,"results":"77","hashOfConfig":"63"},{"size":1821,"mtime":1622724923335,"results":"78","hashOfConfig":"63"},{"size":1650,"mtime":1623315402400,"results":"79","hashOfConfig":"63"},{"size":4595,"mtime":1624284598243,"results":"80","hashOfConfig":"63"},{"size":1510,"mtime":1617536324299,"results":"81","hashOfConfig":"63"},{"size":2124,"mtime":1617483658069,"results":"82","hashOfConfig":"63"},{"size":604,"mtime":1622133438571,"results":"83","hashOfConfig":"63"},{"size":6284,"mtime":1624468069655,"results":"84","hashOfConfig":"63"},{"size":107,"mtime":1622896162297,"results":"85","hashOfConfig":"63"},{"size":3141,"mtime":1617485464834,"results":"86","hashOfConfig":"63"},{"size":129,"mtime":1616936773440,"results":"87","hashOfConfig":"63"},{"size":347,"mtime":1617020600131,"results":"88","hashOfConfig":"63"},{"size":566,"mtime":1624446969810,"results":"89","hashOfConfig":"63"},{"size":227,"mtime":1617173401382,"results":"90","hashOfConfig":"63"},{"size":379,"mtime":1623508792339,"results":"91","hashOfConfig":"63"},{"size":202,"mtime":1622980965627,"results":"92","hashOfConfig":"63"},{"size":266,"mtime":1622982330724,"results":"93","hashOfConfig":"63"},{"size":510,"mtime":1617465096432,"results":"94","hashOfConfig":"63"},{"size":212,"mtime":1622634234746,"results":"95","hashOfConfig":"63"},{"size":1777,"mtime":1624051172461,"results":"96","hashOfConfig":"63"},{"size":390,"mtime":1617623054388,"results":"97","hashOfConfig":"63"},{"size":1019,"mtime":1622836968652,"results":"98","hashOfConfig":"63"},{"size":788,"mtime":1617439342640,"results":"99","hashOfConfig":"63"},{"size":495,"mtime":1617279230308,"results":"100","hashOfConfig":"63"},{"size":2792,"mtime":1624087717374,"results":"101","hashOfConfig":"63"},{"size":641,"mtime":1622735634942,"results":"102","hashOfConfig":"63"},{"size":6043,"mtime":1624274835361,"results":"103","hashOfConfig":"63"},{"size":319,"mtime":1618754080315,"results":"104","hashOfConfig":"63"},{"size":418,"mtime":1622729878843,"results":"105","hashOfConfig":"63"},{"size":107,"mtime":1617449661298,"results":"106","hashOfConfig":"63"},{"size":458,"mtime":1617618021628,"results":"107","hashOfConfig":"63"},{"size":696,"mtime":1624370615523,"results":"108","hashOfConfig":"63"},{"size":1017,"mtime":1617439696328,"results":"109","hashOfConfig":"63"},{"size":460,"mtime":1622895813079,"results":"110","hashOfConfig":"63"},{"size":3067,"mtime":1624287063341,"results":"111","hashOfConfig":"63"},{"size":213,"mtime":1617218149183,"results":"112","hashOfConfig":"63"},{"size":757,"mtime":1617621164257,"results":"113","hashOfConfig":"63"},{"size":183,"mtime":1623616668781,"results":"114","hashOfConfig":"63"},{"size":462,"mtime":1623688898549,"results":"115","hashOfConfig":"63"},{"size":403,"mtime":1623705160479,"results":"116","hashOfConfig":"63"},{"size":96,"mtime":1623703821831,"results":"117","hashOfConfig":"63"},{"size":930,"mtime":1623703545750,"results":"118","hashOfConfig":"63"},{"size":7379,"mtime":1624176734093,"results":"119","hashOfConfig":"63"},{"size":614,"mtime":1624447333438,"results":"120","hashOfConfig":"63"},{"size":614,"mtime":1624447378962,"results":"121","hashOfConfig":"63"},{"size":589,"mtime":1624447393849,"results":"122","hashOfConfig":"63"},{"size":371,"mtime":1624376014237,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"k0udef",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"126"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"126"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"126"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"126"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"126"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"126"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"126"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"126"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"126"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"126"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"126"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"126"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"126"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"126"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"126"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"126"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"126"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"126"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"126"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"126"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"126"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"126"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"126"},"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\index.js",[],["272","273"],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\App.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Menu.js",["274"],"import { Link } from 'react-router-dom'\r\nimport {useState, useEffect} from 'react'\r\nimport {RiSettings3Fill,RiFileList2Fill} from 'react-icons/ri'\r\nimport {GrStackOverflow} from 'react-icons/gr'\r\nimport {HiOutlineUsers} from 'react-icons/hi'\r\nimport './Menu.css'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nfunction Menu (props) {\r\n    const {classes} = props;\r\n    const initialState = {\r\n        item__1: false,\r\n        item__2: false,\r\n        item__3: false,\r\n        item__4: false\r\n    }\r\n\r\n    const [isClicked, setIsClicked] = useState(initialState);\r\n    const history = useHistory();\r\n\r\n    const handleClick = (e) => {\r\n           e.persist()\r\n           const field = e.currentTarget.id\r\n           setIsClicked(initialState)\r\n           setIsClicked(prevstate => ({...prevstate,\r\n               [field]: true\r\n           }))            \r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsClicked({item__2:true})\r\n    },[])\r\n\r\n    return (\r\n        <nav className={classes}>\r\n            \r\n            <ul className=\"menu\" >\r\n                <div className=\"menu__bubble\"></div>\r\n                <li id=\"item__1\" className={isClicked.item__1 ? \"menu__item move-up\" : \"menu__item\"} onClick={handleClick}>\r\n                    <Link className=\"menu__link\" to=\"/profile\">\r\n                        <RiSettings3Fill className=\"menu__icon\"/>\r\n                    </Link>\r\n                </li>\r\n                <li id=\"item__2\" className={isClicked.item__2 ? \"menu__item move-up\" : \"menu__item\"} onClick={handleClick}>\r\n                    <Link   id=\"item__2\" className=\"menu__link\" to=\"/decks\">\r\n                        <RiFileList2Fill className=\"menu__icon\"/>\r\n                    </Link>\r\n                </li>\r\n                <li id=\"item__3\"  className={isClicked.item__3 ? \"menu__item move-up\" : \"menu__item\"} onClick={handleClick}>\r\n                    <Link className=\"menu__link\" to=\"/cards\">\r\n                        <GrStackOverflow className=\"menu__icon\"/>\r\n                    </Link>\r\n                </li>\r\n                <li id=\"item__4\" className={isClicked.item__4 ? \"menu__item move-up\" : \"menu__item\"} onClick={handleClick}>\r\n                    <Link className=\"menu__link\" to=\"/gamers\">\r\n                        <HiOutlineUsers className=\"menu__icon\"/>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Menu;","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\layouts\\Footer.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\layouts\\Header.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Avatar.jsx",["275","276","277"],"import React, {useState, useEffect} from 'react';\r\nimport {AiOutlineUser} from 'react-icons/ai'\r\n\r\nfunction Avatar(props){\r\n    const {classes, url} = props;\r\n\r\n    return (\r\n        <>\r\n            {url ? \r\n                <img className={classes ?? \"avatar\"} src={url} /> \r\n                    : \r\n                <div className={classes ?? \"avatar\"}><AiOutlineUser /></div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Avatar;","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\LandingPage.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Logout.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\CardsPage.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\ProfilePage.jsx",["278"],"import React,{useState} from 'react';\r\nimport {HiUserCircle} from 'react-icons/hi';\r\nimport Button from '../components/Button';\r\nimport Main from '../layouts/Main';\r\n\r\n\r\n\r\nconst ProfileForm = () => {\r\n    const user = {\r\n        contact: {\r\n            id: 228,\r\n            gender: \"M\",\r\n            username: \"Pablo1803\",\r\n            firstname: \"Pablo\",\r\n            lastname: \"Escobar\",\r\n            email: \"plata.o.plomo@stayalive.fr\"\r\n        },\r\n        coordinates:{\r\n            city: \"Medelin\",\r\n            country: \"Colombie\"\r\n        }\r\n    }\r\n\r\n    const [userInfos,setUser] = useState(user);\r\n\r\n    const handleClick = () => {\r\n        return;\r\n    }\r\n\r\n\r\n    return (\r\n        <Main classes=\"profile__page\">\r\n                <form className=\"form\">\r\n                        <div className=\"profile__heading\">\r\n                            <HiUserCircle className=\"profile__avatar\"/>\r\n                            <h4 className=\"profile__username\">{userInfos.contact.username}</h4>\r\n                            <p className=\"profile__userid\">{userInfos.contact.id}</p>\r\n                        </div>\r\n                        <div className=\"form--section\">\r\n                            <h4 className=\"form__section--title\">Contact</h4>\r\n                            <div className=\"form__radio--group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"form__radio--button\">\r\n                                            <label className=\"form__radio--label\" htmlFor=\"gender\">F</label>\r\n                                            <input className=\"form--radio\" type=\"radio\" name=\"gender\" id=\"gender\" value=\"F\"/>\r\n                                        </div>\r\n                                        <div className=\"form__radio--button\">\r\n                                            <label className=\"form__radio--label\" htmlFor=\"gender\">M</label> \r\n                                            <input className=\"form--radio\"type=\"radio\" name=\"gender\" id=\"gender\" value=\"M\"/>\r\n                                        </div>\r\n                                        <div className=\"form__radio--button\">\r\n                                            <label className=\"form__radio--label\" htmlFor=\"gender\">Autre</label> \r\n                                            <input className=\"form--radio\"type=\"radio\" name=\"gender\" id=\"gender\" value=\"M\"/>\r\n                                        </div>\r\n                                    </div>\r\n                            </div>\r\n                            <input type=\"text\" className=\"form--input\" placeholder=\"firstname\" disabled value={userInfos.contact.firstname}/>\r\n                            <input type=\"text\" className=\"form--input\" placeholder=\"lastname\" disabled value={userInfos.contact.lastname}/>\r\n                            <input type=\"email\" className=\"form--input\" placeholder=\"email\" disabled value={userInfos.contact.email}/>\r\n                        </div>\r\n                        <div className=\"form--section\">\r\n                            <h4 className=\"form__section--title\">Coordinates</h4>\r\n                            <input type=\"text\" className=\"form--input\" placeholder=\"city\" disabled value={userInfos.coordinates.city}/>\r\n                            <input type=\"text\" className=\"form--input\" placeholder=\"country\" disabled value={userInfos.coordinates.country}/>\r\n                        </div>\r\n                        <div className=\"form--section\">\r\n                            <h4 className=\"form__section--title\">Préferences</h4>\r\n                            <input type=\"text\" className=\"form--input\" placeholder=\"username\" disabled/>  \r\n                            <input type=\"text\" className=\"form--input\" placeholder=\"username\" disabled/>  \r\n                            <input type=\"text\" className=\"form--input\" placeholder=\"username\" disabled/>  \r\n                            <input type=\"text\" className=\"form--input\" placeholder=\"username\" disabled/>  \r\n                        </div>\r\n                        <Button classes=\"btn\" text=\"update\" onClick={handleClick}/>\r\n                </form>\r\n            </Main>\r\n    )\r\n}\r\n\r\nexport default ProfileForm\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Navigation.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\DecksPage.jsx",["279","280","281","282","283","284"],"import React,{useEffect, useState, useLayoutEffect} from 'react';\r\n\r\n/* layout */\r\nimport Layout from '../layouts/Layout';\r\n\r\n/* api */\r\nimport { getUserDecks, getDecksByKingdoms} from '../api/Decks';\r\n\r\n/* components */\r\nimport Flash from '../components/Flash'\r\nimport Plus from '../components/Plus';\r\nimport List from '../components/List';\r\nimport Deck from '../components/Deck';\r\nimport Pagination from '../components/Pagination';\r\nimport Filters from '../components/Filters';\r\nimport Popup from '../components/Popup';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AiOutlineConsoleSql } from 'react-icons/ai';\r\n\r\nconst DecksPage = () => {\r\n\r\n    const [decksList, setDecksList] = useState({\r\n        code: 200,\r\n        message: []\r\n    });\r\n    const [flashState, setFlashState] = useState(null);\r\n    const [deleteResponse, setDeleteResponse] = useState({});\r\n    const [filterClicked, setFilter] = useState(true);\r\n    const [reqOpt, setReqOpt] = useState({\r\n        kingdoms: [],\r\n        mode: '',\r\n        page: 1,\r\n        size: 10,\r\n        order_by: 'id',\r\n        sens: 'asc'\r\n    });\r\n\r\n    const [checkboxes, setCheckBoxes] = useState([false, false, false, false,false,false,false]);\r\n\r\n    /* datas for popup form */\r\n    const popupDatas = {\r\n        \"List by kingdoms\": {\r\n            displayed: ['Poseidia', 'Eondra', 'Endless night', 'MetaScience', 'The light\\'s temple', 'Celestial purity', 'The saber\\'s way'],\r\n            values: [1, 2, 3, 4, 5, 6, 7],\r\n            field_name: 'kingdoms',\r\n            type: \"checkbox\",\r\n            onChange: (e) => {\r\n                setReqOpt(prevState => {\r\n                    let newObject = {...prevState};\r\n                    let newKingdomsArray = null;\r\n\r\n                    if(prevState.kingdoms instanceof Array){\r\n                        newKingdomsArray = [...prevState.kingdoms];\r\n                    }\r\n\r\n                    if(e.target.checked === true && !newKingdomsArray.includes(e.target.value)){\r\n\r\n                        if(prevState.mode === 'combination' || prevState.mode === ''){\r\n                            newKingdomsArray.push(e.target.value)\r\n                        }\r\n                        \r\n                        if(prevState.mode === 'unique'){\r\n                            newKingdomsArray = [e.target.value]\r\n                        }\r\n\r\n                    };\r\n\r\n                    if(e.target.checked === false) {\r\n                        let index = newKingdomsArray.indexOf(e.target.value);\r\n                        if(index > -1){\r\n                            newKingdomsArray.splice(index, 1);\r\n                        }\r\n                    }\r\n\r\n                    newObject.kingdoms = newKingdomsArray;\r\n                    newObject.order_by = 'kingdom'\r\n                    return newObject;\r\n                });\r\n            }\r\n        },\r\n        \"Order by\": {\r\n            displayed: ['Deck name' ,'Kingdom' ,'Total ec' , 'Num cards'],           \r\n            values: ['deck_name' ,'kingdom' ,'total_ec' , 'num_cards'],\r\n            type: \"radio\",\r\n            field_name: \"order_by\",\r\n            onChange: (e) => {\r\n                setReqOpt({...reqOpt, order_by: e.target.value});\r\n            }\r\n        },\r\n        \"Sens\": {\r\n            displayed: [\"Descendant\"],\r\n            values: [\"desc\"],\r\n            type: \"radio\",\r\n            field_name: \"sens\",\r\n            onChange: (e) => {\r\n                setReqOpt({...reqOpt, sens: e.target.value});\r\n            }\r\n        }\r\n    }\r\n\r\n    /* handle flash messages */\r\n    const handleFlash = (newFlashState) => {\r\n        setFlashState(newFlashState);\r\n    };\r\n\r\n    const handleDelete = (newState) => {\r\n        setDeleteResponse(newState)\r\n    }\r\n\r\n    /* handling fucntion for filter */\r\n    const handleClickFilter = (e, isVisible) => {\r\n        e.preventDefault();\r\n        setFilter(!isVisible);\r\n    } \r\n\r\n    /* handling functions for pagination */\r\n    const handlePage = async (e, newPage, options) => {\r\n        e.preventDefault();\r\n        if(newPage <= 0){\r\n            return;\r\n        }else{\r\n            setReqOpt({...options, page: newPage});  \r\n        }             \r\n    }\r\n\r\n    const handleSize = (e, newSize) => {\r\n        e.preventDefault();\r\n        setReqOpt({...reqOpt, size: newSize});\r\n    }\r\n\r\n    /* handling functions for popup */\r\n    const handleSelectPopup = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(e.target.value === 'unique'){\r\n            setReqOpt({...reqOpt, mode: 'unique'});\r\n        }\r\n\r\n        if(e.target.value === 'combination'){\r\n            setReqOpt({...reqOpt, mode:'combination'});\r\n        }\r\n\r\n        if(e.target.value === ''){\r\n            setReqOpt({...reqOpt, mode:''});\r\n        }\r\n    }\r\n\r\n    const handleClosePopup = (e) => {\r\n        e.preventDefault();\r\n        setFilter(true);\r\n    }\r\n\r\n    const handleResetPopup = (e) => {\r\n        setReqOpt({\r\n            kingdoms:[],\r\n            mode:'',\r\n            page: 1,\r\n            size: 10,\r\n            order_by: 'id',\r\n            sens: 'asc'\r\n        });\r\n        setFilter(true);\r\n    }\r\n\r\n    useEffect(async () => {\r\n        let response = null;\r\n        \r\n        if(reqOpt.kingdoms.length > 0){\r\n            response = await getDecksByKingdoms(reqOpt);\r\n        }else{\r\n            response = await getUserDecks(reqOpt);\r\n        }\r\n\r\n        if(response.code === 200){\r\n            setDecksList(response);\r\n        }else if(response.code !== 200 && decksList.message instanceof Array){\r\n            setDecksList([]);\r\n            setDeleteResponse(response);\r\n            setFlashState(true);\r\n        }else{\r\n            setFlashState(null);\r\n        }\r\n    },[reqOpt]);\r\n\r\n    useEffect(async () => {\r\n        let response = await getUserDecks(reqOpt);\r\n        setDecksList(response);\r\n    },[]);\r\n\r\n    if(decksList.message && decksList.message instanceof Array){\r\n        return (\r\n            <Layout>\r\n                <Filters containerClasses=\"filter__container row justify-end my-3\" isVisible={filterClicked} onClick={handleClickFilter}/>\r\n                <List classes=\"list__content layout layout__1\">\r\n                      { \r\n                        decksList.message.length > 0 ?\r\n                          decksList.message.map(elmt => {\r\n                                  return(\r\n                                      <Deck id={elmt.id} \r\n                                            title={elmt.deck_name} \r\n                                            description={elmt.description} \r\n                                            num_cards={elmt.num_cards} \r\n                                            total_ec={elmt.total_ec}\r\n                                            listState = {decksList}\r\n                                            listStateSetter = {setDecksList}\r\n                                            deleteState = {deleteResponse}\r\n                                            deleteStateSetter = {handleDelete}\r\n                                            handleFlash = {handleFlash}\r\n                                            reqOptState = {reqOpt}\r\n                                      />)\r\n                              }\r\n                          ) : \r\n                        <p style ={{color: \"black\",marginTop:\"auto\",marginBottom:\"auto\"}}>\r\n                            Empty \r\n                        </p>\r\n\r\n                        }r\n                </List>\r\n                <Flash \r\n                    classes=\"message__flash\" \r\n                    errorClass=\"message__flash-error\" \r\n                    successClass=\"message__flash-done\" \r\n                    message={deleteResponse.message ? deleteResponse.message : \"flash message\"}\r\n                    timing={750}\r\n                    flash={flashState}\r\n                    handleFlash= {handleFlash}\r\n                />\r\n                <Pagination \r\n                    options = {reqOpt}\r\n                    eventsToListen = {filterClicked}\r\n                    containerClasses = \"pagination__block my-3 mb-5 row justify-between\"\r\n                    containerTextBlockClasses = {\"pagination__text--block row justify-between\"} \r\n                    setPage={handlePage} \r\n                    setSize={handleSize} \r\n                    listSize={[10,20,40]}\r\n                    nextPage={reqOpt.kingdoms.length > 0 ? getDecksByKingdoms : getUserDecks}\r\n                />\r\n                <Plus to={'/decks/create'}/>\r\n                {\r\n                    filterClicked || \r\n                        <Popup\r\n                            mode = {reqOpt.mode}\r\n                            setOptions = {setReqOpt}\r\n                            datas={popupDatas}  \r\n                            buttonResetText=\"Reset\"\r\n                            checkboxesState = {checkboxes}\r\n                            setCheckBoxes = {setCheckBoxes}\r\n                            actionSelect = {handleSelectPopup}\r\n                            actionClose={handleClosePopup}\r\n                            actionReset={handleResetPopup}\r\n                        />\r\n                }\r\n              </Layout>\r\n      )\r\n    }else{\r\n        return (<Redirect to=\"/decks/not-found\"/>);\r\n    }\r\n}\r\n\r\n\r\nexport default DecksPage;\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\GamersPage.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\ErrorPage.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\SettingsDeckPage.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\SubscribePage.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\LoginPage.jsx",["285","286","287","288","289","290","291"],"import './LoginPage.css';\r\nimport {useState} from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport SocialButton from '../components/SocialButton';\r\nimport Separator from '../components/Separator'\r\nimport {FcGoogle} from 'react-icons/fc'\r\nimport {FaFacebookF} from 'react-icons/fa'\r\nimport AuthenticationContext from \"../contexts/Context\"\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\n\r\nfunction Login(props) {\r\n    const [usernameInput, setUsernameInput] = useState('');\r\n    const [passwordInput, setPasswordInput] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const usernameInputChange = (e) => {\r\n        setUsernameInput(e.target.value)\r\n    }\r\n\r\n    const passwordInputChange = (e) => {\r\n        setPasswordInput(e.target.value)\r\n    }\r\n\r\n    return (\r\n                <ul className=\"social__icons--list\">\r\n                    <li className=\"mb-3\">\r\n                        <SocialButton bgcolor=\"#395693\" url=\"https://test-seven.site/api/auth/facebook\">\r\n                            <FaFacebookF className=\"icons facebook__icon\"/>\r\n                            <span className=\"btn__social--text\">Login facebook</span> \r\n                        </SocialButton>\r\n                    </li>\r\n                    <li>\r\n                        <SocialButton bgcolor=\"#F7F7F7\" url=\"https://test-seven.site/api/auth/google\">\r\n                            <FcGoogle className=\"icons google__icon\" />\r\n                            <span className=\"btn__social--text\">Login Google</span>\r\n                        </SocialButton>\r\n                    </li>\r\n                </ul>\r\n            )\r\n\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\AddingDeckPage.jsx",["292"],"import React, {useState, useEffect} from 'react';\r\n\r\n/*api call*/\r\nimport {createUserDeck} from '../api/Decks';\r\n\r\n/*layout*/\r\nimport Layout from '../layouts/Layout';\r\n\r\n/*components*/\r\nimport InputText from '../components/InputText';\r\nimport CheckBox from '../components/CheckBox';\r\nimport BackButton from '../components/BackButton'\r\nimport NavButton from '../components/NavButton';\r\nimport Flash from '../components/Flash';\r\nimport {Link} from 'react-router-dom';\r\n\r\n/* Utilities */\r\nimport checkRegex from '../utilities/checkRegex';\r\n\r\n/*modules*/\r\nimport regexModule from '../modules/regex';\r\n\r\n\r\nconst AddingDeckPage = (props) => {\r\n\r\n    const [fieldValues, setFieldValues] = useState({\r\n        deck_name: '',\r\n        visibility: true\r\n    });\r\n\r\n    const [inputState, setInputState] = useState(true);\r\n    const [createState, setCreateState] = useState({});\r\n    const [flash, setFlash] = useState(null);\r\n    const [flashMessage, setFlashMessage] = useState(null);\r\n\r\n    const handleBlur = (e) => {\r\n        setFieldValues({...fieldValues, deck_name: e.target.value});\r\n        if(e.target.value.length > 0){\r\n            setInputState(false)\r\n        }else{\r\n            setInputState(true);\r\n        };\r\n    }\r\n\r\n    const handleCheck = (e) => {\r\n        setFieldValues({...fieldValues, visibility: e.target.checked});\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        setFieldValues({...fieldValues, deck_name: e.target.value});\r\n        setInputState(!checkRegex(regexModule.regex_deck_name, e.target.value))\r\n    }\r\n\r\n    const handleCreate = async (e) => {\r\n        e.preventDefault();\r\n        const form = new FormData();\r\n        form.append('deck_name', fieldValues.deck_name);\r\n        form.append('visibility', fieldValues.visibility);\r\n        let response = await createUserDeck(form);\r\n\r\n        if(response.code === 200){\r\n            setFlash(true);\r\n            setCreateState(response);\r\n            setFlashMessage(response.message[0].deck_name + \" created succesfully.\");\r\n            return true;\r\n        }else if(response.code !== 200){\r\n            setFlash(false);\r\n            setFlashMessage(response.message);\r\n            return false;\r\n        }else{\r\n            setFlash(null);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    const handleFlash = (newState) => {\r\n        setFlash(newState)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <form className=\"form\">\r\n                    <div className=\"form--section\">\r\n                        <h4 className=\"form__section--title\">Informations</h4>\r\n                        <InputText \r\n                            classes={inputState === true ? \"form--input bad__input\" : 'form--input good__input'} \r\n                            placeholder=\"Deck name\" onChange={handleInputChange} \r\n                            onBlur={handleBlur} \r\n                            value={fieldValues.deck_name}\r\n                        />\r\n                        <CheckBox \r\n                            id=\"visible\" \r\n                            name=\"visibility\" \r\n                            classes=\"form__checkbox\" \r\n                            text=\"public\" \r\n                            onChange={handleCheck} \r\n                            checked={fieldValues.visibility}\r\n                        />\r\n                        <Flash \r\n                            classes=\"message__flash\" \r\n                            errorClass=\"message__flash-error\" \r\n                            successClass=\"message__flash-done\" \r\n                            message={ flashMessage ? flashMessage : 'flash message'}\r\n                            flash={flash}\r\n                            timing={750}\r\n                            handleFlash = {handleFlash}\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <div className=\"buttons__block\">\r\n                    {createState.message ? \r\n                        <Link className=\"btn\" to={`/decks/${createState.message[0].id}/subdecks`}>Next</Link>\r\n                        :\r\n                        <NavButton text=\"Create\" \r\n                        url={`/decks/create`} \r\n                        onClick={handleCreate} \r\n                        timing={1000}\r\n                        />\r\n                    }\r\n                    <NavButton text=\"Import\" url={`/decks/new-deck/import`} onClick={handleCreate} timing={1000}/>\r\n                    <BackButton text=\"Back\" url=\"/decks\"/>\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddingDeckPage\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\ChoicePage.jsx",["293"],"import React,{useEffect, useReducer} from 'react'\r\nimport Button from '../components/Button'\r\nimport Main from '../layouts/Main'\r\nimport Header from '../layouts/Header'\r\n\r\n\r\n\r\nfunction reducer(state,action){\r\n    switch(action.type){\r\n        case 'STARTER_DECK':\r\n            return { choice:\"/cards/from/starter\"};\r\n        case 'INDIVIDUAL':\r\n            return { choice:\"/cards/from/individual\"};\r\n        case 'BACK':\r\n            return { choice:\"/cards\"};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst ChoicePage = (props) => {\r\n    const init = {choice: \"/cards/from\"}\r\n    const [isClicked, dispatch] = useReducer(reducer,init);\r\n    \r\n    const handleClick = (e,action) => {\r\n        e.preventDefault();\r\n        dispatch({type:action})\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.history.push(isClicked.choice);\r\n    }, [isClicked]) \r\n\r\n    return (        \r\n            <>\r\n                <Header>\r\n                    <h1>Choice :</h1>\r\n                </Header>\r\n                <Main>\r\n                    <div className=\"block\">\r\n                        <Button classes=\"btn\" text=\"Starter Deck\" onClick={(e) => handleClick(e,\"STARTER_DECK\")}/>\r\n                        <Button classes=\"btn\" text=\"Individual Card\" onClick={(e) => handleClick(e,\"INDIVIDUAL\")}/> \r\n                    </div>\r\n                    <Button classes=\"btn\" text=\"cancel\" onClick={(e) => handleClick(e,\"BACK\")}/>\r\n                </Main> \r\n            </>\r\n    )\r\n}\r\n\r\nexport default ChoicePage\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\StarterPage.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\DeckBuildOptions.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\DeckCreate.jsx",["294","295","296","297"],"import React,{useEffect, useLayoutEffect, useState} from 'react';\r\nimport {useParams, Link} from 'react-router-dom';\r\nimport { GiStack } from 'react-icons/gi';\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport { RiLoader3Line } from 'react-icons/ri';\r\n\r\n/* api */\r\nimport {getEden, createEden} from '../api/Eden.jsx';\r\nimport {getHolyBook, createHolyBook} from '../api/HolyBook.jsx';\r\nimport {getRegister, createRegister} from '../api/Register.jsx';\r\n\r\n/* layouts */\r\nimport Layout from '../layouts/Layout';\r\n\r\n/* components */\r\nimport Button from '../components/Button';\r\n\r\nconst DeckCreate = (props) => {\r\n    const { id } = useParams();\r\n    const [subdecks, setSubDecks] = useState({\r\n        eden: {\r\n            code: null,\r\n            message: null\r\n        },\r\n        register: {\r\n            code: null,\r\n            message: null\r\n        },\r\n        holybook: {\r\n            code: null,\r\n            message: null\r\n        }\r\n    });\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    const handleClickNav = async (e) => {\r\n        e.preventDefault();\r\n        let response = null;\r\n\r\n        if(e.target.id === 'eden'){\r\n            response = await createEden(id);\r\n            setSubDecks({...subdecks, eden: response});\r\n        }\r\n\r\n        if(e.target.id === 'register'){\r\n            response = await createRegister(id);\r\n            setSubDecks({...subdecks, register: response});\r\n        }\r\n\r\n        if(e.target.id === 'holybook'){\r\n            response = await createHolyBook(id);\r\n            setSubDecks({...subdecks, holybook: response});\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleDeleteSubdeck = async (e) => {\r\n        e.preventDefault();\r\n        return true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(subdecks)\r\n        \r\n    },[subdecks]);\r\n\r\n    useEffect(async () => {\r\n        let eden = await getEden(id);\r\n        let register = await getRegister(id);\r\n        let holybook = await getHolyBook(id);\r\n        let response = {};\r\n\r\n        if(eden.message){\r\n            response = {...response, eden: eden}\r\n        }\r\n\r\n        if(register.message){\r\n            response = {...response, register: register}\r\n        }\r\n\r\n        if(holybook.message){\r\n            response = {...response, holybook: holybook}\r\n        }\r\n\r\n        setSubDecks(response);\r\n    },[]);\r\n\r\n    return loaded === true ? (\r\n        <Layout>\r\n            {subdecks.eden.code === 200 ?\r\n                <div className=\"subdeck__box mb-5\">\r\n                    <div className=\"subdeck__heading py-2\">\r\n                        <h4 className=\"subdeck__type\">eden</h4>\r\n                    </div>\r\n                    <div className=\"subdeck__body row justify-between p-2\">\r\n                        <p className=\"subdeck__infos row align-center\">\r\n                            Num cards : {subdecks.eden.message.qty == undefined ? 0 : subdecks.eden.message.qty}\r\n                        </p>\r\n                        <div className=\"subdeck__icon--list row justify-between\">\r\n                            <Link to={`/decks/${id}/eden`}>\r\n                                <GiStack className=\"subdeck__icon\" />\r\n                            </Link>\r\n                            <AiFillDelete className=\"subdeck__icon\" onClick={handleDeleteSubdeck}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Button id=\"eden\" classes=\"btn mb-3\" text=\"create eden\" onClick={handleClickNav} />\r\n            }\r\n            {subdecks.register.code === 200 ?\r\n                <div className=\"subdeck__box mb-5\">\r\n                    <div className=\"subdeck__heading py-2\">\r\n                        <h4 className=\"subdeck__type\">register</h4>\r\n                    </div>\r\n                    <div className=\"subdeck__body row justify-between p-2\">\r\n                        <p className=\"subdeck__infos  row align-center\">\r\n                            Num cards : {subdecks.register.message.qty === undefined ? 0 : subdecks.register.message.qty}\r\n                        </p>\r\n                        <div className=\"subdeck__icon--list row justify-between\">\r\n                            <Link to={`/decks/${id}/register`}>\r\n                                <GiStack className=\"subdeck__icon\" />\r\n                            </Link>\r\n                            <AiFillDelete className=\"subdeck__icon\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Button id=\"register\" classes=\"btn mb-3\" text=\"create register\" onClick={handleClickNav}/>\r\n            }\r\n            {subdecks.holybook.code === 200 ?\r\n                <div className=\"subdeck__box\">\r\n                    <div className=\"subdeck__heading py-2\">\r\n                        <h4 className=\"subdeck__type\">holybook</h4>\r\n                    </div>\r\n                    <div className=\"subdeck__body row justify-between p-2\">\r\n                        <p className=\"subdeck__infos  row align-center\">\r\n                            Num cards : {subdecks.holybook.message.qty === undefined ? 0 : subdecks.holybook.message.qty }\r\n                        </p>\r\n                        <div className=\"subdeck__icon--list row justify-between\">\r\n                            <Link to={`/decks/${id}/holybook`}>\r\n                                <GiStack className=\"subdeck__icon\" />\r\n                            </Link>\r\n                            <AiFillDelete className=\"subdeck__icon\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Button id=\"holybook\" classes=\"btn\" text=\"create holybook\" onClick={handleClickNav}/>\r\n            }\r\n        </Layout>\r\n    )\r\n    :\r\n    (\r\n        <div className=\"loader__block row justify-center align-center\">\r\n            {\r\n                (\r\n                    subdecks.eden.code !== null || \r\n                    subdecks.register.code !== null ||\r\n                    subdecks.holybook.code !== null\r\n                ) \r\n                ? \r\n                setLoaded(true) \r\n                : \r\n                null\r\n            }\r\n            <RiLoader3Line className=\"loader\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeckCreate;\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\DeckImport.jsx",["298"],"import React from 'react';\r\n\r\nconst DeckImport = () => {\r\n    return null;\r\n}\r\n\r\nexport default DeckImport;","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\IndividualPage.jsx",["299"],"import React, {useState, useEffect} from 'react'\r\nimport List from '../components/List'\r\nimport Card from '../components/Card'\r\nimport Image from '../img/cards/framus.jpg'\r\nimport Button from '../components/Button'\r\nimport CardsContext from '../contexts/CardsContext'\r\nimport Header from '../layouts/Header'\r\nimport Main from '../layouts/Main'\r\n\r\n\r\nconst IndividualPage = (props) => {\r\n    const cards = [\r\n        {\r\n            id: 0,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 1,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 2,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 3,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 4,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 5,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 6,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 7,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 8,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        },\r\n        {\r\n            id: 9,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false\r\n        },\r\n        {\r\n            id: 10,\r\n            url: Image,\r\n            alt: \"Ceci est une carte\",\r\n            selected: false \r\n        }\r\n    ]\r\n    const [isSelected, setIsSelected] = useState(cards)\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        props.history.goBack();\r\n    }\r\n\r\n    const handleChange = (e, id) => {\r\n        setIsSelected(isSelected => {\r\n            const test = [...isSelected]\r\n            test[id].selected = e.target.checked\r\n            console.log(test)\r\n            return [...test];\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <CardsContext.Provider value={[isSelected,setIsSelected]}>\r\n        <Header classes=\"header\">\r\n            <h1>{props.location.pathname.split('/').pop()}</h1>\r\n        </Header>\r\n        <Main classes=\"page\">\r\n            <List classes={`layout layout__3 ${!isSelected.some(elmt => elmt.selected) ? \"mb-4\" : \"mb-1\"}`}>\r\n                {isSelected.map(elmt => <Card key={elmt.id} id={elmt.id} url={elmt.url} alt={elmt.alt} mode=\"edit\" onChange={(e) => handleChange(e,elmt.id)}/>)}\r\n            </List>\r\n            {isSelected.some(elmt => elmt.selected) ? <Button classes=\"btn\" text=\"add\"/> : ''}\r\n            <Button classes=\"btn\" text=\"cancel\" onClick={handleClick}/>\r\n        </Main>\r\n        </CardsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default IndividualPage\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\contexts\\Context.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\utilities\\VhInPixels.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Button.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Separator.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Filters.jsx",["300"],"import React, {useEffect} from 'react';\r\nimport {BsFilterRight} from 'react-icons/bs';\r\n\r\nfunction Filters(props){\r\n    const {containerClasses, onClick, isVisible} = props;\r\n\r\n    return (\r\n        <div className={containerClasses ?? \"filter__container\"} onClick={(e) => onClick(e, isVisible)}>\r\n            <BsFilterRight />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters;","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\layouts\\Main.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Plus.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Card.jsx",["301","302","303"],"import React,{useContext,useEffect} from 'react'\r\nimport './Card.css'\r\nimport CheckBox from './CheckBox'\r\nimport CardsContext from '../contexts/CardsContext'\r\n\r\n\r\nconst Card = (props) => {\r\n    const {id,url,alt,mode,onChange} = props\r\n\r\n    return (\r\n        <li className=\"card__container\" onChange={onChange}>\r\n            <img className=\"card__image\" src={url} alt={alt}/>\r\n            {mode === 'edit' ? <CheckBox id={id} classes=\"card__checkbox\"/> : ''} \r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\List.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Pagination.jsx",["304","305"],"import React, {useState, useEffect} from 'react';\r\nimport {BsChevronLeft,BsChevronRight} from 'react-icons/bs'\r\n\r\n\r\nfunction Pagination(props){\r\n    const {\r\n        options, \r\n        setPage, \r\n        setSize , \r\n        containerClasses,\r\n        containerTextBlockClasses, \r\n        leftClasses, \r\n        rightClasses, \r\n        textClasses, \r\n        listSize = [],\r\n        nextPage\r\n    } = props;\r\n\r\n    const [canNext, setCanNext] = useState(true);\r\n\r\n    useEffect(async () => {\r\n\r\n        let newObj = {...options};\r\n        newObj.page = options.page + 1;\r\n        let res = await nextPage(newObj);\r\n\r\n        if(res.code === 200 && res.message.length === 0){\r\n            setCanNext(false);\r\n        }else{\r\n            setCanNext(true);\r\n        }\r\n\r\n    },[options]);\r\n\r\n    return (\r\n        <div className={containerClasses ?? \"pagination__block\"} >\r\n            <div className={leftClasses ?? \"pagination__arrow\"} \r\n                 onClick={(e) => setPage(e, Number(options.page) - 1, options)}\r\n            >\r\n                <BsChevronLeft/>\r\n            </div>\r\n                <div className={containerTextBlockClasses ?? \"pagination__text--block\"}>\r\n                {\r\n                    listSize.map((elmt, index) => {\r\n                        return <p key={index} className={textClasses ?? \"pagination__text\"} onClick={(e) => setSize(e, elmt)}>{elmt}</p>\r\n                    })\r\n                }\r\n                </div>\r\n            <div className={rightClasses ?? \"pagination__arrow\"} \r\n                 onClick={canNext === true ? (e) => setPage(e, Number(options.page) + 1, options) : (e) => setPage(e, 1, options)}\r\n            >\r\n                <BsChevronRight/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\layouts\\Layout.jsx",["306"],"import React from 'react'\r\nimport Header from './Header'\r\nimport Main from './Main'\r\n\r\nconst layout = ({children}) => {\r\n        return (\r\n        <>\r\n           <Main classes=\"page\">\r\n               {children instanceof Array ? children.map((elmt, index) => {\r\n                   return elmt;\r\n                }) : ''}\r\n           </Main> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default layout\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Flash.jsx",["307"],"import React, {useState, useEffect} from 'react'\r\n\r\nfunction Flash(props){\r\n\r\n    const {message, classes, errorClass,flash ,successClass, timing, handleFlash} = props;\r\n    const [classesState, setClasses] = useState(classes);\r\n    let afterClasses = '';\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(flash === false){\r\n            setClasses(classes + ' ' + errorClass)\r\n            setTimeout(() => {\r\n                afterClasses = classes.replace(errorClass, '');\r\n                setClasses(afterClasses);\r\n            }, timing ? timing : 1000);\r\n\r\n        }\r\n\r\n        if(flash === true){\r\n            setClasses(classes + ' ' + successClass);\r\n            setTimeout(() => {\r\n                afterClasses = classes.replace(successClass, '');\r\n                setClasses(afterClasses);\r\n            }, timing ? timing : 1000);\r\n        }\r\n\r\n        handleFlash(null);\r\n\r\n    },[flash])\r\n\r\n    return(\r\n        <>\r\n            <p className={classesState}>{message}</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Flash;","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\User.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\SearchBar.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Deck.jsx",["308","309","310"],"import React, {useState, useEffect}from 'react';\r\nimport {deleteUserDeck, getUserDecks} from '../api/Decks';\r\nimport {AiFillCloseCircle} from 'react-icons/ai';\r\nimport {BsPencil} from 'react-icons/bs';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Deck = (props) => {\r\n    const {\r\n            id, \r\n            title,\r\n            total_ec, \r\n            description, \r\n            num_cards, \r\n            listState, \r\n            listStateSetter, \r\n            handleFlash, \r\n            deleteStateSetter, \r\n            reqOptState\r\n        } = props;\r\n\r\n    const [openModify, setOpenModify] = useState(false);\r\n    \r\n    const removeData = async () => {\r\n        let deleteResponse = await deleteUserDeck(id);\r\n        let getResponse = await getUserDecks(reqOptState);\r\n        \r\n        if(deleteResponse.code === 200){\r\n            handleFlash(true);\r\n        }else if(deleteResponse.code !== 200){\r\n            handleFlash(false);\r\n        }else{\r\n            handleFlash(null);\r\n        }\r\n        \r\n        listStateSetter(getResponse);\r\n        deleteStateSetter(deleteResponse);\r\n    }\r\n\r\n    const handleClick = (e, state, id) => {\r\n        e.preventDefault();\r\n        removeData();\r\n    }\r\n\r\n    const handleModify = (e) => {\r\n        e.preventDefault();\r\n        setOpenModify(true);\r\n    }\r\n    \r\n    return (\r\n        <li key={id} className=\"deck__block\">\r\n            <div className=\"deck__inner--left\">\r\n                <h3 className=\"deck__title\">{title}</h3>\r\n                <p className=\"deck__infos\">{description}</p>\r\n                <div className=\"deck__total\">Total : {num_cards}</div>\r\n            </div>\r\n            <div className=\"deck__inner--right\">\r\n                <div className=\"inner__right--text\">\r\n                    <h3 className=\"deck__ec--title\">Ec :</h3>\r\n                    <span className=\"deck__ec--value\">{total_ec}</span>\r\n                </div>\r\n                <div className=\"inner__right--actions\">\r\n                    <div className=\"action\" onClick={(e) => handleClick(e, listState, id)}><AiFillCloseCircle/></div>\r\n                    <Link className=\"action\" to={{\r\n                        pathname: `/decks/${id}/modify`,\r\n                        options:[\r\n                            [1, 'Poseidia'],\r\n                            [2, 'Eondra'],\r\n                            [3, 'Endless night'],\r\n                            [4, 'MetaScience'],\r\n                            [5, 'The light\\'s temple'],\r\n                            [6, 'Celestial purity'],\r\n                            [7, 'The saber\\'s way'],\r\n                        ],\r\n                        optionsName:'Kingdoms'\r\n                    }}><BsPencil/></Link>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Deck;\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\InputText.jsx",["311"],"import React from 'react'\r\n\r\nconst InputText = (props) => {\r\n    const search = text;\r\n\r\n    if(!props.onChange) props.onChange = () => {return};\r\n    if(!props.onBlur) props.onBlur = () => {return};\r\n\r\n    const {classes,placeholder,onChange,text,onBlur} = props;\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        onChange(e);\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        e.preventDefault();\r\n        onBlur(e);\r\n    } \r\n    return (\r\n        <input className={classes} type=\"text\" placeholder={placeholder} onBlur={handleBlur} onChange={handleChange} value={search} />\r\n    )\r\n}\r\n\r\nexport default InputText\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Popup.jsx",["312","313","314"],"import React,{ useEffect, useRef} from 'react';\r\nimport {AiFillCloseCircle} from 'react-icons/ai'\r\n\r\nfunction Popup(props) {\r\n\r\n    const {\r\n            datas, \r\n            buttonResetText, \r\n            actionClose, \r\n            actionReset, \r\n            actionSelect,\r\n            setCheckBoxes,\r\n            checkboxesState,\r\n            mode,\r\n        } = props;\r\n\r\n    const handleClickCheckBoxes = (e) => {\r\n        let checkboxes = null;\r\n\r\n        if(mode === 'unique'){\r\n            checkboxes = Array.from(document.getElementsByClassName('option__kingdom'));\r\n        }else{\r\n            checkboxes = Array.from(document.querySelectorAll('input[type=\"checkbox\"]')) \r\n        }\r\n\r\n        let checkBoxesState = [];\r\n        checkboxes.map(elmt => {\r\n            return checkBoxesState.push(elmt.checked);\r\n        });\r\n        setCheckBoxes(checkBoxesState);\r\n    }\r\n\r\n    return (\r\n        <div className=\"popup__container\">\r\n            <div className=\"popup__inner--container\">\r\n            <div className=\"popup__box\">\r\n                <form className=\"popup__form\" enctype=\"multipart/form-data\">\r\n                    <div className=\"popup__heading\">\r\n                        <div  className=\"popup__close\" onClick={e => actionClose(e)}>\r\n                            <AiFillCloseCircle />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"popup__form--section\" >\r\n                        <h4 className=\"popup__option--name\">Options for kingdoms</h4>\r\n                        <div className=\"popup__option--container\">\r\n                            <label className=\"popup__option--label\" htmlFor=\"options-select\">Set options :</label>\r\n                            <select id=\"popup__options--select\" name=\"kingdom-options-set\" onChange={actionSelect}>\r\n                                {mode === '' ?\r\n                                    <option value=\"\" selected>Default</option>\r\n                                    :\r\n                                    <option value=\"\">Default</option>\r\n                                }\r\n                                {mode === 'unique' ? \r\n                                    <option value=\"unique\" selected>Unique</option> \r\n                                    : \r\n                                    <option value=\"unique\" >Unique</option>\r\n                                }\r\n                                {mode === 'combination' ? \r\n                                    <option value=\"combination\" selected>Combination</option>\r\n                                    :\r\n                                    <option value=\"combination\">Combination</option>\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    {Object.keys(datas).map(title => {\r\n                        if(datas[title].type === \"checkbox\"){                            \r\n                            return (\r\n                                <div className=\"popup__form--section \" onClick={handleClickCheckBoxes} onChange={datas[title].onChange} >\r\n                                        <h4 className=\"popup__option--name\" >{title}</h4>\r\n                                        {datas[title].values.map((elmt, index) => {\r\n                                                    return (\r\n                                                        <div className=\"popup__option--container\">\r\n                                                            <label className=\"popup__option--label\" htmlFor={elmt}>{datas[title].displayed[index]}</label>\r\n                                                            <input id={elmt} \r\n                                                                   className={mode === 'unique' ? 'popup__option--input option__kingdom': \"popup__option--input\"} \r\n                                                                   type={mode === \"unique\" ? \"radio\" : \"checkbox\"} \r\n                                                                   name={datas[title].field_name} \r\n                                                                   checked={checkboxesState[index]} \r\n                                                                   value={elmt}\r\n                                                            />\r\n                                                        </div>\r\n                                                    )\r\n                                                \r\n                                            })}\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                        if(datas[title].type === \"radio\"){           \r\n                            return (\r\n                                <div className=\"popup__form--section\">\r\n                                    <h4 className=\"popup__option--name\">{title}</h4>\r\n                                        {datas[title].values.map((elmt,index)=> {\r\n                                                return (\r\n                                                    <div className=\"popup__option--container\">\r\n                                                        <label className=\"popup__option--label\" htmlFor={elmt}>{datas[title].displayed[index]}</label>                \r\n                                                        <input className=\"popup__option--input\" type=\"radio\" id={elmt} name={datas[title].field_name} onChange={datas[title].onChange} value={datas[title].values[index]}/>\r\n                                                    </div>\r\n                                                )\r\n                                        })}\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    })}\r\n                    <button type=\"reset\" className=\"btn popup__button\" onClick={actionReset}>{buttonResetText}</button>\r\n                </form>\r\n            </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Popup;\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\SocialButton.jsx",["315"],"import React from 'react'\r\nimport './SocialButton.css'\r\nconst SocialButton = (props) => {\r\n    const {onClick} = props;\r\n    return (\r\n        <a style={{backgroundColor:props.bgcolor}} href={props.url} className=\"btn btn__social\">\r\n            {props.children}\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default SocialButton;\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\CheckBox.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\contexts\\CardsContext.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Dropdown.jsx",[],["316","317"],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\NavButton.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\StarterDeck.jsx",["318"],"import React from 'react'\r\nimport {AiOutlineEye,AiOutlinePlusCircle} from 'react-icons/ai'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst StarterDeck = (props) => {\r\n    const {title, infos, EC, mode} = props;\r\n    return (\r\n        <li className=\"deck__block\">\r\n            <div className=\"deck__inner--left\">\r\n                <h3 className=\"deck__title\">{title}</h3>\r\n                <p className=\"deck__infos\">{infos}</p>\r\n            </div>\r\n            <div className=\"deck__inner--right\">\r\n                <div className=\"inner__right--text\">\r\n                    <h3 className=\"deck__ec--title\">EC :</h3>\r\n                    <span className=\"deck__ec--value\">{EC}</span>\r\n                </div>\r\n                <div className=\"inner__right--actions\">\r\n                    <div className=\"action\" ><AiOutlineEye/></div>\r\n                    <Link className=\"action\" to=\"/cards\"><AiOutlinePlusCircle/></Link>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default StarterDeck\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\BackButton.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\Decks.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\UserDefault.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Draw.jsx",[],["319","320"],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\utilities\\serialize.js",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Return.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\EmptyDecksList.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\utilities\\checkRegex.js",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\modules\\regex.js",["321","322","323","324"],"const regexModule = {\r\n    regex_order: /^[A-Za-z_]+$/,\r\n    regex_id: /^[1-9]{1}[0-9]{0,9}$/,\r\n    regex_username: /^[a-zA-Z_\\-#]{1}[a-zA-Z0-9_\\-]{4,31}$/,\r\n    regex_name:/^[a-zA-Z]{0,32}$/,\r\n    regex_start_with: /^[a-zA-Z_\\-#]{1}[a-zA-Z0-9_\\-#]{0,31}$/,\r\n    regex_name: /^[A-Za-z]{0,32}$/,\r\n    regex_gender: /(M|F|Other)/,\r\n    regex_email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n    regex_cards: /([1-9]{1}[0-9]{0,4}:[1-9]{1}[0-9]{0,4},{0,1})+/,\r\n    regex_qty: /^[1-9]{1}[0-9]{0,1}$/,\r\n    regex_kingdoms: /^([1-7]{1,1},{0,1}){1,7}[^,]$/,\r\n    regex_page: /^[1-9]{1}[0-9]{0,5}$/,\r\n    regex_page_size: /^[1-9]{1}[0-9]{0,5}$/,\r\n    regex_img: /^([A-Za-z]{3,16}(-[1-9]{1,8}){0,1}(\\.jpg|\\.svg){1,1}){1,1}$/,\r\n    regex_deck_name: /^[A-Za-z0-9_\\-#]{4}[A-Za-z0-9_\\-#\\s]{0,26}$/\r\n}\r\n\r\nexport default regexModule;","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\ModifyDeckPage.jsx",["325","326","327","328","329","330"],"\r\nimport {useEffect,useState, useRef} from 'react';\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\n\r\n/* layout parts */\r\nimport Main from '../layouts/Main';\r\n\r\n/* components */\r\nimport Button from '../components/Button';\r\nimport Flash from '../components/Flash';\r\nimport Return from '../components/Return';\r\n\r\n/* modules */\r\nimport regexModule from '../modules/regex';\r\n\r\n/* api*/\r\nimport { updateOne,getOne } from'../api/Decks.jsx';\r\n\r\n/* utilities */\r\nimport checkRegex from '../utilities/checkRegex';\r\nimport { serialize } from '../utilities/serialize';\r\n\r\nfunction ModifyDeckPage(props){\r\n\r\n    const {options, optionsName} = props.location;\r\n    const [deckInfos, setDeckInfos] = useState({});\r\n    const [flashState, setFlashState] = useState(null);\r\n    const [response, setResponse] = useState('');\r\n    const deckName = useRef(null);\r\n    let { id } = useParams();\r\n\r\n    /* handling functions */\r\n\r\n    const handleFlash = (newFlashState) => {\r\n        setFlashState(newFlashState);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'kingdoms'){\r\n            if(e.target.checked === true){\r\n                setDeckInfos(prevState => {\r\n                    let newArr = prevState.kingdom === null ? [Number(e.target.id)] : [...prevState.kingdom, Number(e.target.id)];\r\n                    const newSet = new Set(newArr);\r\n                    newArr = Array.from(newSet);\r\n                    return {\r\n                        ...prevState,\r\n                        kingdom: newArr.sort()\r\n                    };\r\n                });\r\n            }\r\n            \r\n            if(e.target.checked === false){\r\n                setDeckInfos(prevState => {\r\n                    let newArr = [...prevState.kingdom];\r\n                    const index = newArr.indexOf(Number(e.target.value));\r\n                    if(index > -1){\r\n                        newArr.splice(index, 1);\r\n                    }\r\n\r\n                    return {\r\n                        ...prevState,\r\n                        kingdom: newArr.sort()\r\n                    }\r\n\r\n                })\r\n            }\r\n        }\r\n        \r\n        if(e.target.id === 'deck_name'){\r\n            setDeckInfos({...deckInfos, deck_name: e.target.value})\r\n        }\r\n\r\n        if(e.target.id === 'description'){\r\n            setDeckInfos({...deckInfos, description: e.target.value});\r\n        }\r\n\r\n        if(e.target.id === 'isVisible'){\r\n            setDeckInfos({...deckInfos, is_visible: e.target.checked});\r\n        }\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        if(e.target.id === 'deck_name'){\r\n            setDeckInfos({...deckInfos, deck_name: e.target.value});\r\n        }\r\n    }   \r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        let form = new FormData();\r\n        Object.keys(deckInfos).map(elmt => {\r\n            if(elmt === 'kingdom'){\r\n                form.append(elmt, serialize(deckInfos.kingdom));\r\n            }else{\r\n                form.append(elmt, deckInfos[elmt]);\r\n            }\r\n        });\r\n\r\n        let updateRes = await updateOne(form, id);\r\n            setResponse(updateRes);\r\n        if(updateRes.code === 200){\r\n            setFlashState(true);\r\n        }else if(updateRes.code !== 200){\r\n            setFlashState(false);\r\n        }else{\r\n            setFlashState(null)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        if(checkRegex(regexModule.regex_deck_name, deckName.current.value) === true){\r\n            deckName.current.classList.add('good__input');\r\n        }\r\n\r\n        if(checkRegex(regexModule.regex_deck_name, deckName.current.value) === false){\r\n            deckName.current.classList.add('bad__input');\r\n        }\r\n\r\n        return () => {\r\n            if(deckName.current.classList.contains('good__input')){\r\n                deckName.current.classList.remove('good__input');\r\n            };\r\n\r\n            if(deckName.current.classList.contains('bad__input')){\r\n                deckName.current.classList.remove('bad__input');\r\n            };\r\n        }\r\n    }, [deckInfos.deck_name]);\r\n\r\n    useEffect(async () => {\r\n        let res = await getOne(id);\r\n        if(res.code === 200){\r\n            setDeckInfos(res.message);\r\n        }else{\r\n            setFlashState(false);\r\n            setResponse(res);\r\n        }\r\n    },[]);\r\n\r\n    return (\r\n        <Main classes=\"page page__deck\">\r\n            <form className=\"form\" onChange={handleChange} onBlur={handleBlur}>\r\n                <div className=\"form--section column\">\r\n                    <input id=\"deck_name\" className=\"form--input mb-2\" ref={deckName} type=\"text\" placeholder=\"deck name\" value={deckInfos.deck_name}/>\r\n                    <p className=\"row justify-start mb-1\" >Cards number : {deckInfos.num_cards}</p>\r\n                    <p className=\"row jsutify-start mb-2\">Total Celestian energy : {deckInfos.total_ec}</p>\r\n                    {options && options instanceof Array ?\r\n                        <fieldset className=\"pb-2 mb-2\">\r\n                            <legend className=\"px-2\">{optionsName}</legend>\r\n                            <ul id=\"kingdoms__list\" className=\"column\">\r\n                                {\r\n                                    options.map(elmt => ( \r\n                                            <li key={elmt[0]} className=\"row justify-between\">\r\n                                                <label className=\"form__label\" htmlFor={elmt[0]}>{elmt[1]}</label>\r\n                                                <input \r\n                                                       id={elmt[0]} \r\n                                                       className=\"form__checkbox\" \r\n                                                       type=\"checkbox\" \r\n                                                       name=\"kingdoms\"\r\n                                                       checked ={ deckInfos.kingdom && deckInfos.kingdom.includes(elmt[0])}\r\n                                                       value={elmt[0]}\r\n                                                />\r\n                                            </li> \r\n                                        )\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </fieldset>\r\n                        :\r\n                        null\r\n                    }\r\n                    <div className=\"form__option--block row mb-2\">\r\n                        <label className=\"form__label mr-2\" htmlFor=\"isVisible\">Public</label>\r\n                        <input id=\"isVisible\" className=\"form__checkbox\" type=\"checkbox\" checked={deckInfos.is_visible}/>\r\n                    </div>\r\n                    <textarea id=\"description\" className=\"form__textarea\" placeholder=\"description\" value={deckInfos.description}/>\r\n                </div>\r\n                <Button onClick={handleClick} text=\"update\" />\r\n            </form>\r\n            <Flash \r\n                classes=\"message__flash\" \r\n                errorClass=\"message__flash-error\" \r\n                successClass=\"message__flash-done\" \r\n                message={response.message ? response.message : \"flash message\"}\r\n                timing={750}\r\n                flash={flashState}\r\n                handleFlash={handleFlash}\r\n            />\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default ModifyDeckPage;","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\Register.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\HolyBook.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\Eden.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\SubDeckPage.jsx",["331","332"],"import {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nfunction SubDeckPage(props){\r\n\r\n    let {id} = useParams();\r\n    let endUrl = props.location.pathname.split('/');\r\n    endUrl = endUrl[endUrl.length - 1];\r\n\r\n    return (\r\n        <h1 className=\"title\">Welcome in deck {id} in {endUrl}</h1>\r\n    )\r\n}\r\n\r\nexport default SubDeckPage;",{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","replacedBy":"336"},{"ruleId":"337","severity":1,"message":"338","line":21,"column":11,"nodeType":"339","messageId":"340","endLine":21,"endColumn":18},{"ruleId":"337","severity":1,"message":"341","line":1,"column":16,"nodeType":"339","messageId":"340","endLine":1,"endColumn":24},{"ruleId":"337","severity":1,"message":"342","line":1,"column":26,"nodeType":"339","messageId":"340","endLine":1,"endColumn":35},{"ruleId":"343","severity":1,"message":"344","line":10,"column":17,"nodeType":"345","endLine":10,"endColumn":66},{"ruleId":"337","severity":1,"message":"346","line":24,"column":22,"nodeType":"339","messageId":"340","endLine":24,"endColumn":29},{"ruleId":"337","severity":1,"message":"347","line":1,"column":36,"nodeType":"339","messageId":"340","endLine":1,"endColumn":51},{"ruleId":"337","severity":1,"message":"348","line":18,"column":10,"nodeType":"339","messageId":"340","endLine":18,"endColumn":29},{"ruleId":"349","severity":1,"message":"350","line":165,"column":15,"nodeType":"351","endLine":183,"endColumn":6},{"ruleId":"349","severity":1,"message":"352","line":183,"column":7,"nodeType":"353","endLine":183,"endColumn":15,"suggestions":"354"},{"ruleId":"349","severity":1,"message":"350","line":185,"column":15,"nodeType":"351","endLine":188,"endColumn":6},{"ruleId":"349","severity":1,"message":"355","line":188,"column":7,"nodeType":"353","endLine":188,"endColumn":9,"suggestions":"356"},{"ruleId":"337","severity":1,"message":"357","line":5,"column":8,"nodeType":"339","messageId":"340","endLine":5,"endColumn":17},{"ruleId":"337","severity":1,"message":"358","line":8,"column":8,"nodeType":"339","messageId":"340","endLine":8,"endColumn":29},{"ruleId":"337","severity":1,"message":"359","line":14,"column":12,"nodeType":"339","messageId":"340","endLine":14,"endColumn":25},{"ruleId":"337","severity":1,"message":"360","line":15,"column":12,"nodeType":"339","messageId":"340","endLine":15,"endColumn":25},{"ruleId":"337","severity":1,"message":"338","line":17,"column":11,"nodeType":"339","messageId":"340","endLine":17,"endColumn":18},{"ruleId":"337","severity":1,"message":"361","line":19,"column":11,"nodeType":"339","messageId":"340","endLine":19,"endColumn":30},{"ruleId":"337","severity":1,"message":"362","line":23,"column":11,"nodeType":"339","messageId":"340","endLine":23,"endColumn":30},{"ruleId":"337","severity":1,"message":"342","line":1,"column":26,"nodeType":"339","messageId":"340","endLine":1,"endColumn":35},{"ruleId":"349","severity":1,"message":"363","line":32,"column":8,"nodeType":"353","endLine":32,"endColumn":19,"suggestions":"364"},{"ruleId":"337","severity":1,"message":"347","line":1,"column":26,"nodeType":"339","messageId":"340","endLine":1,"endColumn":41},{"ruleId":"349","severity":1,"message":"350","line":68,"column":15,"nodeType":"351","endLine":87,"endColumn":6},{"ruleId":"349","severity":1,"message":"365","line":87,"column":7,"nodeType":"353","endLine":87,"endColumn":9,"suggestions":"366"},{"ruleId":"367","severity":1,"message":"368","line":98,"column":68,"nodeType":"369","messageId":"370","endLine":98,"endColumn":70},{"ruleId":"337","severity":1,"message":"371","line":1,"column":8,"nodeType":"339","messageId":"340","endLine":1,"endColumn":13},{"ruleId":"337","severity":1,"message":"342","line":1,"column":26,"nodeType":"339","messageId":"340","endLine":1,"endColumn":35},{"ruleId":"337","severity":1,"message":"342","line":1,"column":16,"nodeType":"339","messageId":"340","endLine":1,"endColumn":25},{"ruleId":"337","severity":1,"message":"372","line":1,"column":15,"nodeType":"339","messageId":"340","endLine":1,"endColumn":25},{"ruleId":"337","severity":1,"message":"342","line":1,"column":26,"nodeType":"339","messageId":"340","endLine":1,"endColumn":35},{"ruleId":"337","severity":1,"message":"373","line":4,"column":8,"nodeType":"339","messageId":"340","endLine":4,"endColumn":20},{"ruleId":"349","severity":1,"message":"350","line":21,"column":15,"nodeType":"351","endLine":33,"endColumn":6},{"ruleId":"349","severity":1,"message":"374","line":33,"column":7,"nodeType":"353","endLine":33,"endColumn":16,"suggestions":"375"},{"ruleId":"337","severity":1,"message":"376","line":2,"column":8,"nodeType":"339","messageId":"340","endLine":2,"endColumn":14},{"ruleId":"349","severity":1,"message":"377","line":15,"column":32,"nodeType":"378","endLine":15,"endColumn":63},{"ruleId":"337","severity":1,"message":"342","line":1,"column":26,"nodeType":"339","messageId":"340","endLine":1,"endColumn":35},{"ruleId":"337","severity":1,"message":"379","line":21,"column":12,"nodeType":"339","messageId":"340","endLine":21,"endColumn":22},{"ruleId":"337","severity":1,"message":"380","line":44,"column":11,"nodeType":"339","messageId":"340","endLine":44,"endColumn":23},{"ruleId":"381","severity":1,"message":"382","line":4,"column":20,"nodeType":"339","messageId":"383","endLine":4,"endColumn":24},{"ruleId":"337","severity":1,"message":"342","line":1,"column":16,"nodeType":"339","messageId":"340","endLine":1,"endColumn":25},{"ruleId":"337","severity":1,"message":"384","line":1,"column":27,"nodeType":"339","messageId":"340","endLine":1,"endColumn":33},{"ruleId":"385","severity":1,"message":"386","line":66,"column":51,"nodeType":"351","messageId":"387","endLine":66,"endColumn":53},{"ruleId":"337","severity":1,"message":"388","line":4,"column":12,"nodeType":"339","messageId":"340","endLine":4,"endColumn":19},{"ruleId":"333","replacedBy":"389"},{"ruleId":"335","replacedBy":"390"},{"ruleId":"337","severity":1,"message":"391","line":6,"column":30,"nodeType":"339","messageId":"340","endLine":6,"endColumn":34},{"ruleId":"333","replacedBy":"392"},{"ruleId":"335","replacedBy":"393"},{"ruleId":"394","severity":1,"message":"395","line":4,"column":49,"nodeType":"396","messageId":"397","endLine":4,"endColumn":50,"suggestions":"398"},{"ruleId":"399","severity":1,"message":"400","line":7,"column":5,"nodeType":"401","messageId":"370","endLine":7,"endColumn":15},{"ruleId":"394","severity":1,"message":"402","line":9,"column":28,"nodeType":"396","messageId":"397","endLine":9,"endColumn":29,"suggestions":"403"},{"ruleId":"394","severity":1,"message":"402","line":9,"column":53,"nodeType":"396","messageId":"397","endLine":9,"endColumn":54,"suggestions":"404"},{"ruleId":"337","severity":1,"message":"405","line":3,"column":21,"nodeType":"339","messageId":"340","endLine":3,"endColumn":29},{"ruleId":"337","severity":1,"message":"406","line":11,"column":8,"nodeType":"339","messageId":"340","endLine":11,"endColumn":14},{"ruleId":"385","severity":1,"message":"407","line":91,"column":41,"nodeType":"351","messageId":"408","endLine":91,"endColumn":43},{"ruleId":"349","severity":1,"message":"409","line":126,"column":26,"nodeType":"339","endLine":126,"endColumn":33},{"ruleId":"349","severity":1,"message":"350","line":131,"column":15,"nodeType":"351","endLine":139,"endColumn":6},{"ruleId":"349","severity":1,"message":"365","line":139,"column":7,"nodeType":"353","endLine":139,"endColumn":9,"suggestions":"410"},{"ruleId":"337","severity":1,"message":"342","line":1,"column":9,"nodeType":"339","messageId":"340","endLine":1,"endColumn":18},{"ruleId":"337","severity":1,"message":"341","line":1,"column":20,"nodeType":"339","messageId":"340","endLine":1,"endColumn":28},"no-native-reassign",["411"],"no-negated-in-lhs",["412"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setUser' is assigned a value but never used.","'useLayoutEffect' is defined but never used.","'AiOutlineConsoleSql' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'decksList.message'. Either include it or remove the dependency array.","ArrayExpression",["413"],"React Hook useEffect has a missing dependency: 'reqOpt'. Either include it or remove the dependency array.",["414"],"'Separator' is defined but never used.","'AuthenticationContext' is defined but never used.","'usernameInput' is assigned a value but never used.","'passwordInput' is assigned a value but never used.","'usernameInputChange' is assigned a value but never used.","'passwordInputChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["415"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["416"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'React' is defined but never used.","'useContext' is defined but never used.","'CardsContext' is defined but never used.","React Hook useEffect has a missing dependency: 'nextPage'. Either include it or remove the dependency array.",["417"],"'Header' is defined but never used.","Assignments to the 'afterClasses' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'openModify' is assigned a value but never used.","'handleModify' is assigned a value but never used.","no-use-before-define","'text' was used before it was defined.","usedBeforeDefined","'useRef' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'onClick' is assigned a value but never used.",["411"],["412"],"'mode' is assigned a value but never used.",["411"],["412"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["418","419"],"no-dupe-keys","Duplicate key 'regex_name'.","ObjectExpression","Unnecessary escape character: \\[.",["420","421"],["422","423"],"'Redirect' is defined but never used.","'Return' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","The ref value 'deckName.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'deckName.current' to a variable inside the effect, and use that variable in the cleanup function.",["424"],"no-global-assign","no-unsafe-negation",{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"messageId":"435","fix":"436","desc":"437"},{"messageId":"438","fix":"439","desc":"440"},{"messageId":"435","fix":"441","desc":"437"},{"messageId":"438","fix":"442","desc":"440"},{"messageId":"435","fix":"443","desc":"437"},{"messageId":"438","fix":"444","desc":"440"},{"desc":"431","fix":"445"},"Update the dependencies array to be: [decksList.message, reqOpt]",{"range":"446","text":"447"},"Update the dependencies array to be: [reqOpt]",{"range":"448","text":"449"},"Update the dependencies array to be: [isClicked, props.history]",{"range":"450","text":"451"},"Update the dependencies array to be: [id]",{"range":"452","text":"453"},"Update the dependencies array to be: [nextPage, options]",{"range":"454","text":"455"},"removeEscape",{"range":"456","text":"457"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"458","text":"459"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"460","text":"457"},{"range":"461","text":"459"},{"range":"462","text":"457"},{"range":"463","text":"459"},{"range":"464","text":"453"},[5682,5690],"[decksList.message, reqOpt]",[5816,5818],"[reqOpt]",[852,863],"[isClicked, props.history]",[2342,2344],"[id]",[773,782],"[nextPage, options]",[144,145],"",[144,144],"\\",[357,358],[357,357],[382,383],[382,382],[4323,4325]]