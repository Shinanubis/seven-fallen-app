[{"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\index.js":"1","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\App.jsx":"2","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Menu.js":"3","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\layouts\\Footer.jsx":"4","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\layouts\\Header.jsx":"5","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\LandingPage.jsx":"6","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Avatar.jsx":"7","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Navigation.jsx":"8","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Logout.jsx":"9","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\DecksPage.jsx":"10","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\CardsPage.jsx":"11","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\GamersPage.jsx":"12","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\ProfilePage.jsx":"13","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\ErrorPage.jsx":"14","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\LoginPage.jsx":"15","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\SettingsDeckPage.jsx":"16","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\SubscribePage.jsx":"17","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\IndividualPage.jsx":"18","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\StarterPage.jsx":"19","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\DeckBuildOptions.jsx":"20","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\ChoicePage.jsx":"21","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\AddingDeckPage.jsx":"22","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\DeckImport.jsx":"23","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\EmptyDecksList.jsx":"24","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\DeckCreate.jsx":"25","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\SubDeckPage.jsx":"26","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\utilities\\VhInPixels.jsx":"27","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\ModifyDeckPage.jsx":"28","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\CardsWareHouse.jsx":"29","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\AddingSubDecksPage.jsx":"30","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\holyBook.jsx":"31","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\Register.jsx":"32","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\Decks.jsx":"33","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\Eden.jsx":"34","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\HolyBook.jsx":"35","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\utilities\\serialize.js":"36","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\utilities\\checkRegex.js":"37","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\modules\\regex.js":"38","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\hooks\\useWindowSize.js":"39","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Button.jsx":"40","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\layouts\\Layout.jsx":"41","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Flash.jsx":"42","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Plus.jsx":"43","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Deck.jsx":"44","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\List.jsx":"45","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Filters.jsx":"46","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Pagination.jsx":"47","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Popup.jsx":"48","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\layouts\\Main.jsx":"49","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Card.jsx":"50","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\User.jsx":"51","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\SearchBar.jsx":"52","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\Profile.jsx":"53","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Loader.jsx":"54","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\SocialButton.jsx":"55","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Toolbar.jsx":"56","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\AddCard.jsx":"57","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\PopupContainer.jsx":"58","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\NavButton.jsx":"59","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Return.jsx":"60","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\CheckBox.jsx":"61","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\BackButton.jsx":"62","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\InputText.jsx":"63","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\StarterDeck.jsx":"64","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\contexts\\CardsContext.jsx":"65","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\UserDefault.jsx":"66","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\InfiniteList.jsx":"67","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\HOC\\withInfiniteScroll.jsx":"68","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\InfiniteListTwo.jsx":"69","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Cards__toolbox\\CardsCounter.jsx":"70","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\InfiniteListThree.jsx":"71"},{"size":181,"mtime":1624654701747,"results":"72","hashOfConfig":"73"},{"size":4766,"mtime":1625428821269,"results":"74","hashOfConfig":"73"},{"size":2336,"mtime":1624650526792,"results":"75","hashOfConfig":"73"},{"size":226,"mtime":1623392405807,"results":"76","hashOfConfig":"73"},{"size":233,"mtime":1622979422383,"results":"77","hashOfConfig":"73"},{"size":494,"mtime":1624652388789,"results":"78","hashOfConfig":"73"},{"size":432,"mtime":1624484612944,"results":"79","hashOfConfig":"73"},{"size":581,"mtime":1624650656606,"results":"80","hashOfConfig":"73"},{"size":339,"mtime":1623390092898,"results":"81","hashOfConfig":"73"},{"size":10928,"mtime":1625734648882,"results":"82","hashOfConfig":"73"},{"size":3460,"mtime":1623316018855,"results":"83","hashOfConfig":"73"},{"size":3848,"mtime":1623316196234,"results":"84","hashOfConfig":"73"},{"size":17382,"mtime":1625312826958,"results":"85","hashOfConfig":"73"},{"size":172,"mtime":1617435746842,"results":"86","hashOfConfig":"73"},{"size":1149,"mtime":1625152705400,"results":"87","hashOfConfig":"73"},{"size":375,"mtime":1617052941944,"results":"88","hashOfConfig":"73"},{"size":1821,"mtime":1622724923335,"results":"89","hashOfConfig":"73"},{"size":3130,"mtime":1624485285822,"results":"90","hashOfConfig":"73"},{"size":2124,"mtime":1617483658069,"results":"91","hashOfConfig":"73"},{"size":604,"mtime":1622133438571,"results":"92","hashOfConfig":"73"},{"size":1510,"mtime":1617536324299,"results":"93","hashOfConfig":"73"},{"size":4584,"mtime":1624652488945,"results":"94","hashOfConfig":"73"},{"size":77,"mtime":1624485158736,"results":"95","hashOfConfig":"73"},{"size":403,"mtime":1623705160479,"results":"96","hashOfConfig":"73"},{"size":7323,"mtime":1626092289384,"results":"97","hashOfConfig":"73"},{"size":5079,"mtime":1625309743256,"results":"98","hashOfConfig":"73"},{"size":347,"mtime":1617020600131,"results":"99","hashOfConfig":"73"},{"size":12243,"mtime":1626092320770,"results":"100","hashOfConfig":"73"},{"size":3861,"mtime":1626358210134,"results":"101","hashOfConfig":"73"},{"size":6553,"mtime":1626440778939,"results":"102","hashOfConfig":"73"},{"size":1232,"mtime":1624491161271,"results":"103","hashOfConfig":"73"},{"size":1232,"mtime":1624491082910,"results":"104","hashOfConfig":"73"},{"size":3067,"mtime":1624287063341,"results":"105","hashOfConfig":"73"},{"size":1209,"mtime":1625760509281,"results":"106","hashOfConfig":"73"},{"size":1232,"mtime":1624491161271,"results":"107","hashOfConfig":"73"},{"size":183,"mtime":1623616668781,"results":"108","hashOfConfig":"73"},{"size":96,"mtime":1623703821831,"results":"109","hashOfConfig":"73"},{"size":932,"mtime":1624624473189,"results":"110","hashOfConfig":"73"},{"size":559,"mtime":1625471732461,"results":"111","hashOfConfig":"73"},{"size":646,"mtime":1624810541177,"results":"112","hashOfConfig":"73"},{"size":454,"mtime":1625734573145,"results":"113","hashOfConfig":"73"},{"size":1021,"mtime":1625141524480,"results":"114","hashOfConfig":"73"},{"size":266,"mtime":1622982330724,"results":"115","hashOfConfig":"73"},{"size":2073,"mtime":1625402608306,"results":"116","hashOfConfig":"73"},{"size":222,"mtime":1625477580564,"results":"117","hashOfConfig":"73"},{"size":366,"mtime":1624484854132,"results":"118","hashOfConfig":"73"},{"size":1777,"mtime":1624051172461,"results":"119","hashOfConfig":"73"},{"size":6043,"mtime":1624274835361,"results":"120","hashOfConfig":"73"},{"size":202,"mtime":1622980965627,"results":"121","hashOfConfig":"73"},{"size":413,"mtime":1626088985068,"results":"122","hashOfConfig":"73"},{"size":788,"mtime":1617439342640,"results":"123","hashOfConfig":"73"},{"size":495,"mtime":1617279230308,"results":"124","hashOfConfig":"73"},{"size":1745,"mtime":1624905666489,"results":"125","hashOfConfig":"73"},{"size":490,"mtime":1624483035678,"results":"126","hashOfConfig":"73"},{"size":319,"mtime":1618754080315,"results":"127","hashOfConfig":"73"},{"size":717,"mtime":1625348962453,"results":"128","hashOfConfig":"73"},{"size":334,"mtime":1625429780697,"results":"129","hashOfConfig":"73"},{"size":311,"mtime":1624532562765,"results":"130","hashOfConfig":"73"},{"size":696,"mtime":1624370615523,"results":"131","hashOfConfig":"73"},{"size":462,"mtime":1623688898549,"results":"132","hashOfConfig":"73"},{"size":418,"mtime":1622729878843,"results":"133","hashOfConfig":"73"},{"size":460,"mtime":1622895813079,"results":"134","hashOfConfig":"73"},{"size":641,"mtime":1622735634942,"results":"135","hashOfConfig":"73"},{"size":1017,"mtime":1617439696328,"results":"136","hashOfConfig":"73"},{"size":107,"mtime":1617449661298,"results":"137","hashOfConfig":"73"},{"size":213,"mtime":1617218149183,"results":"138","hashOfConfig":"73"},{"size":2223,"mtime":1625671245025,"results":"139","hashOfConfig":"73"},{"size":721,"mtime":1625485764357,"results":"140","hashOfConfig":"73"},{"size":4566,"mtime":1626277672279,"results":"141","hashOfConfig":"73"},{"size":228,"mtime":1626177080458,"results":"142","hashOfConfig":"73"},{"size":2841,"mtime":1626439095794,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},"k0udef",{"filePath":"147","messages":"148","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"146"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"146"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"146"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"146"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"146"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"146"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"146"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"146"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"146"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"146"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"146"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"146"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"146"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"146"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"146"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"146"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"271"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"146"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"146"},"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\index.js",[],["307","308"],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\App.jsx",["309","310","311","312","313","314","315","316","317","318"],"import { useEffect } from 'react'\n\n//Layout element import\nimport Footer from'./layouts/Footer';\nimport Menu from './components/Menu';\n\n//Settings import\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n//Components imports\nimport Navigation from './components/Navigation';\nimport Header from './layouts/Header';\nimport Avatar from './components/Avatar';\nimport Logout from './components/Logout';\n\n// Pages import\nimport LandingPage from './pages/LandingPage';\nimport DecksPage from './pages/DecksPage';\nimport CardsPage from './pages/CardsPage';\nimport ProfilePage from './pages/ProfilePage';\nimport GamersPage from './pages/GamersPage';\nimport ErrorPage from './pages/ErrorPage';\nimport LoginPage from './pages/LoginPage';\nimport SettingsDeckPage from './pages/SettingsDeckPage';\nimport AddingDeckPage from './pages/AddingDeckPage';\nimport ChoicePage from './pages/ChoicePage';\nimport SubscribePage from './pages/SubscribePage';\nimport StarterPage from './pages/StarterPage';\nimport IndividualPage from './pages/IndividualPage';\nimport DeckBuildOptions from './pages/DeckBuildOptions';\nimport DeckCreate from './pages/DeckCreate';\nimport DeckImport from './pages/DeckImport';\nimport EmptyDecksList from './pages/EmptyDecksList';\nimport ModifyDeckPage from './pages/ModifyDeckPage';\nimport SubDeckPage from './pages/SubDeckPage';\n\n//Utilities import\nimport VhInPixels from './utilities/VhInPixels';\nimport { getRaritiesList, getTypesList, getKingdomsList, getCapacitiesList, getExtensionsList, getSubdeckCards, getClassesList } from './api/CardsWareHouse';\nimport AddingSubDecksCardsPage from './pages/AddingSubDecksPage';\n\nfunction App() {\n\n  const pages = [\n    {\n        exact: true,\n        path:'/',\n        component: LandingPage,\n    },\n    {\n        strict: true,\n        path:'/login',\n        component: LoginPage,\n    },\n    {\n        strict: true,\n        path:'/profile',\n        component: ProfilePage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks',\n        component: DecksPage\n    \n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/create',\n        component: AddingDeckPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/empty',\n        component: EmptyDecksList,\n        props: {text: \"No Decks \"} \n    },\n    {\n        exact: true,\n        strict: true,\n        path: '/decks/:id',\n        component: ModifyDeckPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/:id/eden',\n        component: AddingSubDecksCardsPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/:id/register',\n        component: AddingSubDecksCardsPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/:id/holybook',\n        component: AddingSubDecksCardsPage\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/new-deck/build',\n        component: DeckBuildOptions\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/decks/new-deck/import',\n        component: DeckImport\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/cards',\n        component: CardsPage,\n    },\n    {\n        exact:true,\n        strict: true,\n        path:'/cards/from',\n        component: ChoicePage,\n    },\n    {\n        strict:true,\n        path:'/cards/from/starter',\n        component: StarterPage,\n    },\n    {\n        strict:true,\n        path:'/cards/from/individual',\n        component: IndividualPage,\n    },\n    {\n\n        strict: true,\n        path:'/deck/:name',\n        component: SettingsDeckPage\n    },\n    {\n\n        strict: true,\n        path:'/gamers',\n        component: GamersPage\n    },\n    {\n        component: ErrorPage\n    },\n  ]\n\n  useEffect(async () => {\n\n    if(!sessionStorage.getItem('types')){\n        let types = await getTypesList('FR');\n        sessionStorage.setItem('types',JSON.stringify(types));\n    }\n\n    if(!sessionStorage.getItem('kingdoms')){\n        let kingdoms = await getKingdomsList('FR');\n        sessionStorage.setItem('kingdoms',JSON.stringify(kingdoms));\n    }\n\n    if(!sessionStorage.getItem('rarities')){\n        let rarities = await getRaritiesList('FR');\n        sessionStorage.setItem('rarities',JSON.stringify(rarities));\n    }\n\n    if(!sessionStorage.getItem('extensions')){\n        let extensions = await getExtensionsList('FR');\n        sessionStorage.setItem('extensions',JSON.stringify(extensions));\n    }\n   \n  }, []);\n\n  return (\n        <>\n          <VhInPixels/>\n          <Router basename=\"/\">\n              <Navigation pages={pages} />\n            <Footer classes=\"footer\">\n              <Menu classes=\"navbar\" />\n            </Footer>\n          </Router>\n        </>\n  );\n}\n\nexport default App;","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Menu.js",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\layouts\\Footer.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\layouts\\Header.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\LandingPage.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Avatar.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Navigation.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Logout.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\DecksPage.jsx",["319","320","321","322","323"],"import React,{useEffect, useState } from 'react';\r\n\r\n/* layout */\r\nimport Layout from '../layouts/Layout';\r\n\r\n/* api */\r\nimport { getUserDecks, getDecksByKingdoms} from '../api/Decks';\r\n\r\n/* components */\r\nimport Flash from '../components/Flash'\r\nimport Plus from '../components/Plus';\r\nimport List from '../components/List';\r\nimport Deck from '../components/Deck';\r\nimport Pagination from '../components/Pagination';\r\nimport Filters from '../components/Filters';\r\nimport Popup from '../components/Popup';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst DecksPage = (props) => {\r\n\r\n    const [decksList, setDecksList] = useState({\r\n        code: 200,\r\n        message: []\r\n    });\r\n    const [flashState, setFlashState] = useState(null);\r\n    const [deleteResponse, setDeleteResponse] = useState({});\r\n    const [filterClicked, setFilter] = useState(true);\r\n    const [reqOpt, setReqOpt] = useState({\r\n        kingdoms: [],\r\n        mode: '',\r\n        page: 1,\r\n        size: 10,\r\n        order_by: 'id',\r\n        sens: 'asc'\r\n    });\r\n\r\n    const [checkboxes, setCheckBoxes] = useState([false, false, false, false,false,false,false]);\r\n    const kingdomsList = JSON.parse(localStorage.getItem('kingdoms'));\r\n    /* datas for popup form */\r\n    const popupDatas = {\r\n        \"List by kingdoms\": {\r\n            displayed: ['Poseidia', 'Eondra', 'Endless night', 'MetaScience', 'The light\\'s temple', 'Celestial purity', 'The saber\\'s way'],\r\n            values: [1, 2, 3, 4, 5, 6, 7],\r\n            field_name: 'kingdoms',\r\n            type: \"checkbox\",\r\n            onChange: (e) => {\r\n                setReqOpt(prevState => {\r\n                    let newObject = {...prevState};\r\n                    let newKingdomsArray = null;\r\n\r\n                    if(prevState.kingdoms instanceof Array){\r\n                        newKingdomsArray = [...prevState.kingdoms];\r\n                    }\r\n\r\n                    if(e.target.checked === true && !newKingdomsArray.includes(e.target.value)){\r\n\r\n                        if(prevState.mode === 'combination' || prevState.mode === ''){\r\n                            newKingdomsArray.push(e.target.value)\r\n                        }\r\n                        \r\n                        if(prevState.mode === 'unique'){\r\n                            newKingdomsArray = [e.target.value]\r\n                        }\r\n\r\n                    };\r\n\r\n                    if(e.target.checked === false) {\r\n                        let index = newKingdomsArray.indexOf(e.target.value);\r\n                        if(index > -1){\r\n                            newKingdomsArray.splice(index, 1);\r\n                        }\r\n                    }\r\n\r\n                    newObject.kingdoms = newKingdomsArray;\r\n                    newObject.order_by = 'kingdom'\r\n                    return newObject;\r\n                });\r\n            }\r\n        },\r\n        \"Order by\": {\r\n            displayed: ['Deck name' ,'Kingdom' ,'Total ec' , 'Num cards'],           \r\n            values: ['deck_name' ,'kingdom' ,'total_ec' , 'num_cards'],\r\n            type: \"radio\",\r\n            field_name: \"order_by\",\r\n            onChange: (e) => {\r\n                setReqOpt({...reqOpt, order_by: e.target.value});\r\n            }\r\n        },\r\n        \"Sens\": {\r\n            displayed: [\"Descendant\"],\r\n            values: [\"desc\"],\r\n            type: \"radio\",\r\n            field_name: \"sens\",\r\n            onChange: (e) => {\r\n                setReqOpt({...reqOpt, sens: e.target.value});\r\n            }\r\n        }\r\n    }\r\n\r\n    /* handle flash messages */\r\n    const handleFlash = (newFlashState) => {\r\n        setFlashState(newFlashState);\r\n    };\r\n\r\n    const handleDelete = (newState) => {\r\n        setDeleteResponse(newState)\r\n    }\r\n\r\n    /* handling fucntion for filter */\r\n    const handleClickFilter = (e, isVisible) => {\r\n        e.preventDefault();\r\n        setFilter(!isVisible);\r\n    } \r\n\r\n    /* handling functions for pagination */\r\n    const handlePage = async (e, newPage, options) => {\r\n        e.preventDefault();\r\n        if(newPage <= 0){\r\n            return;\r\n        }else{\r\n            setReqOpt({...options, page: newPage});  \r\n        }             \r\n    }\r\n\r\n    const handleSize = (e, newSize) => {\r\n        e.preventDefault();\r\n        setReqOpt({...reqOpt, size: newSize});\r\n    }\r\n\r\n    /* handling functions for popup */\r\n    const handleSelectPopup = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(e.target.value === 'unique'){\r\n            setReqOpt({...reqOpt, mode: 'unique'});\r\n        }\r\n\r\n        if(e.target.value === 'combination'){\r\n            setReqOpt({...reqOpt, mode:'combination'});\r\n        }\r\n\r\n        if(e.target.value === ''){\r\n            setReqOpt({...reqOpt, mode:''});\r\n        }\r\n    }\r\n\r\n    const handleClosePopup = (e) => {\r\n        e.preventDefault();\r\n        setFilter(true);\r\n    }\r\n\r\n    const handleResetPopup = (e) => {\r\n        setReqOpt({\r\n            kingdoms:[],\r\n            mode:'',\r\n            page: 1,\r\n            size: 10,\r\n            order_by: 'id',\r\n            sens: 'asc'\r\n        });\r\n        setFilter(true);\r\n    }\r\n\r\n    useEffect(async () => {\r\n        let response = null;\r\n        \r\n        if(reqOpt.kingdoms.length > 0){\r\n            response = await getDecksByKingdoms(reqOpt);\r\n        }else{\r\n            response = await getUserDecks(reqOpt);\r\n        }\r\n\r\n        if(response.code === 200){\r\n            setDecksList(response);\r\n        }else if(response.code !== 200 && decksList.message instanceof Array){\r\n            setDecksList([]);\r\n            setDeleteResponse(response);\r\n            setFlashState(true);\r\n        }else{\r\n            setFlashState(null);\r\n        }\r\n    },[reqOpt]);\r\n\r\n    useEffect(async () => {\r\n        let response = await getUserDecks(reqOpt);\r\n        setDecksList(response);\r\n    },[]);\r\n\r\n    if(decksList.message && decksList.message instanceof Array){\r\n        return (\r\n            <Layout classes=\"decks page\">\r\n                <Filters containerClasses=\"filter__container row justify-end mt-3\" isVisible={filterClicked} onClick={handleClickFilter}/>\r\n                <List classes=\"list__content layout layout__1\">\r\n                      { \r\n                        decksList.message.length > 0 ?\r\n                          decksList.message.map(elmt => {\r\n                                  return(\r\n                                      <Deck id={elmt.id} \r\n                                            title={elmt.deck_name} \r\n                                            description={elmt.description} \r\n                                            num_cards={elmt.num_cards} \r\n                                            total_ec={elmt.total_ec}\r\n                                            listState = {decksList}\r\n                                            listStateSetter = {setDecksList}\r\n                                            deleteState = {deleteResponse}\r\n                                            deleteStateSetter = {handleDelete}\r\n                                            handleFlash = {handleFlash}\r\n                                            reqOptState = {reqOpt}\r\n                                      />)\r\n                              }\r\n                          ) : \r\n                        <p style ={{color: \"black\",marginTop:\"auto\",marginBottom:\"auto\"}}>\r\n                            Empty \r\n                        </p>\r\n\r\n                        }r\n                </List>\r\n                <Flash \r\n                    classes=\"message__flash\" \r\n                    errorClass=\"message__flash-error\" \r\n                    successClass=\"message__flash-done\" \r\n                    message={deleteResponse.message ? deleteResponse.message : \"flash message\"}\r\n                    timing={750}\r\n                    flash={flashState}\r\n                    handleFlash= {handleFlash}\r\n                />\r\n                <Pagination \r\n                    options = {reqOpt}\r\n                    eventsToListen = {filterClicked}\r\n                    containerClasses = \"pagination__block my-3 row justify-between\"\r\n                    containerTextBlockClasses = {\"pagination__text--block row justify-between\"} \r\n                    setPage={handlePage} \r\n                    setSize={handleSize} \r\n                    listSize={[10,20,40]}\r\n                    nextPage={reqOpt.kingdoms.length > 0 ? getDecksByKingdoms : getUserDecks}\r\n                />\r\n                <Plus to={'/decks/create'}/>\r\n                {\r\n                    filterClicked || \r\n                        <Popup\r\n                            mode = {reqOpt.mode}\r\n                            setOptions = {setReqOpt}\r\n                            datas={popupDatas}  \r\n                            buttonResetText=\"Reset\"\r\n                            checkboxesState = {checkboxes}\r\n                            setCheckBoxes = {setCheckBoxes}\r\n                            actionSelect = {handleSelectPopup}\r\n                            actionClose={handleClosePopup}\r\n                            actionReset={handleResetPopup}\r\n                        />\r\n                }\r\n              </Layout>\r\n      )\r\n    }else{\r\n        return (<Redirect to=\"/decks/not-found\"/>);\r\n    }\r\n}\r\n\r\n\r\nexport default DecksPage;\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\CardsPage.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\GamersPage.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\ProfilePage.jsx",["324","325","326"],"import React,{useState, useEffect, useRef} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { BsPencil } from 'react-icons/bs';\r\n\r\n/* api */\r\nimport {getProfile, updateProfile, deleteProfile, addAvatar, getAvatar} from '../api/Profile';\r\n\r\n/* components */\r\nimport Flash from '../components/Flash';\r\nimport { RiLoader3Line } from 'react-icons/ri';\r\nimport Button from '../components/Button';\r\nimport Main from '../layouts/Main';\r\nimport Loader from '../components/Loader';\r\n\r\n/* module */\r\nimport regexModule  from '../modules/regex';\r\n\r\nconst ProfileForm = (props) => {\r\n\r\n    let history = useHistory();\r\n\r\n    /*States */\r\n    const [userInfos,setUserInfos] = useState({\r\n        code: null,\r\n        message: {\r\n            id: '',\r\n            firstname:'',\r\n            lastname:'',\r\n            gender: 'other',\r\n            username: '',\r\n            is_visible: true,\r\n            allow_collections: true\r\n        }\r\n    });\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [avatar, setAvatar] = useState({\r\n        code : '',\r\n        message : {\r\n            avatar : \"\"\r\n        }\r\n    });\r\n    const [avatarForm, setAvatarForm] = useState();\r\n    const [flashState, setFlashState] = useState(null);\r\n    const [flashMessage, setFlashMessage] = useState();\r\n     \r\n    /* ref */\r\n    const firstnameInput = useRef(null);\r\n    const lastnameInput = useRef(null);\r\n    const usernameInput = useRef(null);\r\n    const emailInput = useRef(null);\r\n    const avatarInput = useRef(null);\r\n\r\n    const handleChange = (e) => {\r\n        switch(e.target.id){\r\n            case 'firstname':\r\n                if(regexModule.regex_name.test(e.target.value) === true){\r\n                    if(firstnameInput.current.classList.contains('bad__input')){\r\n                        firstnameInput.current.classList.remove('bad__input');\r\n                    }\r\n                    firstnameInput.current.classList.add('good__input');\r\n                }else{\r\n                    if(firstnameInput.current.classList.contains('good__input')){\r\n                        firstnameInput.current.classList.remove('good__input');\r\n                    }\r\n                    firstnameInput.current.classList.add('bad__input');\r\n                }\r\n\r\n                if(firstnameInput.current.value.length === 0){\r\n                    firstnameInput.current.classList.remove('good__input');\r\n                }\r\n\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.firstname = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n\r\n            case 'lastname':\r\n                if(regexModule.regex_name.test(e.target.value) === true){\r\n                    if(lastnameInput.current.classList.contains('bad__input')){\r\n                        lastnameInput.current.classList.remove('bad__input');\r\n                    }\r\n                    lastnameInput.current.classList.add('good__input');\r\n                }else{\r\n                    if(lastnameInput.current.classList.contains('good__input')){\r\n                        lastnameInput.current.classList.remove('good__input');\r\n                    }\r\n                    lastnameInput.current.classList.add('bad__input');\r\n                }\r\n\r\n                if(lastnameInput.current.value.length === 0){\r\n                    lastnameInput.current.classList.remove('good__input');\r\n                }\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.lastname = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'username':\r\n                if(regexModule.regex_username.test(e.target.value) === true){\r\n                    if(usernameInput.current.classList.contains('bad__input')){\r\n                        usernameInput.current.classList.remove('bad__input');\r\n                    }\r\n                    usernameInput.current.classList.add('good__input');\r\n                }else{\r\n                    if(usernameInput.current.classList.contains('good__input')){\r\n                        usernameInput.current.classList.remove('good__input');\r\n                    }\r\n                    usernameInput.current.classList.add('bad__input');\r\n                }\r\n\r\n                if(usernameInput.current.value.length === 0){\r\n                    usernameInput.current.classList.remove('good__input');\r\n                }\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.username = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'email':\r\n                if(regexModule.regex_email.test(e.target.value) === true){\r\n                    if(emailInput.current.classList.contains('bad__input')){\r\n                        emailInput.current.classList.remove('bad__input');\r\n                    }\r\n                    emailInput.current.classList.add('good__input');\r\n                }else{\r\n                    if(emailInput.current.classList.contains('good__input')){\r\n                        emailInput.current.classList.remove('good__input');\r\n                    }\r\n                    emailInput.current.classList.add('bad__input');\r\n                }\r\n\r\n                if(emailInput.current.value.length === 0){\r\n                    emailInput.current.classList.remove('good__input');\r\n                }\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.email = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'female' :\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.gender = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'male' :\r\n                e.target.checked = true;\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.gender = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n            case 'other' :\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.gender = e.target.value;\r\n                    return newObj; \r\n                });\r\n                break;\r\n\r\n            case 'visible' :\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.is_visible = e.target.checked;\r\n                    return newObj; \r\n                });\r\n                break;\r\n\r\n            case 'collection' :\r\n                setUserInfos(prevState => {\r\n                    let newObj = {...prevState};\r\n                    newObj.message.allow_collections = e.target.checked;\r\n                    return newObj; \r\n                });\r\n                break;\r\n\r\n            case 'avatar' :\r\n\r\n                if(e.target.files.length > 1){\r\n                    alert(\"Can send only one file\");\r\n                }\r\n\r\n                if(e.target.files[0].size > 200000){\r\n                    alert(\"file too big\");\r\n                }\r\n\r\n                if(e.target.files[0].type !== \"image/png\" && e.target.files[0].type !== \"image/jpeg\"){\r\n                    alert(\"bad file type should be png or jpg\");\r\n                }\r\n                 \r\n                let form = new FormData();     \r\n                form.append('avatar', e.target.files[0]);\r\n                setAvatarForm(form);\r\n                break;\r\n            default:\r\n                console.error(`Something wrong with ${e.target.id}`);\r\n        }\r\n    }\r\n\r\n    const handleUpdateClick = async (e) => {\r\n        e.preventDefault();\r\n        let form = new FormData();\r\n        Object.keys(userInfos.message).map(elmt => {\r\n            form.append(elmt, userInfos.message[elmt]);\r\n        });\r\n\r\n        let response = await updateProfile(form);\r\n\r\n        if(response.code === 200){\r\n            setUserInfos(response);\r\n            setFlashMessage(response.message.username + \" updated successfully\");\r\n            setFlashState(true);\r\n        }else{\r\n            setFlashMessage(response.message);\r\n            setFlashState(false);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleAvatarClick = (e) => {\r\n        e.preventDefault();\r\n        avatarInput.current.click();    \r\n        return true;\r\n    }\r\n\r\n    const handleFlash = (newFlashState) => {\r\n        setFlashState(newFlashState);\r\n    };\r\n\r\n    const handleDeleteClick = async (e) => {\r\n        e.preventDefault();\r\n        let response = \"\";\r\n        let test = window.confirm(\"Are you sure ?\");\r\n        if(test === true){\r\n            response = await deleteProfile();\r\n            if(response.code === 200){\r\n                setFlashState(true);\r\n                setFlashMessage(response.message);\r\n                setTimeout(() => {\r\n                    history.push('/login');\r\n                },750);\r\n            }else{\r\n                setFlashState(false);\r\n                setFlashMessage(response.message); \r\n            }\r\n        }else{\r\n            alert(\"Welcome back\");\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if(avatarForm){\r\n            let response = await addAvatar(avatarForm);\r\n            if(response.code === 200){\r\n                setAvatar(response);\r\n            }\r\n        }\r\n    }, [avatarForm]);\r\n\r\n    useEffect(async () => {\r\n        let responseUser = await getProfile();\r\n        let responseAvatar = await getAvatar();\r\n\r\n        if(responseAvatar.code === 200){\r\n\r\n            if(responseAvatar.message.avatar === null){\r\n                setAvatar({\r\n                    code: 200,\r\n                    message: {\r\n                        avatar: \"https://test-seven.site/images/user-default.svg\"\r\n                    }\r\n                })\r\n            }else{\r\n                setAvatar(responseAvatar);\r\n            }\r\n        }\r\n\r\n        if(responseUser.code === 200){\r\n            setUserInfos(responseUser);\r\n        }\r\n    },[]);\r\n\r\n    return isLoaded === true ? (\r\n        <Main classes=\"profile__page\">\r\n                <form className=\"form\" onChange={handleChange}>\r\n                        <label className=\"form__label--avatar mb-4\" htmlFor=\"avatar\">\r\n                            <div className=\"profile__heading\" onClick={handleAvatarClick}>\r\n                                {avatar.message.avatar ? <img className=\"profile__avatar\"\r\n                                     src={avatar.message.avatar} \r\n                                     alt=\"avatar\"\r\n                                />\r\n                                :\r\n                                null}\r\n                                <BsPencil className=\"profile__avatar--button\"/>\r\n                            </div>\r\n                        </label>\r\n                        <input ref={avatarInput} \r\n                               id=\"avatar\" \r\n                               className=\"d-none\" \r\n                               name=\"avatar\" \r\n                               type=\"file\" \r\n                               accept=\"image/png, image/jpeg\"\r\n                        />\r\n                        <div className=\"form__section w-80 mb-2\">\r\n                            <h4 className=\"form__section--title\">Profile options</h4>\r\n                        <div className=\"row justify-between w-100\">\r\n                            <label className=\"form__label mr-2\" htmlFor=\"visible\">Public</label>\r\n                            <input id=\"visible\" className=\"form__checkbox mb-1\" type=\"checkbox\" name=\"visible\" checked={userInfos.message.is_visible}/>\r\n                        </div>\r\n                        <div className=\"row justify-between w-100\">\r\n                            <label className=\"form__label mr-2\" htmlFor=\"collection\">Collections</label>\r\n                            <input id=\"collection\" className=\"form__checkbox\" type=\"checkbox\" name=\"collection\" checked={userInfos.message.allow_collections} />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form--section\" >\r\n                            <h4 className=\"form__section--title\">Contact</h4>\r\n                            <div className=\"form__radio--group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"form__radio--button\">\r\n                                        <label className=\"form__radio--label\" htmlFor=\"female\">F</label>\r\n                                        <input \r\n                                            id=\"female\" \r\n                                            className=\"form--radio\" \r\n                                            type=\"radio\" \r\n                                            name=\"gender\" \r\n                                            value=\"F\" \r\n                                            checked={userInfos.message.gender.trim() === 'F' ? true : false}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form__radio--button\">\r\n                                        <label className=\"form__radio--label\" htmlFor=\"male\">M</label> \r\n                                        <input id=\"male\" \r\n                                               className=\"form--radio\"\r\n                                               type=\"radio\" \r\n                                               name=\"gender\" \r\n                                               value=\"M\" \r\n                                               checked={userInfos.message.gender.trim() === 'M' ? true : false}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form__radio--button\">\r\n                                        <label className=\"form__radio--label\" htmlFor=\"other\">Autre</label> \r\n                                        <input id=\"other\" \r\n                                               className=\"form--radio\"\r\n                                               type=\"radio\" \r\n                                               name=\"gender\" \r\n                                               value=\"other\" \r\n                                               checked={userInfos.message.gender === 'other' ? true : false}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <input id=\"firstname\"\r\n                                   ref={firstnameInput} \r\n                                   className=\"form--input\" \r\n                                   type=\"text\"\r\n                                   placeholder=\"firstname\" \r\n                                   value={userInfos.message.firstname}\r\n                            />\r\n                            <input id=\"lastname\"\r\n                                   ref={lastnameInput} \r\n                                   type=\"text\" \r\n                                   className=\"form--input\" \r\n                                   placeholder=\"lastname\" \r\n                                   value={userInfos.message.lastname}\r\n                            />\r\n                            <input id=\"username\"\r\n                                   ref={usernameInput} \r\n                                   type=\"text\" \r\n                                   className=\"form--input\" \r\n                                   placeholder=\"username\" \r\n                                   value={userInfos.message.username}\r\n                            />\r\n                            <input id=\"email\"\r\n                                   ref={emailInput} \r\n                                   type=\"email\" \r\n                                   className=\"form--input\" \r\n                                   placeholder=\"email\" \r\n                                   value={userInfos.message.email}\r\n                            />\r\n                        </div>\r\n                        <Button classes=\"btn\" text=\"update\" bgcolor='#3be73b' color='#202020' onClick={handleUpdateClick}/>\r\n                        <Button classes=\"btn\" text=\"delete\" bgcolor='#ff5d5d' color='#202020' onClick={handleDeleteClick}/>  \r\n                </form>\r\n                <Flash \r\n                    classes=\"message__flash\" \r\n                    errorClass=\"message__flash-error\" \r\n                    successClass=\"message__flash-done\" \r\n                    message={flashMessage ? flashMessage : \"flash message\"}\r\n                    timing={750}\r\n                    flash={flashState}\r\n                    handleFlash= {handleFlash}\r\n                />\r\n            </Main>\r\n    )\r\n    :\r\n    (\r\n        <Loader condition={userInfos.code === 200} \r\n                loaderIcon={RiLoader3Line} \r\n                setLoaded={setIsLoaded} \r\n        />\r\n    )\r\n}\r\n\r\nexport default ProfileForm\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\ErrorPage.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\LoginPage.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\SettingsDeckPage.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\SubscribePage.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\IndividualPage.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\StarterPage.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\DeckBuildOptions.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\ChoicePage.jsx",["327"],"import React,{useEffect, useReducer} from 'react'\r\nimport Button from '../components/Button'\r\nimport Main from '../layouts/Main'\r\nimport Header from '../layouts/Header'\r\n\r\n\r\n\r\nfunction reducer(state,action){\r\n    switch(action.type){\r\n        case 'STARTER_DECK':\r\n            return { choice:\"/cards/from/starter\"};\r\n        case 'INDIVIDUAL':\r\n            return { choice:\"/cards/from/individual\"};\r\n        case 'BACK':\r\n            return { choice:\"/cards\"};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst ChoicePage = (props) => {\r\n    const init = {choice: \"/cards/from\"}\r\n    const [isClicked, dispatch] = useReducer(reducer,init);\r\n    \r\n    const handleClick = (e,action) => {\r\n        e.preventDefault();\r\n        dispatch({type:action})\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.history.push(isClicked.choice);\r\n    }, [isClicked]) \r\n\r\n    return (        \r\n            <>\r\n                <Header>\r\n                    <h1>Choice :</h1>\r\n                </Header>\r\n                <Main>\r\n                    <div className=\"block\">\r\n                        <Button classes=\"btn\" text=\"Starter Deck\" onClick={(e) => handleClick(e,\"STARTER_DECK\")}/>\r\n                        <Button classes=\"btn\" text=\"Individual Card\" onClick={(e) => handleClick(e,\"INDIVIDUAL\")}/> \r\n                    </div>\r\n                    <Button classes=\"btn\" text=\"cancel\" onClick={(e) => handleClick(e,\"BACK\")}/>\r\n                </Main> \r\n            </>\r\n    )\r\n}\r\n\r\nexport default ChoicePage\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\AddingDeckPage.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\DeckImport.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\EmptyDecksList.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\DeckCreate.jsx",["328","329"],"import React,{useEffect, useState} from 'react';\r\nimport {useParams, Link} from 'react-router-dom';\r\nimport { GiStack } from 'react-icons/gi';\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport { RiLoader3Line } from 'react-icons/ri';\r\n\r\n/* api */\r\nimport {getEden, createEden, deleteEden} from '../api/Eden.jsx';\r\nimport {getHolyBook, createHolyBook, deleteHolyBook} from '../api/HolyBook.jsx';\r\nimport {getRegister, createRegister, deleteRegister} from '../api/Register.jsx';\r\n\r\n/* layouts */\r\nimport Layout from '../layouts/Layout';\r\n\r\n/* components */\r\nimport Button from '../components/Button';\r\nimport Loader from '../components/Loader';\r\n\r\nconst DeckCreate = (props) => {\r\n    const { id } = useParams();\r\n    const [subdecks, setSubDecks] = useState({\r\n        eden: {\r\n            code: null,\r\n            message: null\r\n        },\r\n        register: {\r\n            code: null,\r\n            message: null\r\n        },\r\n        holybook: {\r\n            code: null,\r\n            message: null\r\n        }\r\n    });\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    const handleClickNav = async (e) => {\r\n        e.preventDefault();\r\n        let response = null;\r\n\r\n        if(e.target.id === 'eden'){\r\n            response = await createEden(id);\r\n            setSubDecks({...subdecks, eden: response});\r\n        }\r\n\r\n        if(e.target.id === 'register'){\r\n            response = await createRegister(id);\r\n            setSubDecks({...subdecks, register: response});\r\n        }\r\n\r\n        if(e.target.id === 'holybook'){\r\n            response = await createHolyBook(id);\r\n            setSubDecks({...subdecks, holybook: response});\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleDeleteEden = async (e) => {\r\n        e.preventDefault();\r\n        let response = await deleteEden(id);\r\n        if(response.code === 200){\r\n            setSubDecks({...subdecks, eden: {\r\n                code:null,\r\n                message: null\r\n            }});\r\n        }else{\r\n            setSubDecks({...subdecks, eden: response});           \r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleDeleteRegister = async (e) => {\r\n        e.preventDefault();\r\n        let response = await deleteRegister(id);\r\n        if(response.code === 200){\r\n            setSubDecks({...subdecks, register: {\r\n                code:null,\r\n                message: null\r\n            }});\r\n        }else{\r\n            setSubDecks({...subdecks, register: response});           \r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleDeleteHolyBook = async (e) => {\r\n        e.preventDefault();\r\n        let response = await deleteHolyBook(id);\r\n        if(response.code === 200){\r\n            setSubDecks({...subdecks, holybook: {\r\n                code:null,\r\n                message: null\r\n            }});\r\n        }else{\r\n            setSubDecks({...subdecks, holybook: response});           \r\n        }\r\n        return true;\r\n    }\r\n    \r\n    useEffect(async () => {\r\n        let eden = await getEden(id);\r\n        let register = await getRegister(id);\r\n        let holybook = await getHolyBook(id);\r\n        let response = {};\r\n\r\n        if(eden.message){\r\n            response = {...response, eden: eden}\r\n        }\r\n\r\n        if(register.message){\r\n            response = {...response, register: register}\r\n        }\r\n\r\n        if(holybook.message){\r\n            response = {...response, holybook: holybook}\r\n        }\r\n\r\n        setSubDecks(response);\r\n    },[]);\r\n\r\n    return loaded === true ? (\r\n        <Layout>\r\n            {subdecks.eden.code === 200 ?\r\n                <div className=\"subdeck__box mb-5\">\r\n                    <div className=\"subdeck__heading py-2\">\r\n                        <h4 className=\"subdeck__type\">eden</h4>\r\n                    </div>\r\n                    <div className=\"subdeck__body row justify-between p-2\">\r\n                        <p className=\"subdeck__infos row align-center\">\r\n                            Num cards : {subdecks.eden.message.qty === undefined ? 0 : subdecks.eden.message.qty}\r\n                        </p>\r\n                        <div className=\"subdeck__icon--list row justify-between\">\r\n                            <Link to={`/decks/${id}/eden`}>\r\n                                <GiStack className=\"subdeck__icon\" />\r\n                            </Link>\r\n                            <AiFillDelete className=\"subdeck__icon\" onClick={handleDeleteEden}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Button id=\"eden\" classes=\"btn mb-3\" text=\"create eden\" onClick={handleClickNav} />\r\n            }\r\n            {subdecks.register.code === 200 ?\r\n                <div className=\"subdeck__box mb-5\">\r\n                    <div className=\"subdeck__heading py-2\">\r\n                        <h4 className=\"subdeck__type\">register</h4>\r\n                    </div>\r\n                    <div className=\"subdeck__body row justify-between p-2\">\r\n                        <p className=\"subdeck__infos  row align-center\">\r\n                            Num cards : {subdecks.register.message.qty === undefined ? 0 : subdecks.register.message.qty}\r\n                        </p>\r\n                        <div className=\"subdeck__icon--list row justify-between\">\r\n                            <Link to={`/decks/${id}/register`}>\r\n                                <GiStack className=\"subdeck__icon\" />\r\n                            </Link>\r\n                            <AiFillDelete className=\"subdeck__icon\" onClick={handleDeleteRegister}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Button id=\"register\" classes=\"btn mb-3\" text=\"create register\" onClick={handleClickNav}/>\r\n            }\r\n            {subdecks.holybook.code === 200 ?\r\n                <div className=\"subdeck__box\">\r\n                    <div className=\"subdeck__heading py-2\">\r\n                        <h4 className=\"subdeck__type\">holybook</h4>\r\n                    </div>\r\n                    <div className=\"subdeck__body row justify-between p-2\">\r\n                        <p className=\"subdeck__infos  row align-center\">\r\n                            Num cards : {subdecks.holybook.message.qty === undefined ? 0 : subdecks.holybook.message.qty }\r\n                        </p>\r\n                        <div className=\"subdeck__icon--list row justify-between\">\r\n                            <Link to={`/decks/${id}/holybook`}>\r\n                                <GiStack className=\"subdeck__icon\" />\r\n                            </Link>\r\n                            <AiFillDelete className=\"subdeck__icon\" onClick={handleDeleteHolyBook}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Button id=\"holybook\" classes=\"btn\" text=\"create holybook\" onClick={handleClickNav}/>\r\n            }\r\n        </Layout>\r\n    )\r\n    :\r\n    (\r\n        <Loader condition = { \r\n                    subdecks.eden.code !== null || \r\n                    subdecks.register.code !== null ||\r\n                    subdecks.holybook.code !== null \r\n                }\r\n                setLoaded = {setLoaded}\r\n                loaderIcon = {RiLoader3Line}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DeckCreate;\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\SubDeckPage.jsx",["330","331","332"],"import {useEffect, useState, useRef} from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\n/* api */\r\nimport { getEdenCards } from '../api/Eden';\r\nimport { getRegisterCards } from '../api/Register';\r\nimport { getHolyBookCards } from '../api/HolyBook';\r\n\r\n/* components */\r\nimport Loader  from '../components/Loader';\r\nimport { RiLoader3Line } from 'react-icons/ri';\r\nimport { AiFillCloseCircle } from 'react-icons/ai';\r\nimport {AiOutlineArrowLeft} from 'react-icons/ai';\r\nimport Button from '../components/Button';\r\nimport PopupContainer from '../components/PopupContainer';\r\nimport List from '../components/List';\r\nimport Plus from '../components/Plus';\r\n\r\n/* layouts */\r\nimport Main from '../layouts/Main';\r\n\r\nfunction SubDeckPage(props){\r\n\r\n    let endUrl = props.location.pathname.split('/');\r\n    endUrl = endUrl[endUrl.length - 1];\r\n\r\n    let {id} = useParams();\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [cardsList, setCardsList] = useState({\r\n        code: null,\r\n        message: null\r\n    });\r\n    const [isEmpty, setIsEmpty] = useState(true);\r\n    const [test, setTest] = useState(false);\r\n\r\n    const popupRef = useRef(null);\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if(popupRef.current.classList.contains('d-none')){\r\n            popupRef.current.classList.remove('d-none');\r\n        }else{\r\n            popupRef.current.classList.add('d-none');      \r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleValid = (e) => {\r\n        e.preventDefault();\r\n        popupRef.current.classList.add('d-none');\r\n        return true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n           setTest(true); \r\n        }, 500);\r\n    })\r\n\r\n    useEffect(async () => {\r\n        let response = null;\r\n\r\n        if(endUrl === 'eden'){\r\n            response = await getEdenCards(id);\r\n        }\r\n        \r\n        if(endUrl === 'register'){\r\n            response = await getRegisterCards(id);\r\n        }\r\n\r\n        if(endUrl === 'holybook'){\r\n            response = await getHolyBookCards(id);\r\n        }\r\n\r\n        if(response.message.cards.length === 0){\r\n            setIsEmpty(true);\r\n        }else{\r\n            setIsEmpty(false);\r\n        }\r\n\r\n        setCardsList(response);\r\n    },[]);\r\n\r\n\r\n    return loaded === true ? (\r\n        <Main classes=\"page\">\r\n                {\r\n                    isEmpty === true ?\r\n                    (\r\n                        <>  \r\n                            <div className=\"row justify-start w-80\">\r\n                                <Link \r\n                                    className=\"row justify-between align-center\" \r\n                                    to={`/decks/${id}/subdecks`}\r\n                                >\r\n                                    <AiOutlineArrowLeft className=\"arrow mr-2\"/>\r\n                                </Link>\r\n                            </div>\r\n                            <List classes=\"list__content layout layout__1\">\r\n                                <p style ={{color: \"black\",marginTop:\"auto\",marginBottom:\"auto\"}}>\r\n                                        Empty \r\n                                </p>\r\n                            </List>\r\n                            <Plus to={`/decks/${id}/${endUrl}/modify`}/>\r\n                            <PopupContainer \r\n                                classes=\"subdeck column align-center popup__container py-5 d-none\" \r\n                                ref={popupRef}\r\n                            >\r\n                                <div className=\"popup__heading\">\r\n                                    <div className=\"popup__close\" onClick={handleClick}>\r\n                                        <AiFillCloseCircle />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"popup__body my-5\">\r\n                                    <List classes=\"layout layout__3 p-0\">\r\n\r\n                                    </List>\r\n                                </div>\r\n                                <div className=\"popup__footer\">\r\n                                    <Button \r\n                                        text=\"Valid\" \r\n                                        bgcolor=\"#3be73b\" \r\n                                        color=\"#101010\" \r\n                                        padding=\"3vw 0\" \r\n                                        onClick={handleValid}\r\n                                    />\r\n                                </div>\r\n                            </PopupContainer>\r\n                        </>\r\n                    )\r\n                    :\r\n                    (\r\n                        <p style ={{color: \"black\",marginTop:\"auto\",marginBottom:\"auto\", textAlign: \"center\"}}>\r\n                            I'm full\r\n                        </p>\r\n                    )\r\n                }\r\n        </Main>\r\n    )\r\n    :\r\n    (\r\n        <Loader condition={test === true} loaderIcon={RiLoader3Line} setLoaded={setLoaded} />\r\n    )\r\n}\r\n\r\nexport default SubDeckPage;","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\utilities\\VhInPixels.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\ModifyDeckPage.jsx",["333","334","335","336","337"],"\r\nimport {useEffect,useState, useRef} from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n/* layout parts */\r\nimport Main from '../layouts/Main';\r\n\r\n/* components */\r\nimport Button from '../components/Button';\r\nimport Flash from '../components/Flash';\r\n\r\n/* modules */\r\nimport regexModule from '../modules/regex';\r\n\r\n/* api*/\r\nimport { updateOne, getOne } from'../api/Decks.jsx';\r\nimport { getEdenCards } from '../api/Eden.jsx';\r\nimport { getRegisterCards } from '../api/Register.jsx';\r\nimport { getHolyBookCards } from '../api/holyBook.jsx';\r\n\r\n/* utilities */\r\nimport checkRegex from '../utilities/checkRegex';\r\nimport { serialize } from '../utilities/serialize';\r\nimport AddCard from '../components/AddCard';\r\n\r\nfunction ModifyDeckPage(props){\r\n    const [options, setOptions] = useState(JSON.parse(sessionStorage.getItem('kingdoms')));\r\n    const optionsTitle = 'Kingdoms';\r\n    const [deckInfos, setDeckInfos] = useState({});\r\n    const [flashState, setFlashState] = useState(null);\r\n    const [response, setResponse] = useState('');\r\n    const [formOpen, setFormOpen] = useState(false);\r\n    const deckName = useRef(null);\r\n    let { id } = useParams();\r\n    const [edenCards, setEdenCards] = useState({\r\n        cards: []\r\n    });\r\n    const [registerCards, setRegisterCards] = useState({\r\n        cards: []\r\n    });\r\n    const [holybookCards, setHolyBookCards] = useState({\r\n        cards: []\r\n    });\r\n    /* refs */\r\n    let formRef = useRef();\r\n    let pageRef = useRef();\r\n\r\n    /* handling functions */\r\n    const handleFlash = (newFlashState) => {\r\n        setFlashState(newFlashState);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'kingdoms'){\r\n            if(e.target.checked === true){\r\n                setDeckInfos(prevState => {\r\n                    let newArr = prevState.kingdom === null ? [Number(e.target.id)] : [...prevState.kingdom, Number(e.target.id)];\r\n                    const newSet = new Set(newArr);\r\n                    newArr = Array.from(newSet);\r\n                    return {\r\n                        ...prevState,\r\n                        kingdom: newArr.sort()\r\n                    };\r\n                });\r\n            }\r\n            \r\n            if(e.target.checked === false){\r\n                setDeckInfos(prevState => {\r\n                    let newArr = [...prevState.kingdom];\r\n                    const index = newArr.indexOf(Number(e.target.value));\r\n                    if(index > -1){\r\n                        newArr.splice(index, 1);\r\n                    }\r\n\r\n                    return {\r\n                        ...prevState,\r\n                        kingdom: newArr.sort()\r\n                    }\r\n\r\n                })\r\n            }\r\n        }\r\n        \r\n        if(e.target.id === 'deck_name'){\r\n            setDeckInfos({...deckInfos, deck_name: e.target.value})\r\n        }\r\n\r\n        if(e.target.id === 'description'){\r\n            setDeckInfos({...deckInfos, description: e.target.value});\r\n        }\r\n\r\n        if(e.target.id === 'isVisible'){\r\n            setDeckInfos({...deckInfos, is_visible: e.target.checked});\r\n        }\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        if(e.target.id === 'deck_name'){\r\n            setDeckInfos({...deckInfos, deck_name: e.target.value});\r\n        }\r\n    }   \r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        let form = new FormData();\r\n        Object.keys(deckInfos).map(elmt => {\r\n            if(elmt === 'kingdom'){\r\n                form.append(elmt, serialize(deckInfos.kingdom));\r\n            }else{\r\n                form.append(elmt, deckInfos[elmt]);\r\n            }\r\n            return true;\r\n        });\r\n\r\n        let updateRes = await updateOne(form, id);\r\n            setResponse(updateRes);\r\n        if(updateRes.code === 200){\r\n            setFlashState(true);\r\n        }else if(updateRes.code !== 200){\r\n            setFlashState(false);\r\n        }else{\r\n            setFlashState(null)\r\n        }\r\n\r\n        setTimeout(() => {\r\n            setFormOpen(false);\r\n        }, 750)\r\n    }\r\n\r\n    const handleAppearForm = (e) => {\r\n        e.preventDefault();\r\n        setFormOpen(!formOpen);\r\n        setTimeout(() => {\r\n            formRef.current.scrollIntoView({\r\n                behavior: \"smooth\",\r\n                block: \"end\"\r\n            })\r\n        }, 500)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(formOpen === true){\r\n            formRef.current.classList.add(\"isOpen\", \"mt-2\");\r\n        }else{\r\n            formRef.current.classList.remove(\"isOpen\", \"mt-2\");\r\n        }\r\n    }, [formOpen]);\r\n\r\n    useEffect(() => {   \r\n        if(checkRegex(regexModule.regex_deck_name, deckName.current.value) === true){\r\n            deckName.current.classList.add('good__input');\r\n        }\r\n\r\n        if(checkRegex(regexModule.regex_deck_name, deckName.current.value) === false){\r\n            deckName.current.classList.add('bad__input');\r\n        }\r\n\r\n        return () => {\r\n            if(deckName.current.classList.contains('good__input')){\r\n                deckName.current.classList.remove('good__input');\r\n            };\r\n\r\n            if(deckName.current.classList.contains('bad__input')){\r\n                deckName.current.classList.remove('bad__input');\r\n            };\r\n        }\r\n    }, [deckInfos.deck_name]);\r\n\r\n    useEffect(async () => {\r\n        let res = await getOne(id);\r\n        let eden = await getEdenCards(id);\r\n        let register = await getRegisterCards(id);\r\n        let holybook = await getHolyBookCards(id);\r\n\r\n        if(res.code === 200){\r\n            setDeckInfos(res.message);\r\n        }else{\r\n            setFlashState(false);\r\n            setResponse(res);\r\n        }\r\n        \r\n        if(eden.code === 200){\r\n            setEdenCards(eden.message[0]);\r\n        }\r\n\r\n        if(register.code === 200){\r\n            setRegisterCards(register.message[0]);\r\n        }\r\n\r\n        if(holybook.code === 200){\r\n            setHolyBookCards(holybook.message[0]);\r\n        }\r\n\r\n    },[]);\r\n\r\n    return (\r\n        <Main classes=\"page page__deck pt-6 pb-4\">\r\n            <div className=\"subdeck__box mt-3 mb-2\">\r\n                <div className=\"subdeck__heading py-2\">\r\n                    <h4 className=\"subdeck__type\">eden</h4>\r\n                </div>\r\n                <ul className=\"subdeck__body p-2\">\r\n                    {\r\n                        edenCards.cards.length === 0 ?\r\n                            <AddCard \r\n                                classes=\"card__thumbnail--container dashed-border row justify-center align-center\" \r\n                                url={`/decks/${id}/eden`}\r\n                            />                            \r\n                            :\r\n                            <AddCard \r\n                                classes=\"card__thumbnail--container dashed-border row justify-center align-center\" \r\n                                url={`/decks/${id}/eden`}\r\n                            /> \r\n                    }\r\n                </ul>\r\n            </div>\r\n            <div className=\"subdeck__box mb-2\">\r\n                <div className=\"subdeck__heading py-2\">\r\n                    <h4 className=\"subdeck__type\">register</h4>\r\n                </div>\r\n                <ul className=\"subdeck__body p-2\">\r\n                    {\r\n                        registerCards.cards.length === 0 ?\r\n                            <AddCard \r\n                                classes=\"card__thumbnail--container dashed-border row justify-center align-center\" \r\n                                url={`/decks/${id}/register`}\r\n                            />  \r\n                            :\r\n                            null\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <div className=\"subdeck__box mb-2\">\r\n                <div className=\"subdeck__heading py-2\">\r\n                    <h4 className=\"subdeck__type\">holybook</h4>\r\n                </div>\r\n                <ul className=\"subdeck__body p-2\">\r\n                    {\r\n                        holybookCards.cards.length === 0 ?\r\n                            <AddCard \r\n                                classes=\"card__thumbnail--container dashed-border row justify-center align-center\"\r\n                                url={`/decks/${id}/holybook`}\r\n                            />\r\n                            :\r\n                            null\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <div className=\"subdeck__box mb-2\">\r\n                <div className=\"subdeck__heading py-2\">\r\n                    <h4 className=\"subdeck__type\">side deck</h4>\r\n                </div>\r\n                <ul className=\"subdeck__body p-2\">\r\n                    {\r\n                        holybookCards.cards.length === 0 ?\r\n                            <AddCard \r\n                                classes=\"card__thumbnail--container dashed-border row justify-center align-center\"\r\n                                url={`/decks/${id}/holybook`}\r\n                            />\r\n                            :\r\n                            null\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <Button text=\"Infos\" onClick={handleAppearForm}/>\r\n            <form ref={formRef} className=\"deck form mt-2 mb-4\" onChange={handleChange} onBlur={handleBlur}>\r\n                <div className=\"form--section column\">\r\n                    <input id=\"deck_name\" className=\"form--input mb-2\" ref={deckName} type=\"text\" placeholder=\"deck name\" value={deckInfos.deck_name}/>\r\n                    <div className=\"form__option--block row\">\r\n                        <label className=\"form__label mr-2\" htmlFor=\"isVisible\">Public</label>\r\n                        <input id=\"isVisible\" className=\"form__checkbox\" type=\"checkbox\" checked={deckInfos.is_visible}/>\r\n                    </div>\r\n                    <p className=\"row justify-start mb-1\" >Cards number : {deckInfos.num_cards}</p>\r\n                    <p className=\"row jsutify-start mb-2\">Total Celestian energy : {deckInfos.total_ec}</p>\r\n                    {options && options instanceof Array ?\r\n                        <fieldset className=\"pb-2 mb-3\">\r\n                            <legend className=\"px-2\">{optionsTitle}</legend>\r\n                            <ul id=\"kingdoms__list\" className=\"column\">\r\n                                {\r\n                                    options.map(elmt => ( \r\n                                            <li key={elmt.id} className=\"row justify-between\">\r\n                                                <label className=\"form__label\" htmlFor={elmt.id}>{elmt.name}</label>\r\n                                                <input \r\n                                                       id={elmt.id} \r\n                                                       className=\"form__checkbox\" \r\n                                                       type=\"checkbox\" \r\n                                                       name=\"kingdoms\"\r\n                                                       checked ={ deckInfos.kingdom && deckInfos.kingdom.includes(elmt.id)}\r\n                                                       value={elmt.id}\r\n                                                />\r\n                                            </li> \r\n                                        )\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </fieldset>\r\n                        :\r\n                        null\r\n                    }\r\n                    <textarea id=\"description\" className=\"form__textarea mb-3\" placeholder=\"description\" value={deckInfos.description}/>\r\n                </div>\r\n                <Button onClick={handleClick} text=\"update\" />\r\n            </form>\r\n            <Flash \r\n                classes=\"message__flash\" \r\n                errorClass=\"message__flash-error\" \r\n                successClass=\"message__flash-done\" \r\n                message={response.message ? response.message : \"flash message\"}\r\n                timing={750}\r\n                flash={flashState}\r\n                handleFlash={handleFlash}\r\n            />\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default ModifyDeckPage;","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\CardsWareHouse.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\pages\\AddingSubDecksPage.jsx",["338","339","340","341","342","343","344","345","346","347","348","349","350"],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\holyBook.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\Register.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\Decks.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\Eden.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\HolyBook.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\utilities\\serialize.js",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\utilities\\checkRegex.js",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\modules\\regex.js",["351","352","353"],"const regexModule = {\r\n    regex_order: /^[A-Za-z_]+$/,\r\n    regex_id: /^[1-9]{1}[0-9]{0,9}$/,\r\n    regex_username: /^[a-zA-Z_\\-#]{1}[a-zA-Z0-9_\\-\\s]{4,31}$/,\r\n    regex_name:/^[a-zA-Z]{0,32}$/,\r\n    regex_start_with: /^[a-zA-Z_\\-#]{1}[a-zA-Z0-9_\\-#]{0,31}$/,\r\n    regex_name: /^[A-Za-z]{0,32}$/,\r\n    regex_gender: /(M|F|Other)/,\r\n    regex_email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n    regex_cards: /([1-9]{1}[0-9]{0,4}:[1-9]{1}[0-9]{0,4},{0,1})+/,\r\n    regex_qty: /^[1-9]{1}[0-9]{0,1}$/,\r\n    regex_kingdoms: /^([1-7]{1,1},{0,1}){1,7}[^,]$/,\r\n    regex_page: /^[1-9]{1}[0-9]{0,5}$/,\r\n    regex_page_size: /^[1-9]{1}[0-9]{0,5}$/,\r\n    regex_img: /^([A-Za-z]{3,16}(-[1-9]{1,8}){0,1}(\\.jpg|\\.svg){1,1}){1,1}$/,\r\n    regex_deck_name: /^[A-Za-z0-9_\\-#]{4}[A-Za-z0-9_\\-#\\s]{0,26}$/\r\n}\r\n\r\nexport default regexModule;","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\hooks\\useWindowSize.js",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Button.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\layouts\\Layout.jsx",["354"],"import React from 'react'\r\nimport Header from './Header'\r\nimport Main from './Main'\r\n\r\nconst layout = (props) => {\r\n        const {classes} = props; \r\n        return (\r\n        <>\r\n           <Main classes={classes ? classes : \"page\"}>\r\n               {props.children instanceof Array ? props.children.map((elmt, index) => {\r\n                   return elmt;\r\n                }) : ''}\r\n           </Main> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default layout\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Flash.jsx",["355"],"import React, {useState, useEffect} from 'react'\r\n\r\nfunction Flash(props){\r\n\r\n    const {message, classes, errorClass,flash ,successClass, timing, handleFlash} = props;\r\n    const [classesState, setClasses] = useState(classes);\r\n    let afterClasses = '';\r\n    \r\n    useEffect(() => {\r\n\r\n        if(flash === false){\r\n            setClasses(classes + ' ' + errorClass)\r\n            setTimeout(() => {\r\n                afterClasses = classes.replace(errorClass, '');\r\n                setClasses(afterClasses);\r\n            }, timing ? timing : 1000);\r\n\r\n        }\r\n\r\n        if(flash === true){\r\n            setClasses(classes + ' ' + successClass);\r\n            setTimeout(() => {\r\n                afterClasses = classes.replace(successClass, '');\r\n                setClasses(afterClasses);\r\n            }, timing ? timing : 1000);\r\n        }\r\n\r\n        handleFlash(null);\r\n\r\n    },[flash])\r\n\r\n    return(\r\n        <>\r\n            <p className={classesState}>{message}</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Flash;","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Plus.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Deck.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\List.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Filters.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Pagination.jsx",["356","357"],"import React, {useState, useEffect} from 'react';\r\nimport {BsChevronLeft,BsChevronRight} from 'react-icons/bs'\r\n\r\n\r\nfunction Pagination(props){\r\n    const {\r\n        options, \r\n        setPage, \r\n        setSize , \r\n        containerClasses,\r\n        containerTextBlockClasses, \r\n        leftClasses, \r\n        rightClasses, \r\n        textClasses, \r\n        listSize = [],\r\n        nextPage\r\n    } = props;\r\n\r\n    const [canNext, setCanNext] = useState(true);\r\n\r\n    useEffect(async () => {\r\n\r\n        let newObj = {...options};\r\n        newObj.page = options.page + 1;\r\n        let res = await nextPage(newObj);\r\n\r\n        if(res.code === 200 && res.message.length === 0){\r\n            setCanNext(false);\r\n        }else{\r\n            setCanNext(true);\r\n        }\r\n\r\n    },[options]);\r\n\r\n    return (\r\n        <div className={containerClasses ?? \"pagination__block\"} >\r\n            <div className={leftClasses ?? \"pagination__arrow\"} \r\n                 onClick={(e) => setPage(e, Number(options.page) - 1, options)}\r\n            >\r\n                <BsChevronLeft/>\r\n            </div>\r\n                <div className={containerTextBlockClasses ?? \"pagination__text--block\"}>\r\n                {\r\n                    listSize.map((elmt, index) => {\r\n                        return <p key={index} className={textClasses ?? \"pagination__text\"} onClick={(e) => setSize(e, elmt)}>{elmt}</p>\r\n                    })\r\n                }\r\n                </div>\r\n            <div className={rightClasses ?? \"pagination__arrow\"} \r\n                 onClick={canNext === true ? (e) => setPage(e, Number(options.page) + 1, options) : (e) => setPage(e, 1, options)}\r\n            >\r\n                <BsChevronRight/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Popup.jsx",["358","359","360"],"import React,{ useEffect, useRef} from 'react';\r\nimport {AiFillCloseCircle} from 'react-icons/ai'\r\n\r\nfunction Popup(props) {\r\n\r\n    const {\r\n            datas, \r\n            buttonResetText, \r\n            actionClose, \r\n            actionReset, \r\n            actionSelect,\r\n            setCheckBoxes,\r\n            checkboxesState,\r\n            mode,\r\n        } = props;\r\n\r\n    const handleClickCheckBoxes = (e) => {\r\n        let checkboxes = null;\r\n\r\n        if(mode === 'unique'){\r\n            checkboxes = Array.from(document.getElementsByClassName('option__kingdom'));\r\n        }else{\r\n            checkboxes = Array.from(document.querySelectorAll('input[type=\"checkbox\"]')) \r\n        }\r\n\r\n        let checkBoxesState = [];\r\n        checkboxes.map(elmt => {\r\n            return checkBoxesState.push(elmt.checked);\r\n        });\r\n        setCheckBoxes(checkBoxesState);\r\n    }\r\n\r\n    return (\r\n        <div className=\"popup__container\">\r\n            <div className=\"popup__inner--container\">\r\n            <div className=\"popup__box\">\r\n                <form className=\"popup__form\" enctype=\"multipart/form-data\">\r\n                    <div className=\"popup__heading\">\r\n                        <div  className=\"popup__close\" onClick={e => actionClose(e)}>\r\n                            <AiFillCloseCircle />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"popup__form--section\" >\r\n                        <h4 className=\"popup__option--name\">Options for kingdoms</h4>\r\n                        <div className=\"popup__option--container\">\r\n                            <label className=\"popup__option--label\" htmlFor=\"options-select\">Set options :</label>\r\n                            <select id=\"popup__options--select\" name=\"kingdom-options-set\" onChange={actionSelect}>\r\n                                {mode === '' ?\r\n                                    <option value=\"\" selected>Default</option>\r\n                                    :\r\n                                    <option value=\"\">Default</option>\r\n                                }\r\n                                {mode === 'unique' ? \r\n                                    <option value=\"unique\" selected>Unique</option> \r\n                                    : \r\n                                    <option value=\"unique\" >Unique</option>\r\n                                }\r\n                                {mode === 'combination' ? \r\n                                    <option value=\"combination\" selected>Combination</option>\r\n                                    :\r\n                                    <option value=\"combination\">Combination</option>\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    {Object.keys(datas).map(title => {\r\n                        if(datas[title].type === \"checkbox\"){                            \r\n                            return (\r\n                                <div className=\"popup__form--section \" onClick={handleClickCheckBoxes} onChange={datas[title].onChange} >\r\n                                        <h4 className=\"popup__option--name\" >{title}</h4>\r\n                                        {datas[title].values.map((elmt, index) => {\r\n                                                    return (\r\n                                                        <div className=\"popup__option--container\">\r\n                                                            <label className=\"popup__option--label\" htmlFor={elmt}>{datas[title].displayed[index]}</label>\r\n                                                            <input id={elmt} \r\n                                                                   className={mode === 'unique' ? 'popup__option--input option__kingdom': \"popup__option--input\"} \r\n                                                                   type={mode === \"unique\" ? \"radio\" : \"checkbox\"} \r\n                                                                   name={datas[title].field_name} \r\n                                                                   checked={checkboxesState[index]} \r\n                                                                   value={elmt}\r\n                                                            />\r\n                                                        </div>\r\n                                                    )\r\n                                                \r\n                                            })}\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                        if(datas[title].type === \"radio\"){           \r\n                            return (\r\n                                <div className=\"popup__form--section\">\r\n                                    <h4 className=\"popup__option--name\">{title}</h4>\r\n                                        {datas[title].values.map((elmt,index)=> {\r\n                                                return (\r\n                                                    <div className=\"popup__option--container\">\r\n                                                        <label className=\"popup__option--label\" htmlFor={elmt}>{datas[title].displayed[index]}</label>                \r\n                                                        <input className=\"popup__option--input\" type=\"radio\" id={elmt} name={datas[title].field_name} onChange={datas[title].onChange} value={datas[title].values[index]}/>\r\n                                                    </div>\r\n                                                )\r\n                                        })}\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    })}\r\n                    <button type=\"reset\" className=\"btn popup__button\" onClick={actionReset}>{buttonResetText}</button>\r\n                </form>\r\n            </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Popup;\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\layouts\\Main.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Card.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\User.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\SearchBar.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\api\\Profile.jsx",["361","362"],"async function getProfile(){\r\n    let settings = {\r\n        method : 'GET',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch(`https://test-seven.site/api/profile`, settings);\r\n    let datas = response.json();\r\n    return datas;\r\n}\r\n\r\nasync function updateProfile(form){\r\n    let settings = {\r\n        method: 'PATCH',\r\n        credentials: 'include',\r\n        body: form\r\n    }\r\n\r\n    let response = await fetch('https://test-seven.site/api/profile', settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function deleteProfile(){\r\n    let settings = {\r\n        method: 'DELETE',\r\n        credentials: 'include',\r\n    }\r\n\r\n    let response = await fetch('https://test-seven.site/api/profile', settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function getAvatar(){\r\n    let settings = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    }\r\n\r\n    let response = await fetch('https://test-seven.site/api/profile/avatar', settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n \r\n}\r\n\r\nasync function addAvatar(form){\r\n    let settings = {\r\n        method : 'POST',\r\n        credentials: 'include',\r\n        body: form\r\n    } \r\n    \r\n    let response = await fetch('https://test-seven.site/api/profile/avatar', settings);\r\n    let datas = await response.json();\r\n    return datas;\r\n}\r\n\r\nasync function deleteAvatar(){\r\n    let settings = {\r\n        method : 'PATCH',\r\n        credentials: 'include'\r\n    } \r\n}\r\n\r\nasync function updateAvatar(){\r\n    let settings = {\r\n        method : 'PATCH',\r\n        credentials: 'include'\r\n    }\r\n}\r\n\r\nexport {getProfile, updateProfile, deleteProfile, getAvatar, addAvatar, updateAvatar , deleteAvatar}","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Loader.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\SocialButton.jsx",["363"],"import React from 'react'\r\nimport './SocialButton.css'\r\nconst SocialButton = (props) => {\r\n    const {onClick} = props;\r\n    return (\r\n        <a style={{backgroundColor:props.bgcolor}} href={props.url} className=\"btn btn__social\">\r\n            {props.children}\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default SocialButton;\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Toolbar.jsx",[],["364","365"],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\AddCard.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\PopupContainer.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\NavButton.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Return.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\CheckBox.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\BackButton.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\InputText.jsx",["366"],"import React from 'react'\r\n\r\nconst InputText = (props) => {\r\n    const search = text;\r\n\r\n    if(!props.onChange) props.onChange = () => {return};\r\n    if(!props.onBlur) props.onBlur = () => {return};\r\n\r\n    const {classes,placeholder,onChange,text,onBlur} = props;\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        onChange(e);\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        e.preventDefault();\r\n        onBlur(e);\r\n    } \r\n    return (\r\n        <input className={classes} type=\"text\" placeholder={placeholder} onBlur={handleBlur} onChange={handleChange} value={search} />\r\n    )\r\n}\r\n\r\nexport default InputText\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\StarterDeck.jsx",["367"],"import React from 'react'\r\nimport {AiOutlineEye,AiOutlinePlusCircle} from 'react-icons/ai'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst StarterDeck = (props) => {\r\n    const {title, infos, EC, mode} = props;\r\n    return (\r\n        <li className=\"deck__block\">\r\n            <div className=\"deck__inner--left\">\r\n                <h3 className=\"deck__title\">{title}</h3>\r\n                <p className=\"deck__infos\">{infos}</p>\r\n            </div>\r\n            <div className=\"deck__inner--right\">\r\n                <div className=\"inner__right--text\">\r\n                    <h3 className=\"deck__ec--title\">EC :</h3>\r\n                    <span className=\"deck__ec--value\">{EC}</span>\r\n                </div>\r\n                <div className=\"inner__right--actions\">\r\n                    <div className=\"action\" ><AiOutlineEye/></div>\r\n                    <Link className=\"action\" to=\"/cards\"><AiOutlinePlusCircle/></Link>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default StarterDeck\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\contexts\\CardsContext.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\UserDefault.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\InfiniteList.jsx",["368","369","370","371"],"import {useEffect, useRef, useState} from 'react';\r\nimport LoaderGif from '../img/22-2.gif';\r\n\r\nconst InfiniteList = (props) => {\r\n    /*catch props*/\r\n    const {triggerIndex , children, next, page, size, numPerPage, result} = props;\r\n\r\n    /*constant*/\r\n    let MAX_PAGE = Math.ceil(size / numPerPage);\r\n\r\n    /*variables*/\r\n    let listBottom = '';\r\n    let elmtBottom = '';\r\n\r\n\r\n    /*states*/\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [datas, setDatas] = useState([]);\r\n     \r\n    /*add ref to parent component*/\r\n    let listRef = useRef();\r\n\r\n    /*add ref to child component*/\r\n    let elmtRef = useRef();\r\n\r\n    if(children.length > triggerIndex){\r\n        children[triggerIndex].ref = elmtRef;\r\n    }else if(children.length > 0){\r\n        children[children.length - 1].ref = elmtRef;\r\n    }else{\r\n        console.log(\"error\")\r\n    }\r\n\r\n    const handleScroll = (e) => {\r\n        /*catch the list bottom position in relation to the top of the window*/\r\n        listBottom = listRef.current.getBoundingClientRect().bottom;\r\n\r\n        /*catch the targeted element's bottom position in relation to the top of the window*/\r\n        elmtBottom = elmtRef.current.getBoundingClientRect().bottom;\r\n\r\n        if(elmtBottom <= listBottom){\r\n            setIsLoading(true);\r\n        }else{\r\n            setIsLoading(false);\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isLoading === true && page < MAX_PAGE){\r\n            next(page + 1);\r\n        }\r\n\r\n    },[isLoading]);\r\n\r\n    useEffect(() => {\r\n        setDatas(prevstate => {\r\n            let newDatas = [...prevstate, ...children];   \r\n            return newDatas;\r\n        });\r\n    },[result]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll, true);   \r\n        setIsLoading(false);\r\n        return () => window.removeEventListener('scroll', handleScroll); \r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <ul ref={listRef} className=\"subdeck list__content layout layout__1 mb-2\">\r\n                {datas}\r\n                {isLoading === true ? <img className=\"loader__image my-4\" src={LoaderGif}/> : null}\r\n            </ul>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfiniteList;\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\HOC\\withInfiniteScroll.jsx",["372","373","374","375"],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\InfiniteListTwo.jsx",["376","377","378","379","380","381","382","383"],"import React,{useEffect, useRef, useState } from 'react';\r\nimport LoaderGif from '../img/22-2.gif';\r\nimport CardsCounter from './Cards__toolbox/CardsCounter';\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\nfunction InfiniteListTwo(props) {\r\n    \r\n    const { classesContainer, \r\n            classesElement,\r\n            datas,\r\n            size,\r\n            numPerPage,\r\n            page,\r\n            setPage,\r\n            triggerAt\r\n          } = props;\r\n\r\n    /*states*/\r\n    const [isLoadingList, setIsLoadingList] = useState(false);\r\n    const [imagesLoading, setImagesLoading] = useState({});\r\n\r\n    /*constantes*/\r\n    const MAX_PAGE = Math.ceil(size / numPerPage)\r\n\r\n    /*variables*/\r\n    let listBottom = 0;\r\n    let elmtBottom = 0;\r\n    let triggerIndex = 0;\r\n    let isMountedOrUpdated = false;\r\n\r\n    /* refs */\r\n    let listRef = useRef();\r\n    let elmtRef = useRef();\r\n\r\n    /*handlers*/\r\n    const handleScroll = (e) => {\r\n        listBottom = listRef.current.getBoundingClientRect().bottom;\r\n        elmtBottom = elmtRef.current.getBoundingClientRect().bottom;\r\n\r\n        if(page < MAX_PAGE && elmtBottom < listBottom){\r\n            setIsLoadingList(true);\r\n        }\r\n\r\n        if(page === MAX_PAGE){\r\n            setIsLoadingList(false);\r\n        }\r\n\r\n    }\r\n\r\n    const handleImageLoading = (e) => {\r\n        if(e.target.id && e.target.id.startsWith(\"page\")){\r\n            setImagesLoading(prevstate => {\r\n                let newObj = {...prevstate, [e.target.id]: true};\r\n                return newObj;\r\n            })\r\n        }\r\n    }\r\n\r\n    /*use effect*/\r\n    useEffect(() => {\r\n            if(isLoadingList === true && page < MAX_PAGE){\r\n                setPage()   \r\n            }  \r\n    },[isLoadingList]);\r\n\r\n    useEffect(() => {\r\n        if(isLoadingList === true){\r\n            setIsLoadingList(false);\r\n        }\r\n\r\n        if(page === MAX_PAGE && datas.length === size - 1){\r\n            setIsLoadingList(false);\r\n        }\r\n\r\n        if(!isMountedOrUpdated){\r\n            if(datas.length < triggerIndex){\r\n                triggerIndex = datas.length - 1;  \r\n            }else if( datas.length >= triggerIndex){\r\n                triggerIndex = triggerAt * page;\r\n            }\r\n            \r\n        }\r\n        isMountedOrUpdated = true;\r\n    },[datas]);\r\n\r\n    useEffect(() => {\r\n        let newObj = {}\r\n        if(datas){\r\n            datas.map(elmt => {\r\n                newObj[`page__${elmt.id}`] = false;\r\n            })\r\n            setImagesLoading(newObj)\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", handleScroll,true);\r\n        return window.removeEventListener(\"scroll\", handleScroll);\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <ul ref={listRef} className={classesContainer ? classesContainer : \"infinite__container\"}  onLoad={handleImageLoading}>\r\n                {\r\n                    datas.length > 0 &&\r\n                    datas.map((elmt, index) => {\r\n                        return (\r\n                                <li key={index}\r\n                                    ref={elmtRef} \r\n                                    className={classesElement ? classesElement : \"infinite__element\"}\r\n                                >\r\n                                        <img \r\n                                            id={`page__${elmt.id}`}\r\n                                            className={imagesLoading[\"page__\"+elmt.id] === true ? \"card__image\" : \"d-none\"} \r\n                                            src={process.env.REACT_APP_CARDS_STATIC + elmt.image_path} \r\n                                        />\r\n                                        <CardsCounter \r\n                                                classes={imagesLoading[\"page__\"+elmt.id] === true ? \"cards__counter\" : \"d-none\"} \r\n                                                value={elmt.qty} \r\n                                        /> \r\n                                        <img \r\n                                            id={`loader__${elmt.id}`}\r\n                                            className={imagesLoading[\"page__\"+elmt.id] === false ? \"card__image\" : \"d-none\"}\r\n                                            src={LoaderGif}  \r\n                                        />\r\n                                </li>\r\n                            )\r\n                        })\r\n                }\r\n            </ul>\r\n            <img className={isLoadingList === true ? \"loader__image\":\"d-none\" } src={LoaderGif}/>\r\n        </>)\r\n}\r\n\r\nexport default InfiniteListTwo;\r\n","C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\Cards__toolbox\\CardsCounter.jsx",[],"C:\\Users\\pablo\\Desktop\\seven-fallen-app\\src\\components\\InfiniteListThree.jsx",["384","385","386"],"import {useState,useRef, useEffect} from 'react';\r\n\r\n/*functions*/\r\nfunction throttling(callback, delay) {\r\n    let timer = Date.now();\r\n\r\n    return function () {\r\n        if(timer + delay - Date.now() < 0){\r\n            callback();\r\n            timer = Date.now()\r\n        }\r\n    }\r\n}\r\n\r\n/*components*/\r\nfunction LoaderList(props) {\r\n    const {classes, url} = props;\r\n    return(\r\n        <img className={classes ? classes : \"infinite__scroll--loader\"} src={url} alt=\"loader\"/>\r\n    )\r\n}\r\n\r\nconst InfiniteListThree = (props) => {\r\n    const {\r\n            numberPerPage,\r\n            size,page,\r\n            setPage, \r\n            triggerAt,\r\n            children,\r\n            datas,\r\n            loaderListClasses, \r\n            loaderList\r\n        } = props;\r\n    \r\n\r\n    /*states*/\r\n    const [isLoaded, setIsLoaded] = useState(true);\r\n\r\n    /*constantes*/\r\n    const MAX_PAGES = typeof size === 'number' ? Math.ceil(size / numberPerPage) : 0;\r\n\r\n    /*refs*/\r\n    let listRef = useRef();\r\n    let elmtRef = useRef();\r\n\r\n    /*variables*/\r\n    let listBottom = 0;\r\n    let elmtBottom = 0;\r\n\r\n    if(children.type === 'ul'){\r\n        children.ref = listRef;\r\n    }\r\n\r\n    if(typeof triggerAt === 'number' && children.props.children !== null){\r\n\r\n        if(triggerAt <= children.props.children.length - 1 && page < MAX_PAGES){\r\n            let newIndex = children.props.children.length - numberPerPage + triggerAt;  \r\n            children.props.children[newIndex].ref = elmtRef;\r\n        }\r\n        \r\n        if(page === MAX_PAGES){\r\n            children.props.children[children.props.children.length - 1].ref = elmtRef;\r\n        }\r\n\r\n    }\r\n\r\n    /*handlers*/\r\n    const handleScroll = (e) => {\r\n        if(listRef.current && elmtRef.current){\r\n            listBottom = Number(listRef.current.getBoundingClientRect().bottom);\r\n            elmtBottom = Number(elmtRef.current.getBoundingClientRect().bottom);\r\n\r\n            if(listBottom > elmtBottom && page < MAX_PAGES){\r\n                setIsLoaded(false);\r\n                return \r\n            }\r\n        }\r\n    }\r\n            \r\n    /*effect*/\r\n\r\n    useEffect(() => {\r\n        if(isLoaded === false){\r\n            setIsLoaded(true);\r\n        }\r\n\r\n    },[datas])\r\n\r\n    useEffect(() => {\r\n\r\n        if(isLoaded === false && page < MAX_PAGES){\r\n            setPage(page + 1);\r\n        }\r\n\r\n        if(isLoaded === false && page === MAX_PAGES){\r\n            setIsLoaded(true);\r\n        }\r\n\r\n    }, [isLoaded]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll',handleScroll, true);\r\n        return window.addEventListener('scroll',handleScroll);\r\n    });\r\n\r\n    return (\r\n        <>  \r\n            {children}\r\n            <LoaderList classes={!isLoaded ? loaderListClasses : \"d-none\"} url={loaderList}/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default InfiniteListThree;\r\n",{"ruleId":"387","replacedBy":"388"},{"ruleId":"389","replacedBy":"390"},{"ruleId":"391","severity":1,"message":"392","line":12,"column":8,"nodeType":"393","messageId":"394","endLine":12,"endColumn":14},{"ruleId":"391","severity":1,"message":"395","line":13,"column":8,"nodeType":"393","messageId":"394","endLine":13,"endColumn":14},{"ruleId":"391","severity":1,"message":"396","line":14,"column":8,"nodeType":"393","messageId":"394","endLine":14,"endColumn":14},{"ruleId":"391","severity":1,"message":"397","line":27,"column":8,"nodeType":"393","messageId":"394","endLine":27,"endColumn":21},{"ruleId":"391","severity":1,"message":"398","line":31,"column":8,"nodeType":"393","messageId":"394","endLine":31,"endColumn":18},{"ruleId":"391","severity":1,"message":"399","line":35,"column":8,"nodeType":"393","messageId":"394","endLine":35,"endColumn":19},{"ruleId":"391","severity":1,"message":"400","line":39,"column":58,"nodeType":"393","messageId":"394","endLine":39,"endColumn":75},{"ruleId":"391","severity":1,"message":"401","line":39,"column":96,"nodeType":"393","messageId":"394","endLine":39,"endColumn":111},{"ruleId":"391","severity":1,"message":"402","line":39,"column":113,"nodeType":"393","messageId":"394","endLine":39,"endColumn":127},{"ruleId":"403","severity":1,"message":"404","line":155,"column":13,"nodeType":"405","endLine":177,"endColumn":4},{"ruleId":"391","severity":1,"message":"406","line":38,"column":11,"nodeType":"393","messageId":"394","endLine":38,"endColumn":23},{"ruleId":"403","severity":1,"message":"404","line":164,"column":15,"nodeType":"405","endLine":182,"endColumn":6},{"ruleId":"403","severity":1,"message":"407","line":182,"column":7,"nodeType":"408","endLine":182,"endColumn":15,"suggestions":"409"},{"ruleId":"403","severity":1,"message":"404","line":184,"column":15,"nodeType":"405","endLine":187,"endColumn":6},{"ruleId":"403","severity":1,"message":"410","line":187,"column":7,"nodeType":"408","endLine":187,"endColumn":9,"suggestions":"411"},{"ruleId":"412","severity":1,"message":"413","line":210,"column":49,"nodeType":"405","messageId":"414","endLine":210,"endColumn":51},{"ruleId":"403","severity":1,"message":"404","line":261,"column":15,"nodeType":"405","endLine":268,"endColumn":6},{"ruleId":"403","severity":1,"message":"404","line":270,"column":15,"nodeType":"405","endLine":291,"endColumn":6},{"ruleId":"403","severity":1,"message":"415","line":32,"column":8,"nodeType":"408","endLine":32,"endColumn":19,"suggestions":"416"},{"ruleId":"403","severity":1,"message":"404","line":102,"column":15,"nodeType":"405","endLine":121,"endColumn":6},{"ruleId":"403","severity":1,"message":"417","line":121,"column":7,"nodeType":"408","endLine":121,"endColumn":9,"suggestions":"418"},{"ruleId":"391","severity":1,"message":"419","line":29,"column":12,"nodeType":"393","messageId":"394","endLine":29,"endColumn":21},{"ruleId":"403","severity":1,"message":"404","line":62,"column":15,"nodeType":"405","endLine":84,"endColumn":6},{"ruleId":"403","severity":1,"message":"420","line":84,"column":7,"nodeType":"408","endLine":84,"endColumn":9,"suggestions":"421"},{"ruleId":"391","severity":1,"message":"422","line":27,"column":21,"nodeType":"393","messageId":"394","endLine":27,"endColumn":31},{"ruleId":"391","severity":1,"message":"423","line":46,"column":9,"nodeType":"393","messageId":"394","endLine":46,"endColumn":16},{"ruleId":"403","severity":1,"message":"424","line":164,"column":26,"nodeType":"393","endLine":164,"endColumn":33},{"ruleId":"403","severity":1,"message":"404","line":169,"column":15,"nodeType":"405","endLine":194,"endColumn":6},{"ruleId":"403","severity":1,"message":"417","line":194,"column":7,"nodeType":"408","endLine":194,"endColumn":9,"suggestions":"425"},{"ruleId":"391","severity":1,"message":"426","line":1,"column":30,"nodeType":"393","messageId":"394","endLine":1,"endColumn":36},{"ruleId":"391","severity":1,"message":"427","line":16,"column":8,"nodeType":"393","messageId":"394","endLine":16,"endColumn":23},{"ruleId":"391","severity":1,"message":"428","line":27,"column":26,"nodeType":"393","messageId":"394","endLine":27,"endColumn":41},{"ruleId":"391","severity":1,"message":"429","line":29,"column":27,"nodeType":"393","messageId":"394","endLine":29,"endColumn":43},{"ruleId":"391","severity":1,"message":"430","line":36,"column":12,"nodeType":"393","messageId":"394","endLine":36,"endColumn":23},{"ruleId":"403","severity":1,"message":"404","line":49,"column":15,"nodeType":"405","endLine":88,"endColumn":6},{"ruleId":"412","severity":1,"message":"413","line":77,"column":60,"nodeType":"405","messageId":"414","endLine":77,"endColumn":62},{"ruleId":"412","severity":1,"message":"431","line":78,"column":55,"nodeType":"405","messageId":"432","endLine":78,"endColumn":57},{"ruleId":"403","severity":1,"message":"433","line":88,"column":7,"nodeType":"408","endLine":88,"endColumn":13,"suggestions":"434"},{"ruleId":"403","severity":1,"message":"435","line":94,"column":8,"nodeType":"408","endLine":94,"endColumn":22,"suggestions":"436"},{"ruleId":"412","severity":1,"message":"413","line":100,"column":47,"nodeType":"405","messageId":"414","endLine":100,"endColumn":49},{"ruleId":"403","severity":1,"message":"437","line":106,"column":8,"nodeType":"408","endLine":106,"endColumn":34,"suggestions":"438"},{"ruleId":"403","severity":1,"message":"439","line":106,"column":9,"nodeType":"440","endLine":106,"endColumn":33},{"ruleId":"441","severity":1,"message":"442","line":7,"column":5,"nodeType":"443","messageId":"444","endLine":7,"endColumn":15},{"ruleId":"445","severity":1,"message":"446","line":9,"column":28,"nodeType":"447","messageId":"448","endLine":9,"endColumn":29,"suggestions":"449"},{"ruleId":"445","severity":1,"message":"446","line":9,"column":53,"nodeType":"447","messageId":"448","endLine":9,"endColumn":54,"suggestions":"450"},{"ruleId":"391","severity":1,"message":"392","line":2,"column":8,"nodeType":"393","messageId":"394","endLine":2,"endColumn":14},{"ruleId":"403","severity":1,"message":"451","line":14,"column":32,"nodeType":"452","endLine":14,"endColumn":63},{"ruleId":"403","severity":1,"message":"404","line":21,"column":15,"nodeType":"405","endLine":33,"endColumn":6},{"ruleId":"403","severity":1,"message":"453","line":33,"column":7,"nodeType":"408","endLine":33,"endColumn":16,"suggestions":"454"},{"ruleId":"391","severity":1,"message":"455","line":1,"column":16,"nodeType":"393","messageId":"394","endLine":1,"endColumn":25},{"ruleId":"391","severity":1,"message":"426","line":1,"column":27,"nodeType":"393","messageId":"394","endLine":1,"endColumn":33},{"ruleId":"412","severity":1,"message":"431","line":66,"column":51,"nodeType":"405","messageId":"432","endLine":66,"endColumn":53},{"ruleId":"391","severity":1,"message":"456","line":60,"column":9,"nodeType":"393","messageId":"394","endLine":60,"endColumn":17},{"ruleId":"391","severity":1,"message":"456","line":67,"column":9,"nodeType":"393","messageId":"394","endLine":67,"endColumn":17},{"ruleId":"391","severity":1,"message":"457","line":4,"column":12,"nodeType":"393","messageId":"394","endLine":4,"endColumn":19},{"ruleId":"387","replacedBy":"458"},{"ruleId":"389","replacedBy":"459"},{"ruleId":"460","severity":1,"message":"461","line":4,"column":20,"nodeType":"393","messageId":"462","endLine":4,"endColumn":24},{"ruleId":"391","severity":1,"message":"463","line":6,"column":30,"nodeType":"393","messageId":"394","endLine":6,"endColumn":34},{"ruleId":"403","severity":1,"message":"464","line":54,"column":7,"nodeType":"408","endLine":54,"endColumn":18,"suggestions":"465"},{"ruleId":"403","severity":1,"message":"466","line":61,"column":7,"nodeType":"408","endLine":61,"endColumn":15,"suggestions":"467"},{"ruleId":"403","severity":1,"message":"468","line":67,"column":8,"nodeType":"408","endLine":67,"endColumn":10,"suggestions":"469"},{"ruleId":"470","severity":1,"message":"471","line":73,"column":39,"nodeType":"472","endLine":73,"endColumn":92},{"ruleId":"391","severity":1,"message":"473","line":5,"column":13,"nodeType":"393","messageId":"394","endLine":5,"endColumn":17},{"ruleId":"391","severity":1,"message":"474","line":5,"column":19,"nodeType":"393","messageId":"394","endLine":5,"endColumn":31},{"ruleId":"391","severity":1,"message":"475","line":9,"column":12,"nodeType":"393","messageId":"394","endLine":9,"endColumn":19},{"ruleId":"391","severity":1,"message":"476","line":9,"column":21,"nodeType":"393","messageId":"394","endLine":9,"endColumn":31},{"ruleId":"403","severity":1,"message":"477","line":65,"column":7,"nodeType":"408","endLine":65,"endColumn":22,"suggestions":"478"},{"ruleId":"403","severity":1,"message":"479","line":78,"column":32,"nodeType":"480","endLine":78,"endColumn":48},{"ruleId":"403","severity":1,"message":"481","line":84,"column":30,"nodeType":"447","endLine":84,"endColumn":34},{"ruleId":"412","severity":1,"message":"413","line":90,"column":28,"nodeType":"405","messageId":"414","endLine":90,"endColumn":30},{"ruleId":"403","severity":1,"message":"482","line":95,"column":8,"nodeType":"408","endLine":95,"endColumn":10,"suggestions":"483"},{"ruleId":"470","severity":1,"message":"471","line":113,"column":41,"nodeType":"472","endLine":117,"endColumn":43},{"ruleId":"470","severity":1,"message":"471","line":122,"column":41,"nodeType":"472","endLine":126,"endColumn":43},{"ruleId":"470","severity":1,"message":"471","line":132,"column":13,"nodeType":"472","endLine":132,"endColumn":98},{"ruleId":"391","severity":1,"message":"484","line":4,"column":10,"nodeType":"393","messageId":"394","endLine":4,"endColumn":20},{"ruleId":"403","severity":1,"message":"485","line":87,"column":7,"nodeType":"408","endLine":87,"endColumn":14,"suggestions":"486"},{"ruleId":"403","severity":1,"message":"487","line":99,"column":8,"nodeType":"408","endLine":99,"endColumn":18,"suggestions":"488"},"no-native-reassign",["489"],"no-negated-in-lhs",["490"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","'Logout' is defined but never used.","'SubscribePage' is defined but never used.","'DeckCreate' is defined but never used.","'SubDeckPage' is defined but never used.","'getCapacitiesList' is defined but never used.","'getSubdeckCards' is defined but never used.","'getClassesList' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'kingdomsList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'decksList.message'. Either include it or remove the dependency array.","ArrayExpression",["491"],"React Hook useEffect has a missing dependency: 'reqOpt'. Either include it or remove the dependency array.",["492"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["493"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["494"],"'cardsList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'endUrl' and 'id'. Either include them or remove the dependency array.",["495"],"'setOptions' is assigned a value but never used.","'pageRef' is assigned a value but never used.","The ref value 'deckName.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'deckName.current' to a variable inside the effect, and use that variable in the cleanup function.",["496"],"'useRef' is defined but never used.","'InfiniteListTwo' is defined but never used.","'setFlashMessage' is assigned a value but never used.","'setCardsResponse' is assigned a value but never used.","'imageLoaded' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'completeList', 'endUrl', and 'id'. Either include them or remove the dependency array. You can also do a functional update 'setCompleteList(c => ...)' if you only need 'completeList' in the 'setCompleteList' call.",["497"],"React Hook useEffect has a missing dependency: 'loaded'. Either include it or remove the dependency array.",["498"],"React Hook useEffect has a missing dependency: 'cardsResponse.message'. Either include it or remove the dependency array.",["499"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","no-dupe-keys","Duplicate key 'regex_name'.","ObjectExpression","unexpected","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["500","501"],["502","503"],"Assignments to the 'afterClasses' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'nextPage'. Either include it or remove the dependency array.",["504"],"'useEffect' is defined but never used.","'settings' is assigned a value but never used.","'onClick' is assigned a value but never used.",["489"],["490"],"no-use-before-define","'text' was used before it was defined.","usedBeforeDefined","'mode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'MAX_PAGE', 'next', and 'page'. Either include them or remove the dependency array.",["505"],"React Hook useEffect has a missing dependency: 'children'. Either include it or remove the dependency array.",["506"],"React Hook useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.",["507"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'next' is assigned a value but never used.","'triggerIndex' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'MAX_PAGE', 'page', and 'setPage'. Either include them or remove the dependency array.",["508"],"Assignments to the 'triggerIndex' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression","Assignments to the 'isMountedOrUpdated' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'datas'. Either include it or remove the dependency array.",["509"],"'throttling' is defined but never used.","React Hook useEffect has a missing dependency: 'isLoaded'. Either include it or remove the dependency array.",["510"],"React Hook useEffect has missing dependencies: 'MAX_PAGES', 'page', and 'setPage'. Either include them or remove the dependency array.",["511"],"no-global-assign","no-unsafe-negation",{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"518","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"messageId":"529","fix":"530","desc":"531"},{"messageId":"532","fix":"533","desc":"534"},{"messageId":"529","fix":"535","desc":"531"},{"messageId":"532","fix":"536","desc":"534"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},"Update the dependencies array to be: [decksList.message, reqOpt]",{"range":"553","text":"554"},"Update the dependencies array to be: [reqOpt]",{"range":"555","text":"556"},"Update the dependencies array to be: [isClicked, props.history]",{"range":"557","text":"558"},"Update the dependencies array to be: [id]",{"range":"559","text":"560"},"Update the dependencies array to be: [endUrl, id]",{"range":"561","text":"562"},{"range":"563","text":"560"},"Update the dependencies array to be: [completeList, endUrl, id, page]",{"range":"564","text":"565"},"Update the dependencies array to be: [completeList, loaded]",{"range":"566","text":"567"},"Update the dependencies array to be: [cardsResponse.message]",{"range":"568","text":"569"},"removeEscape",{"range":"570","text":"571"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"572","text":"573"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"574","text":"571"},{"range":"575","text":"573"},"Update the dependencies array to be: [nextPage, options]",{"range":"576","text":"577"},"Update the dependencies array to be: [MAX_PAGE, isLoading, next, page]",{"range":"578","text":"579"},"Update the dependencies array to be: [children, result]",{"range":"580","text":"581"},"Update the dependencies array to be: [handleScroll]",{"range":"582","text":"583"},"Update the dependencies array to be: [MAX_PAGE, isLoadingList, page, setPage]",{"range":"584","text":"585"},"Update the dependencies array to be: [datas]",{"range":"586","text":"587"},"Update the dependencies array to be: [datas, isLoaded]",{"range":"588","text":"589"},"Update the dependencies array to be: [MAX_PAGES, isLoaded, page, setPage]",{"range":"590","text":"591"},[5686,5694],"[decksList.message, reqOpt]",[5820,5822],"[reqOpt]",[852,863],"[isClicked, props.history]",[3475,3477],"[id]",[2283,2285],"[endUrl, id]",[5998,6000],[3269,3275],"[completeList, endUrl, id, page]",[3382,3396],"[completeList, loaded]",[3692,3718],"[cardsResponse.message]",[359,360],"",[359,359],"\\",[384,385],[384,384],[773,782],"[nextPage, options]",[1501,1512],"[MAX_PAGE, isLoading, next, page]",[1683,1691],"[children, result]",[1899,1901],"[handleScroll]",[1722,1737],"[MAX_PAGE, isLoadingList, page, setPage]",[2523,2525],"[datas]",[2214,2221],"[datas, isLoaded]",[2456,2466],"[MAX_PAGES, isLoaded, page, setPage]"]